{
  "stories": [
    {
      "by": "NickRandom",
      "descendants": 0,
      "id": 31683134,
      "score": 1,
      "time": 1654791537,
      "title": "Updating our understanding of Earth’s architecture",
      "type": "story",
      "url": "https://www.adelaide.edu.au/newsroom/news/list/2022/06/07/updating-our-understanding-of-earths-architecture"
    },
    {
      "by": "stalfosknight",
      "descendants": 0,
      "id": 31683124,
      "score": 1,
      "time": 1654791501,
      "title": "Report says Microsoft will require SSDs for new PCs soon, but is it a big deal?",
      "type": "story",
      "url": "https://arstechnica.com/gadgets/2022/06/analyst-claims-microsoft-is-pushing-to-require-ssds-in-new-windows-pcs/"
    },
    {
      "by": "PaulHoule",
      "descendants": 0,
      "id": 31683104,
      "score": 1,
      "time": 1654791405,
      "title": "Asteroid Ryugu study informs our understanding of solar system formation",
      "type": "story",
      "url": "https://phys.org/news/2022-06-solar-formation-asteroid-ryugu.html"
    },
    {
      "by": "jfkimmes",
      "descendants": 0,
      "id": 31683049,
      "score": 2,
      "time": 1654791205,
      "title": "Russia unexpectedly poor at cyberwar, say European military heads",
      "type": "story",
      "url": "https://www.straitstimes.com/world/europe/russia-unexpectedly-poor-at-cyberwar-say-european-military-heads"
    },
    {
      "by": "arein3",
      "descendants": 0,
      "id": 31683043,
      "score": 1,
      "text": "People like microservices because they offer potential in the long run, and the most often mentioned advantages are scalability and decoupling parts of your application.<p>However they come with a lot of drawbacks as well.\nYou have to architect your application and add a ton of features to make microservices work correctly (infrastructure, deployments, tracing, communication between microservices, caching and a few more)<p>However most of these concerns disappear or become less complex in a monolith architecture.<p>The middle ground seems to be a monolith architecture with clearly separated interfaces and database. \nThe interface separation can be enforced at compile time (ex. compile each interface implementation separately from the rest of the code). \nThe database can be also split by having multiple databases, but it is easy to have a shared cache, without having to worry about synchronizing databases&#x2F;cache between microservices. \nIn this way it would be easy to extract an interface in a separate microservice when it&#x27;s needed later, and it would enable a lot of speed at the start.<p>Let me know about pros&#x2F;cons of this approach, or if you have experience with something similar.<p>It can be called a decoupled monolith architecture.",
      "time": 1654791175,
      "title": "Get the advantages of microservices without the drawbacks",
      "type": "story"
    },
    {
      "by": "Tozen",
      "descendants": 0,
      "id": 31683042,
      "score": 1,
      "time": 1654791171,
      "title": "AI to help study first images from James Webb Space Telescope",
      "type": "story",
      "url": "https://www.theregister.com/2022/06/09/ai_jwst_morpheus/"
    },
    {
      "by": "noch",
      "descendants": 0,
      "id": 31683030,
      "score": 1,
      "time": 1654791124,
      "title": "Measuring Developer Productivity in Python and Rust with Project Euler",
      "type": "story",
      "url": "https://thork.net/posts/20211015_how_effective_prototyping_euler50/"
    },
    {
      "by": "vitabenes",
      "descendants": 0,
      "id": 31683020,
      "score": 1,
      "time": 1654791096,
      "title": "India’s first virtual influencer Kyra",
      "type": "story",
      "url": "https://tech.hindustantimes.com/tech/news/meet-india-s-first-virtual-influencer-kyra-71654612588398.html"
    },
    {
      "by": "jbegley",
      "descendants": 0,
      "id": 31683017,
      "score": 2,
      "time": 1654791083,
      "title": "ICE Searched LexisNexis Database Over a Million Times in Just 7 Months",
      "type": "story",
      "url": "https://theintercept.com/2022/06/09/ice-lexisnexis-mass-surveillances/"
    },
    {
      "by": "Something1234",
      "descendants": 0,
      "id": 31683008,
      "score": 2,
      "time": 1654791055,
      "title": "Software Companies Die (1995) [pdf]",
      "type": "story",
      "url": "https://homepages.uc.edu/~thomam/Articles/HowSoftwareCompaniesDie.pdf"
    }
  ]
}