{
  "stories": [
    {
      "by": "ingve",
      "descendants": 0,
      "id": 29944727,
      "score": 1,
      "time": 1642234407,
      "title": "AMD’s V-Cache Tested: The Latency Teaser",
      "type": "story",
      "url": "https://chipsandcheese.com/2022/01/14/amds-v-cache-tested-the-latency-teaser/"
    },
    {
      "by": "rustoo",
      "descendants": 0,
      "id": 29944725,
      "score": 1,
      "time": 1642234395,
      "title": "Workplace Adjustments for Autistic Employees: What Is ‘Reasonable’?",
      "type": "story",
      "url": "https://link.springer.com/article/10.1007/s10803-021-05413-x"
    },
    {
      "by": "zubakskees",
      "descendants": 0,
      "id": 29944699,
      "score": 1,
      "time": 1642234196,
      "title": "Twitter Plays Tetris",
      "type": "story",
      "url": "https://twitter.com/twitrisbot"
    },
    {
      "by": "prabhupant",
      "descendants": 0,
      "id": 29944691,
      "score": 1,
      "time": 1642234127,
      "title": "Argo and the Life of Ernest Hemingway",
      "type": "story",
      "url": "https://prabhupant.substack.com/p/argo-and-the-life-of-ernest-hemingway"
    },
    {
      "by": "keleftheriou",
      "descendants": 1,
      "id": 29944684,
      "kids": [
        29944718
      ],
      "score": 1,
      "time": 1642234048,
      "title": "Update on dating apps distributed on the App Store in the Netherlands",
      "type": "story",
      "url": "https://developer.apple.com/news/?id=mbbs4zql"
    },
    {
      "by": "pjmlp",
      "descendants": 0,
      "id": 29944665,
      "score": 1,
      "time": 1642233898,
      "title": "Using the GCC Static Analyzer on the D Programming Language",
      "type": "story",
      "url": "https://dlang.org/blog/2022/01/14/using-the-gcc-static-analyzer-on-the-d-programming-language/"
    },
    {
      "by": "ammarahmed6506",
      "descendants": 0,
      "id": 29944656,
      "score": 2,
      "time": 1642233776,
      "title": "Scoped Storage in React Native: New Android 10 API for File System Access",
      "type": "story",
      "url": "https://blog.notesnook.com/scoped-storage-in-react-native/"
    },
    {
      "by": "rustoo",
      "descendants": 0,
      "id": 29944614,
      "score": 2,
      "time": 1642233365,
      "title": "Chewing to Stay Slim: How to Savor Your Food Better and Dodge Weight Gain, Too",
      "type": "story",
      "url": "https://www.waseda.jp/top/en/news/75184"
    },
    {
      "by": "pabs3",
      "descendants": 0,
      "id": 29944598,
      "score": 2,
      "time": 1642233215,
      "title": "Fedora Retiring ARMv7 Support",
      "type": "story",
      "url": "https://fedoraproject.org/wiki/Changes/RetireARMv7"
    },
    {
      "by": "dbquest",
      "descendants": 0,
      "id": 29944562,
      "score": 1,
      "text": "Any suggestions of databases with the following Use cases:\n1. Database supporting 3 to 4 terabytes of data that has fast read, slow updates&#x2F;deletes (taking a couple of seconds to delete is fine).\n2. Sql queries are scheduled to run every 15 minutes which dumps data from delta lake to another database (this is the db this post is about) to update&#x2F;delete tables in that database.\n3. Those tables have heavy reads.\n4. While the tables are being updated some rows are being updated&#x2F;deleted(could also be no rows updated) and at the same time reads are being performed. \nAggregations are being performed on those rows. How do we ensure that the read performed on the tables only aggregate the data after the rows are updated i.e. no intermediate results?\nShould this be atomic?<p>|delta lake|   ==sql queries==&gt;  | db we need|<p>We wanted to use Clickhouse (as &quot;db we need&quot; in above diagram) but its update&#x2F;delete is actually done with garbage collection (it&#x27;s done at some point but we don&#x27;t know when).<p>Any suggested databases? Given that we needed fast read speed we considered olap databases e.g. druid, pinot.",
      "time": 1642232761,
      "title": "Any suggested databases with fast read slow updates/deletes",
      "type": "story"
    }
  ]
}