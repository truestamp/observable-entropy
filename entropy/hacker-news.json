{
  "stories": [
    {
      "by": "theovermage",
      "descendants": 0,
      "id": 31920065,
      "score": 1,
      "time": 1656510577,
      "title": "To the Fediverse – search for a fediverse instance",
      "type": "story",
      "url": "https://www.fediverse.to"
    },
    {
      "by": "theovermage",
      "descendants": 0,
      "id": 31920051,
      "score": 1,
      "time": 1656510527,
      "title": "Create a series of posts with navigation in Jekyll",
      "type": "story",
      "url": "https://www.ayushsharma.in/2022/02/creating-article-series-posts-navigation-jekyll"
    },
    {
      "by": "theovermage",
      "descendants": 0,
      "id": 31920050,
      "score": 1,
      "time": 1656510516,
      "title": "A practical guide to light and dark mode in Bootstrap 5 and Jekyll",
      "type": "story",
      "url": "https://www.ayushsharma.in/2022/01/practical-light-dark-mode-jekyll-bootstrap5"
    },
    {
      "by": "pupeno",
      "descendants": 0,
      "id": 31920047,
      "score": 1,
      "time": 1656510495,
      "title": "Show HN: I wrote a book on how to hire and manage remote teams",
      "type": "story",
      "url": "https://pablofernandez.tech/how-to-hire-and-manage-remote-teams/"
    },
    {
      "by": "newsoul",
      "descendants": 0,
      "id": 31920038,
      "score": 1,
      "text": "There is always a tussle going on between functional vs imperative language people.<p>But nowadays most languages are mixed paradigm. Still there are differences.<p>Functional people give arguments like:<p>1. Code is easy to reason about<p>2. Can be verified easily and less prone to errors<p>3. Use mutation only when necessary, not as a default.<p>Imperative people say:<p>1. More efficient as close to the machine<p>2. More space efficient hence faster. (although functional languages can be as fast with compiler optimisations)<p>Functional languages are used in industry now at large scale e.g: Jane Street, Twitter, etc. Imperative language has always been used in industries. I bring up industries because it proves that the languages are scalable.<p>Functional programming experts say that their code is efficient because the compiler translates it to an efficient representation on the CPU. They have TCO and other things. But they don&#x27;t mutate data and hence every function call creates a new data in memory taking up space. How do they overcome that?<p>Also we can switch between imperative and functional implementations. Basically an algorithm can be implemented eitherwise.<p>Now my question is where do I learn about these nitty gritty&#x27;s? Should I read about compilers more? Or systems? Or what?<p>Can you suggest books&#x2F;blogs&#x2F;courses?",
      "time": 1656510461,
      "title": "Ask HN: Functional vs. Imperative Implementation of Algorithms",
      "type": "story"
    },
    {
      "by": "george3d6",
      "descendants": 0,
      "id": 31920036,
      "score": 1,
      "time": 1656510450,
      "title": "Differences in Civic and Legal Attitudes Towards Drugs",
      "type": "story",
      "url": "https://www.epistem.ink/p/differences-in-civic-and-legal-attitudes"
    },
    {
      "by": "ghoulishly",
      "descendants": 0,
      "id": 31920032,
      "score": 1,
      "time": 1656510440,
      "title": "And Then Steve Said, ‘Let There Be an iPhone’ (2013)",
      "type": "story",
      "url": "https://www.nytimes.com/2013/10/06/magazine/and-then-steve-said-let-there-be-an-iphone.html"
    },
    {
      "by": "doener",
      "descendants": 0,
      "id": 31920028,
      "score": 1,
      "time": 1656510430,
      "title": "The surprising revival of eastern Germany",
      "type": "story",
      "url": "https://www.ft.com/content/f1d0e732-d523-40db-b753-ae404498dc7a"
    },
    {
      "by": "ldoughty",
      "descendants": 0,
      "id": 31920027,
      "score": 1,
      "time": 1656510430,
      "title": "6174 – Kaprekar's Constant",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/6174_(number)"
    },
    {
      "by": "kavir",
      "descendants": 0,
      "id": 31920023,
      "score": 1,
      "time": 1656510395,
      "title": "Product growth and community lessons from Musically's (TikTok) founder",
      "type": "story",
      "url": "https://thediscourse.substack.com/p/the-discourse-2-product-growth-and"
    }
  ]
}