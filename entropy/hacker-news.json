{
  "stories": [
    null,
    null,
    {
      "by": "kiyanwang",
      "descendants": 0,
      "id": 28667141,
      "score": 1,
      "time": 1632717629,
      "title": "How to avoid bad assumptions during incidents",
      "type": "story",
      "url": "https://incident.io/blog/how-to-avoid-bad-assumptions-during-incidents/"
    },
    {
      "by": "bartmika",
      "descendants": 0,
      "id": 28667139,
      "score": 1,
      "time": 1632717578,
      "title": "Learn Crystal with Practise Problems – Part 1: Variables Math and Strings",
      "type": "story",
      "url": "https://bartlomiejmika.com/post/2021/learn-crystal-lang-with-practise-problems-part-1-variables-math-and-strings/"
    },
    {
      "by": "kiyanwang",
      "descendants": 0,
      "id": 28667125,
      "score": 1,
      "time": 1632717395,
      "title": "Linux Page Cache for SRE",
      "type": "story",
      "url": "https://biriukov.dev/docs/page-cache/0-linux-page-cache-for-sre/"
    },
    {
      "by": "monort",
      "descendants": 0,
      "id": 28667123,
      "score": 1,
      "time": 1632717374,
      "title": "An Illustrated Guide to Plastic Straws",
      "type": "story",
      "url": "https://hwfo.substack.com/p/an-illustrated-guide-to-plastic-straws"
    },
    {
      "by": "apollinaire",
      "descendants": 0,
      "id": 28667104,
      "score": 1,
      "time": 1632717154,
      "title": "The Afterlives of E.M. Forster",
      "type": "story",
      "url": "https://newrepublic.com/article/163578/em-forster-afterlives-maurice-alec"
    },
    {
      "by": "cinquemb",
      "descendants": 0,
      "id": 28667103,
      "score": 1,
      "time": 1632717146,
      "title": "Why Lunar Engineering Is a R&D Field for the “Hot Solar”",
      "type": "story",
      "url": "https://www.solarpaces.org/why-lunar-engineering-is-an-exciting-rd-field-for-the-hot-solar/"
    },
    {
      "by": "kiyanwang",
      "descendants": 0,
      "id": 28667086,
      "score": 1,
      "time": 1632716922,
      "title": "How SREs are unique in their approach to work",
      "type": "story",
      "url": "https://www.cruform.com/sre-unique-approach-to-work/"
    },
    {
      "by": "rlayton2",
      "descendants": 0,
      "id": 28667078,
      "score": 5,
      "text": "My work often involves starting with creating small prototypes that show a concept or solve a very specific problem. That prototype solves that problem, the client is happy and wants to extend it. The software grows from there, usually one feature at time. For these projects, the client usually doesn&#x27;t know what comes next until they need it. This extension can sometimes be immediate, or could be years after the fact.<p>&quot;Common wisdom&quot; states that the prototype should be thrown away when the concept is proved and the funds come in, but for me there is never a point at which that makes sense. As I mentioned, it&#x27;s one feature at a time.<p>I feel I do a <i>good</i> job at designing those prototypes in a decoupled, extensible way. I think about what direction the project could take, and try to put the right levels of abstraction in. Despite my best efforts, oftentimes I&#x27;m rewriting existing chunks of code to incorporate the new features because I chose a certain structure that no longer makes sense.<p>What I&#x27;m looking for is to improve this part of my programming. Are there any good resources on designing software that will grow&#x2F;evolve over time? Software that never have a project plan for more than a few months or a few features?",
      "time": 1632716790,
      "title": "Ask HN: Software design patterns for projects without a scope?",
      "type": "story"
    }
  ]
}