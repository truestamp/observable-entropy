{
  "stories": [
    {
      "by": "mfilion",
      "descendants": 0,
      "id": 31318296,
      "score": 1,
      "time": 1652122795,
      "title": "SocketCAN X Kubernetes",
      "type": "story",
      "url": "https://www.collabora.com/news-and-blog/news-and-events/socketcan-x-kubernetes.html"
    },
    {
      "by": "chhum",
      "descendants": 0,
      "id": 31318280,
      "score": 1,
      "time": 1652122671,
      "title": "All About Ecstasy, a Language Designed for the Cloud",
      "type": "story",
      "url": "https://thenewstack.io/all-about-ecstasy-a-language-designed-for-the-cloud/"
    },
    {
      "by": "kite_and_code",
      "descendants": 0,
      "id": 31318267,
      "score": 1,
      "text": "I often observe misunderstandings in communication and I think it really hampers mutual understanding, trust, connection but also efficiency (in a work context).<p>I am wondering, what are examples of environments where there is very little misunderstanding? What are patterns that might enable that? What can we learn for human interaction?<p>One example: I heard that the military sometimes has the requirement that a given command shall be repeated verbatim by the person who received the command in order to make sure that it was understood correctly.<p>Another example might be the HTTP protocol which ACK(nowledges) requests. The protocol is interesting because it aims to achieve robust, mutual understanding in a high-failure environment because messages can easily get lost.",
      "time": 1652122609,
      "title": "Ask HN: Patterns of communication that minimize potential misunderstanding",
      "type": "story"
    },
    {
      "by": "hhs",
      "descendants": 0,
      "id": 31318261,
      "score": 1,
      "time": 1652122588,
      "title": "How do you tax NFTs? States are in a quandary",
      "type": "story",
      "url": "https://www.axios.com/2022/05/09/nfts-sales-tax-states-federal-irs"
    },
    {
      "by": "tomwas54",
      "descendants": 0,
      "id": 31318255,
      "score": 1,
      "time": 1652122551,
      "title": "Understanding the Web Security Model, Part V: Side Channels",
      "type": "story",
      "url": "https://educatedguesswork.org/posts/web-security-model-side-channels/"
    },
    {
      "by": "happy-go-lucky",
      "descendants": 0,
      "id": 31318254,
      "score": 2,
      "time": 1652122538,
      "title": "Ukraineâ€™s mine-sniffing dog given medal after finding over 200 explosives",
      "type": "story",
      "url": "https://www.theguardian.com/world/2022/may/09/ukraine-mine-sniffing-dog-medal-finding-over-200-explosives"
    },
    {
      "by": "SQL2219",
      "descendants": 0,
      "id": 31318248,
      "score": 2,
      "time": 1652122478,
      "title": "The Radioactive Boy Scout",
      "type": "story",
      "url": "https://talesfromthenuclearage.wordpress.com/2009/12/13/the-radioactive-boy-scout/"
    },
    {
      "by": "lizparody23",
      "descendants": 0,
      "id": 31318198,
      "score": 1,
      "time": 1652122212,
      "title": "How to Use the GitHub Pulls API to Manage Pull Requests",
      "type": "story",
      "url": "https://fusebit.io/blog/github-pulls-api-manage-prs/"
    },
    {
      "by": "lizparody23",
      "descendants": 0,
      "id": 31318192,
      "score": 1,
      "time": 1652122196,
      "title": "Discord's REST API, an Introduction with Examples",
      "type": "story",
      "url": "https://fusebit.io/blog/discord-rest-api/"
    },
    {
      "by": "lizparody23",
      "descendants": 0,
      "id": 31318186,
      "score": 1,
      "time": 1652122177,
      "title": "Connect Your Express Application to the Linear API Using EveryAuth",
      "type": "story",
      "url": "https://fusebit.io/blog/discord-rate-limiting/"
    }
  ]
}