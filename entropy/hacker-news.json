{
  "stories": [
    {
      "by": "keynesian",
      "descendants": 0,
      "id": 29159311,
      "score": 1,
      "text": "I worked out our GCP costs and then CUDs and emailed GCP Support for confirmation. They got back to me and confirmed that the calculations were correct.<p>With Resource based CUD&#x27;s the resources that have the discount applied are fixed - ie if you use more resources any overage is at On Demand prices.<p>So I looked into Spending Based CUDs which is limited to a certain number of resources.<p>Has anyone used Spending based CUDs and are the discounts less than if you used Resource based CUDs?<p>What I would like is to get the maximum discount and the maximum flexibility in  resource allocation.",
      "time": 1636448778,
      "title": "What GCP Pricing Strategies do you use?",
      "type": "story"
    },
    {
      "by": "diplodocusaur",
      "descendants": 0,
      "id": 29159296,
      "score": 1,
      "time": 1636448632,
      "title": "GTC November 2021 Keynote with Nvidia CEO Jensen Huang",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=jhDiaUL_RaM"
    },
    {
      "by": "philonoist",
      "descendants": 1,
      "id": 29159285,
      "kids": [
        29159295
      ],
      "score": 2,
      "time": 1636448457,
      "title": "The Ketamine Cure of Depression: Is This Unregulated Drug Safe to Use at Home?",
      "type": "story",
      "url": "https://www.nytimes.com/2021/11/04/well/ketamine-therapy-depression.html"
    },
    {
      "by": "fagnerbrack",
      "descendants": 0,
      "id": 29159276,
      "score": 1,
      "time": 1636448352,
      "title": "You can implement a neural network in Excel",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=W5wD5mIeKws"
    },
    {
      "by": "a-dub",
      "descendants": 0,
      "id": 29159275,
      "score": 1,
      "text": "Help me identify a computer from my childhood in the 80s! I&#x27;ve tried unsuccessfully over the years to try and identify this machine, and now, given all the retrocomputing interest and content on here, I thought I&#x27;d put a description out there and see if anyone bites. I was quite young at the time, so please excuse any confusion.<p>* The machine was installed at an elementary school, for kids that age<p>* There were 30-40 40 column terminals around the room. They were either green or three color. Very large text and rudimentary graphics.<p>* There was one classic WYSE style 80 column amber terminal in the middle of the room where the operator sat.<p>* Any time we wanted to play a different game or run a different program, we&#x27;d line up to talk to the operator, who would then key in a two digit terminal identifier and then select the program that we&#x27;d see from a menu.<p>* I think the system had some kind of branding around the name &quot;super computer.&quot;  I don&#x27;t know if this was the hardware, the software or some value added reseller branding.<p>* The actual machine was 6-8&#x27; tall and made loud and distinct fan noises that could be heard around the room at startup which took several minutes.<p>* There was a tape system for taking backups, I believe it was at the top of the chassis (5-6ish feet off the ground and front loading with large tape casettes)<p>* The year I encountered this system was probably around 1985, I&#x27;m guessing the installation was probably between 1 and 8 years old.<p>* The school district used HP3000s in administration, it may have been one of these, but I don&#x27;t think they had 40 column graphical terminals.<p>If you can identify this system, please pipe up!",
      "time": 1636448350,
      "title": "Ask HN: Help me identify a minicomputer from the 70s/80s?",
      "type": "story"
    },
    {
      "by": "fagnerbrack",
      "descendants": 0,
      "id": 29159274,
      "score": 1,
      "time": 1636448346,
      "title": "How to decrease bureaucracy – Summary of Literature",
      "type": "story",
      "url": "https://graphthinking.blogspot.com/2018/08/how-to-decrease-bureacracy.html"
    },
    {
      "by": "fagnerbrack",
      "descendants": 0,
      "id": 29159273,
      "score": 1,
      "time": 1636448339,
      "title": "Happiness and the Productivity of Software Engineers",
      "type": "story",
      "url": "https://arxiv.org/abs/1904.08239"
    },
    {
      "by": "samizdis",
      "descendants": 1,
      "id": 29159224,
      "kids": [
        29159244
      ],
      "score": 1,
      "time": 1636447832,
      "title": "Lack of black holes in telescope data is caused by bias",
      "type": "story",
      "url": "https://phys.org/news/2021-11-lack-massive-black-holes-telescope.html"
    },
    {
      "by": "kirillrogovoy",
      "descendants": 0,
      "id": 29159192,
      "score": 5,
      "text": "TL;DR: Why isn&#x27;t VSCode the new Emacs?<p>VSCode is clearly a code editor. Emacs is used by many as an operating system &#x2F; UI framework &#x2F; app platform.<p>Emacs&#x27;s adepts have been using it for email, calendars, process management, taking notes, terminal GUI, coding (dah), and some even browse the web without leaving it.<p>I&#x27;ve been using Orgmode (+ org-roam) for a couple of years already and no other software can replace it for me.<p>I have huge respect for this almost 40 years old piece of technology and all the people keeping it alive and active. I love the hacker community around it.<p>All that said, I mostly hate using Emacs. It&#x27;s slow (I have i7 with 4 cores and 32Gb of RAM). Emacs Lisp drives me crazy. I constantly mis-press some weird key chord and enter a state where I can&#x27;t do anything unless I restart the app. It&#x27;s hard for me to find docs on how to integrate with various parts of the UI, so I mostly rely on reading the source code of different extensions. Two years in, I still can&#x27;t read Emacs Lisp well.<p>I feel unproductive when changing how Emacs behaves. And I&#x27;ve been coding for 7+ years, including functional programming.<p>---<p>Now, I&#x27;ve been using VSCode for quite a while (after 4 years of Vim).<p>I&#x27;ve noticed that, on the surface, VSCode extensions can do everything Emacs does.<p>If you think about it, VSCode is a UI framework too — there&#x27;s an API for all the UI components such as the sidebar or the text editor area itself; and you can also add your custom commands that can be triggered in a number of ways.<p>Which means you can actually implement things like Orgmode in VSCode.<p>Also:\n- You are coding using the most popular ecosystem in the world (Web).\n- The community is larger than one of Emacs.\n- The docs are much friendlier.<p>---<p>From what I understand, the main difference is that with Emacs you can start hacking any part of the environment right from the start. It&#x27;s designed to be played with.<p>With VSCode, you just have a strictly defined JSON config file, and everything else requires you to work with &quot;extensions&quot; which sounds like something less accessible and &quot;oh, that sounds grand, I&#x27;m not sure how deep that rabbit hole is&quot;. You can&#x27;t just open a file, define a new hook or whatever and now your VSCode behaves differently.<p>But are there any other reasons, technical or otherwise, why people don&#x27;t seem to use VSCode for things beyond editing code?<p>If only you could open some special file, write some Typescript, and modify anything about VSCode in a dirty hacker manner, would you use it?",
      "time": 1636447537,
      "title": "Ask HN: Could VSCode be the new Emacs?",
      "type": "story"
    },
    {
      "by": "sneak",
      "descendants": 0,
      "id": 29159146,
      "score": 2,
      "time": 1636447108,
      "title": "Google Cloud for the Department of Defense",
      "type": "story",
      "url": "https://cloud.google.com/solutions/federal-government/defense"
    }
  ]
}