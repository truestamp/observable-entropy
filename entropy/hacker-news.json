{
  "stories": [
    {
      "by": "Koshkin",
      "descendants": 0,
      "id": 27815739,
      "score": 1,
      "time": 1626128026,
      "title": "The Art of Nomography",
      "type": "story",
      "url": "https://kartsci.org/kocomu/computer-history/the-art-of-nomography/"
    },
    {
      "by": "enigmatic02",
      "descendants": 0,
      "id": 27815737,
      "score": 1,
      "time": 1626128006,
      "title": "The Fox and the Cat",
      "type": "story",
      "url": "https://simonsarris.substack.com/p/the-fox-and-the-cat"
    },
    {
      "by": "hentrep",
      "descendants": 1,
      "id": 27815728,
      "kids": [
        27815729
      ],
      "score": 1,
      "time": 1626127960,
      "title": "“We found something that, like CRISPR, is associated with microbial genomes”",
      "type": "story",
      "url": "https://twitter.com/banfieldjill/status/1414647658786922496"
    },
    {
      "by": "enigmatic02",
      "descendants": 0,
      "id": 27815722,
      "score": 1,
      "time": 1626127897,
      "title": "Magnetic or Sticky?",
      "type": "story",
      "url": "https://seths.blog/2021/07/magnetic-or-sticky/"
    },
    {
      "by": "enigmatic02",
      "descendants": 0,
      "id": 27815708,
      "score": 1,
      "time": 1626127826,
      "title": "Playing Your Own Game",
      "type": "story",
      "url": "https://www.collaborativefund.com/blog/play-your-own-game/"
    },
    {
      "by": "0-_-0",
      "descendants": 0,
      "id": 27815705,
      "score": 1,
      "time": 1626127790,
      "title": "TSMC Exploring On-Chip, Semiconductor-Integrated Watercooling",
      "type": "story",
      "url": "https://www.tomshardware.com/news/tsmc-exploring-on-chip-semiconductor-integrated-watercooling"
    },
    {
      "by": "_wldu",
      "descendants": 0,
      "id": 27815690,
      "score": 1,
      "time": 1626127703,
      "title": "Centralized remote management is a backdoor",
      "type": "story",
      "url": "https://www.go350.com/posts/all-our-eggs-are-in-one-basket/"
    },
    {
      "by": "seveibar",
      "descendants": 0,
      "id": 27815671,
      "score": 1,
      "text": "My colleague recently introduced a state machine into a model in our SQL schema. That is, a column that would represent a state computed from other sources in the database. She would then recompute this column whenever an event occurred at the application level.<p>An analogous example would be we had a table called &quot;restaurant&quot; and a table called &quot;employee&quot;. The &quot;employee&quot; table has has a boolean column &quot;working&quot; that is set to true when an employee is working. She introduced a new column to restaurant called &quot;is_open&quot;, which is set to true or false whenever we receive an event at the application layer indicating that an employee started&#x2F;stopped working. If atleast one employee is working, the restaurant is open.<p>I tried to explain that less state in the database is better, and it&#x27;s better to compute &quot;is_open&quot; on the fly (in the ORM or as a view or something) so that invalid states can&#x27;t be represented in the database, but she&#x27;s not convinced by my explanation. I&#x27;m curious if I can reference an anti-pattern here, or make the case in a more familiar or compelling way (or maybe I&#x27;m wrong!)<p>Is this an anti-pattern? If so, what&#x27;s the best way to explain it&#x2F;reference it for coworkers?",
      "time": 1626127588,
      "title": "Ask HN: Why shouldn't you have redundant states represented in a SQL schema?",
      "type": "story"
    },
    {
      "by": "AdrienBrault",
      "descendants": 0,
      "id": 27815669,
      "score": 2,
      "time": 1626127585,
      "title": "Kubernetes Essential Tools: 2021",
      "type": "story",
      "url": "https://itnext.io/kubernetes-essential-tools-2021-def12e84c572"
    },
    {
      "by": "garyrob",
      "descendants": 0,
      "id": 27815668,
      "score": 1,
      "text": "My name is Gary Robinson (https:&#x2F;&#x2F;www.garyrobinson.net; there&#x27;s a much more complete version of this story there).<p>In 1995 I had put together a collaborative filtering algorithm and was looking for applications. One thought I came up with was: target ads according to the viewer&#x27;s interests. But where to get data? Ideally, it would involve seeing what their interests were, as exhibited in their web browsing choices. But how to do that?<p>At first blush, browser cookies didn&#x27;t appear like they could help because they can only be written or read from the internet domain from which they were written. So for example, if a cookie is written by a CGI at golfing.com, it can&#x27;t be accessed by a CGI at boating.com. It followed that the idea of having the servers for golfing.com and boating.com both accessing a central server at some other location to track user activity wouldn&#x27;t work; there was no way to know that the same user had visited both sites because any cookies written at one site would be inaccessible to the other.<p>But as I looked further into the general topic of Web programming, I noticed that a Web site running on one domain could invoke a CGI running on another domain. And there seemed to be no reason why that CGI, running on that other domain, couldn&#x27;t write its own cookie to the local computer. So, if Web pages running on golfing.com and boating.com each invoked a CGI running at adserver.com, then that CGI could know that the user had visited both sites. The cookie might be inaccessible to gofling.com and boating.com servers, but that didn&#x27;t matter, because it would be accessible to adserver.com.<p>I asked about this possible use in Netscape-related forums. One response said: &quot;You could, in theory, if you had source for your server, hack in someway for it to send the cookie somewhere. There is no existing protocol for doing so.&quot; So, while most web programmers probably know this is doable now, that apparently wasn&#x27;t the case in 1995. But some testing showed that it could indeed be done.<p>I wrote a patent application, &quot;Collaborative Filtering in World Wide Web Advertising,&quot; [1] which was focused on my CF algorithm and didn&#x27;t have claims that existed independently of it, but did discuss the idea of tracking cookies as an implementation detail.<p>Google owns it now. This year, there&#x27;s a patent troll attacking Google and Twitter, where, in a legal brief representing both companies, Google and Twitter refer to the tracking cookie &quot;Robinson&#x27;s Cookie.&quot; [2]<p>Why am I posting about this today? Well, I&#x27;ve noticed the fact that people have been selling NFTs for all manner of things. Maybe someone would like to buy an NFT representing the original conception of tracking cookies for advertising? If so, it seemed I should do more due diligence before offering it for sale. The patent priority date is Dec. 27, 1995. But discussion group messages I&#x27;ve saved for the last 25+ years show that I had come up with the cookie idea, but not yet confirmed that it would actually work, by Nov. 15 of that year.<p>My thought is to create a video in which I tell the story for the purchaser. I think it may make for an interesting story, involving such facets as the president of a traditional direct-mail marketing company getting down on his knees in front of me in the atrium for a conference venue, raising his hands into the air, and repeatedly bowing all the way to the ground, chanting &quot;You are Big Brother! You are Big Brother!&quot; (Such sentiments led to my adding a lot of privacy-related features to the patent, which resemble those actually in use decades later.) Of course, I&#x27;d throw in a signed hardcopy of the patent for good measure. :)<p>I&#x27;d be very interested in any information or thoughts the HN community may have about this.<p>[1] https:&#x2F;&#x2F;patentimages.storage.googleapis.com&#x2F;c3&#x2F;d4&#x2F;40&#x2F;239073914fa7fc&#x2F;US5918014.pdf\n[2] https:&#x2F;&#x2F;s3-us-west-1.amazonaws.com&#x2F;ptab-filings&#x2F;IPR2021-00485&#x2F;3",
      "time": 1626127580,
      "title": "Did I invent the tracking cookie for web advertising in late 1995?",
      "type": "story"
    }
  ]
}