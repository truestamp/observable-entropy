{
  "stories": [
    {
      "by": "classichasclass",
      "descendants": 0,
      "id": 32133401,
      "score": 1,
      "time": 1658106832,
      "title": "Car-based subscriptions are evil",
      "type": "story",
      "url": "https://www.drive.com.au/caradvice/opinion-car-based-subscriptions-are-evil/"
    },
    {
      "by": "jger15",
      "descendants": 0,
      "id": 32133396,
      "score": 1,
      "time": 1658106772,
      "title": "Transparency Is Surveillance",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=8JEzXL5OXPI"
    },
    {
      "by": "kristianp",
      "descendants": 0,
      "id": 32133394,
      "score": 2,
      "time": 1658106749,
      "title": "Lensm: Go Assembly and Source Viewer",
      "type": "story",
      "url": "https://github.com/loov/lensm"
    },
    {
      "by": "why_algorithms",
      "descendants": 0,
      "id": 32133392,
      "score": 1,
      "text": "I read Dan Luu&#x27;s programming books page recently, on which it says about algorithms: &quot;Why should you care? Well, there&#x27;s the pragmatic argument: even if you never use this stuff in your job, most of the best paying companies will quiz you on this stuff in interviews. On the non-bullshit side of things, I find algorithms to be useful in the same way I find math to be useful. The probability of any particular algorithm being useful for any particular problem is low, but having a general picture of what kinds of problems are solved problems, what kinds of problems are intractable, and when approximations will be effective, is often useful.&quot;<p>I learned algorithms in college, many years ago. I still have a good idea of when to use data structures, generally. I probably couldn&#x27;t pass a FAANG-style interview without a couple months prep now, despite giving them every other week. I couldn&#x27;t tell you when to use a red-black tree over a b-tree anymore. Frankly, as a dime-a-dozen megacorp SWE, that&#x27;s not really something that would come up in daily work. IME, management isn&#x27;t going to give you time to care about performance specifics - maybe, if there&#x27;s a library that offers a convenient API and some deceptive benchmark graphs, you use that. I think I&#x27;ve used a prefix trie, once, in my entire professional career. The rest is just standardlib abstractions where I don&#x27;t really care about what&#x27;s happening below. Someone much smarter than me is making optimizations based on the latest papers for any given sorted() implementation.<p>What other motivation is there to relearn algorithms except for clearing the interview hurdle? Especially when free time is limited, and you could instead _finally_ get around to reading Designing Data-Intensive Application or Crafting Interpreters, learning Rust&#x2F;Go&#x2F;CultLang, or dipping your toes into something &quot;fun&quot; like reverse engineering?",
      "time": 1658106745,
      "title": "Why should I relearn algorithms?",
      "type": "story"
    },
    {
      "by": "vinnyglennon",
      "descendants": 0,
      "id": 32133382,
      "score": 1,
      "time": 1658106631,
      "title": "Docker Swarm Lowers the Shields",
      "type": "story",
      "url": "https://seanblanchfield.com/2022/03/docker-swarm-lowers-shields"
    },
    {
      "by": "digianarchist",
      "descendants": 0,
      "id": 32133381,
      "score": 2,
      "time": 1658106614,
      "title": "We Don’t Trust Apple’s HomeKit Secure Video–and You Shouldn’t Either",
      "type": "story",
      "url": "https://www.nytimes.com/wirecutter/blog/apple-homekit-secure-video-review/"
    },
    {
      "by": "otras",
      "descendants": 0,
      "id": 32133369,
      "score": 1,
      "time": 1658106524,
      "title": "My false start when learning to program",
      "type": "story",
      "url": "https://alexanderell.is/posts/learning-programming-false-start/"
    },
    {
      "by": "colinmcd",
      "descendants": 0,
      "id": 32133347,
      "score": 2,
      "time": 1658106355,
      "title": "Deno is down",
      "type": "story",
      "url": "https://denostatus.com/"
    },
    {
      "by": "sgoto",
      "descendants": 0,
      "id": 32133345,
      "score": 1,
      "time": 1658106337,
      "title": "Show HN: Typograms, Markdown-like renderer for ASCII diagrams",
      "type": "story",
      "url": "https://code.sgo.to/typograms/"
    },
    {
      "by": "bl0ssom",
      "descendants": 0,
      "id": 32133323,
      "score": 1,
      "text": "Frontly is a no-code automation tool that you can use to create and launch custom apps in minutes with only a Google Sheet and absolutely no-code required. Whether you&#x27;re a business owner or work in sales, marketing, IT, real estate, etc., Frontly lets you build a powerful app with all the features you need with just Google Sheets as the backend. Using our pre-designed components, design your interface and connect to your data in minutes.<p>Give employees and clients a secure login to view and edit only the data you want them to access, without giving access to your spreadsheet. Pull data from multiple sheets into one page or app.<p>The best way to start reaping the benefits of no-code automation is to try Frontly for free.",
      "time": 1658106142,
      "title": "Show HN: Build apps and automate your Google Sheets. No-code required",
      "type": "story",
      "url": "https://www.frontlyapp.com/?r=hn"
    }
  ]
}