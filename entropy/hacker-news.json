{
  "stories": [
    {
      "by": "mattrighetti",
      "descendants": 0,
      "id": 29039208,
      "score": 1,
      "text": "I often find myself working on a project for an entire day and when it&#x27;s time to commit I spend a lot of time trying to remember what are the changes and what are the new features that I&#x27;ve introduced in the codebase.<p>I&#x27;ve once tried to make a commit every time I introduce something that should be noted and then at the end of the day squash all those new commit into one, but this felt a bit strange and it required a significant amount of work at the time of merging all the commits&#x27; messages into the squashed one.<p>Can somebody point me out to some best practices for this?",
      "time": 1635519358,
      "title": "Ask HN: How do you efficiently keep track of the changes/features in a commit?",
      "type": "story"
    },
    {
      "by": "mawise",
      "descendants": 0,
      "id": 29039196,
      "score": 1,
      "time": 1635519289,
      "title": "Oura ring switches to subscription, requires new purchase to grandfather access",
      "type": "story",
      "url": "https://ouraring.com/upgrade"
    },
    {
      "by": "sfvjnfsv1",
      "descendants": 0,
      "id": 29039182,
      "score": 5,
      "time": 1635519244,
      "title": "Selenium WebDriver: What It Is, How It Works, and If You Need It",
      "type": "story",
      "url": "https://inventorsoft.co/loader"
    },
    {
      "by": "flerovium",
      "descendants": 0,
      "id": 29039179,
      "score": 1,
      "time": 1635519235,
      "title": "Accessibility: Lipservice and the Reality",
      "type": "story",
      "url": "https://medium.com/@nicklum/silicon-valleys-patina-of-accessibility-be406eb25b36"
    },
    {
      "by": "lpman",
      "descendants": 0,
      "id": 29039171,
      "score": 1,
      "time": 1635519207,
      "title": "Crawling Shopify Application Ratings",
      "type": "story",
      "url": "https://ptrlaszlo.com/posts/shopify-application-ratings"
    },
    {
      "by": "arishi",
      "descendants": 0,
      "id": 29039166,
      "score": 1,
      "time": 1635519170,
      "title": "Cheesecake-to-Go Saved the Cheesecake Factory",
      "type": "story",
      "url": "https://www.wsj.com/articles/cheesecake-to-go-saved-the-cheesecake-factory-11635450438"
    },
    {
      "by": "freezing_moon",
      "descendants": 0,
      "id": 29039163,
      "score": 1,
      "text": "Hi all,<p>Background: I am a totally blind programmer. That is, I cannot see at all. I am using a screen reading software to read texts, but not images. I am unable to get a computer science degree. Now I am a full-time web developer but I am still very interested about computer science so I am learning as much as I could on my spare time. This post was inspired by section 2.3.3 of SICP https:&#x2F;&#x2F;sarabander.github.io&#x2F;sicp&#x2F;html&#x2F;2_002e3.xhtml#g_t2_002e3_002e3<p>For many years now I am trying to find ways to study discrete math. There are many free wonderful resources and courses. Unfortunately, everything I could find (E.G. MIT OCW, Book of Prufe) uses math rendering that can&#x27;t be read by my screen reader. After much searching, I believe my screen reader can only read math notation rendered in the mathjax library (like the SICP version I linked above) and LaTeX. I could not find lecture notes that have their math notation rendered by these two.<p>Then, I have thought of bypassing my notation problem completely. Maybe there is a course that teaches discrete math through programming just like how SICP did it with sets. I know SICP does not intend to teach discrete math, but I feel that the same idea could be applied when actually learning discrete math. I am hoping that by using this approach, even though the mathematical notation are invinsible to my screen reader, I still have some code (maybe written in a functional language?) that I could play with to understand the concepts. I am counting on abstraction here (E.G. I am confident that  objects in graph theory can be represented as data structures).<p>I would like to ask: is there such a course? Can anyone recommend a course like this? Like a discrete math and programming combination?<p>Also, I am aware that bypassing math notation is extremely dangerous to do. After all, reading and writing prufes almost involves reading math notation. I have come to accept that this might be my (or my screen reading software)&#x27;s limitation that cannot be fixed at the moment. I will settle for learning the concepts enough to at least being able to pruve the time complexity of my own programs.<p>Thanks all!",
      "time": 1635519146,
      "title": "Ask HN: Looking for a discrete math course with programming",
      "type": "story"
    },
    {
      "by": "adrian_mrd",
      "descendants": 0,
      "id": 29039158,
      "score": 1,
      "time": 1635519132,
      "title": "Inside The Machine That Saved Mooreâ€™s Law",
      "type": "story",
      "url": "https://www.technologyreview.com/2021/10/27/1037118/moores-law-computer-chips/"
    },
    {
      "by": "susam",
      "descendants": 0,
      "id": 29039130,
      "score": 1,
      "time": 1635518968,
      "title": "Beebug for the BBC Micro (1983)",
      "type": "story",
      "url": "http://www.computinghistory.org.uk/downloads/14541"
    },
    {
      "by": "melling",
      "descendants": 0,
      "id": 29039126,
      "score": 4,
      "time": 1635518944,
      "title": "G-20 Climate Talks Threatened by Clash over Coal Ahead of COP26",
      "type": "story",
      "url": "https://www.wsj.com/articles/g-20-climate-talks-threatened-by-clash-over-coal-ahead-of-cop26-11635491696"
    }
  ]
}