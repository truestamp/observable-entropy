{
  "stories": [
    {
      "by": "sampo",
      "descendants": 0,
      "id": 31288175,
      "score": 2,
      "time": 1651860602,
      "title": "Primitive Technology: Wood Ash Cement and Fired Brick Hut",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=eesj3pJF3lA"
    },
    {
      "by": "gojiberries",
      "descendants": 0,
      "id": 31288174,
      "score": 1,
      "time": 1651860599,
      "title": "Compress: Optimized Go Compression Packages",
      "type": "story",
      "url": "https://github.com/klauspost/compress"
    },
    {
      "by": "hhs",
      "descendants": 0,
      "id": 31288172,
      "score": 1,
      "time": 1651860590,
      "title": "Many VC firms ban side investing. Yuri Milner’s DST encourages it",
      "type": "story",
      "url": "https://www.bloomberg.com/tosv2.html?vid=&uuid=b960c16e-cd67-11ec-9aed-5778726e754e&url=L25ld3MvYXJ0aWNsZXMvMjAyMi0wNS0wNS95dXJpLW1pbG5lci1kc3QtZ2xvYmFsLWVuY291cmFnZS1hbmdlbC1pbnZlc3RpbmctZm9yLXBhcnRuZXJz"
    },
    {
      "by": "metadat",
      "descendants": 1,
      "id": 31288171,
      "kids": [
        31288180
      ],
      "score": 1,
      "time": 1651860588,
      "title": "Ford's New Ad Pokes Fun at Elon Musk's Loud Mouth and Thin Skin",
      "type": "story",
      "url": "https://gizmodo.com/elon-musk-ford-ad-youtube-tv-spacex-rockets-twitter-lou-1848883798"
    },
    {
      "by": "mrbogle",
      "descendants": 0,
      "id": 31288166,
      "score": 1,
      "time": 1651860538,
      "title": "Converting your vanilla JavaScript app to TypeScript",
      "type": "story",
      "url": "https://www.useanvil.com/blog/engineering/converting-vanilla-javascript-to-typescript/"
    },
    {
      "by": "Layke1123",
      "descendants": 0,
      "id": 31288151,
      "score": 1,
      "text": "So I was given an interview question, and I am extremely confused by their response. I&#x27;m not going to give away their details (if you know, you know), but the problem is interesting.<p>Let&#x27;s say you have a standard Rubik&#x27;s cube with White facing Up, Green facing Front, Red facing Right, and Yellow, Blue, and Orange opposite those colors in the same order (I.E. Blue opposite Green, Red - Orange, White - Yellow).<p>Say you wanted to write a database that contained solutions to the every possible state the cube could be in (solved state, top rotated once, top rotated twice, etc.). I understand that there are 24 unique ways you could rotate this cube to bring it back into a canonical form to avoid all possible cases.<p>Now let&#x27;s say you allow non-standard colors (I.E. Red could be opposite White, Blue opposite Yellow, and on and on).<p>My understanding is that permuting the colors of the cube amongst the six posible colors is kinda of a one way function and there is no way to really undo it.<p>Hence, if you change whatever cube you are given with any possible color scheme into one where you replace whatever color is up with White, the front with Green, and so on, you essentially solve the problem of finding a canonical form.<p>The other engineers contest that it is possible and that you should permute all the colors first, and then try to rotate it into a canonical form from there.<p>Am I missing something, or is this like a trick question problem to befuddle engineers?<p>I tried reaching out to them but they won&#x27;t get back to me with the &quot;solution&quot;.",
      "time": 1651860441,
      "title": "Canonical Form of Rotated and Color Swapped Rubik's Cube",
      "type": "story"
    },
    {
      "by": "forgotmypw17",
      "descendants": 1,
      "id": 31288148,
      "kids": [
        31288156
      ],
      "score": 1,
      "text": "Hey all, I was inspired by the other thread to make a quick video demo of what an Absurdly Compatible Website may look like when implemented.<p>This one does have some JavaScript, but degrades gracefully and supports text-mode browsers, no-JS browsing, and all the classics like IE3 and NN3 and Lynx.<p>https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=E-_yr31biGM<p>Kudos to anyone who can name all the browsers used in the demo, I think it&#x27;s more than 20 different ones :)<p>You can also check out the site live at http:&#x2F;&#x2F;RocketScience.click or https:&#x2F;&#x2F;RocketScience.click, at least until it&#x27;s hugged.<p>The framework for this is a static-dynamic hybrid site generator with full transparency and decentralizability, which I&#x27;m just preparing for this weekend&#x27;s MIT Bitcoin Expo, so please let me know if you find any issues.<p>Code is on GitHub: https:&#x2F;&#x2F;www.github.com&#x2F;gulkily&#x2F;RocketScience",
      "time": 1651860431,
      "title": "Show HN: An Absurdly Compatible Website",
      "type": "story"
    },
    {
      "by": "sahin",
      "descendants": 0,
      "id": 31288147,
      "score": 1,
      "time": 1651860430,
      "title": "Scientists made a laser beam shaped like a photorealistic cat",
      "type": "story",
      "url": "https://www.newscientist.com/article/2318568-scientists-made-a-laser-beam-shaped-like-a-photorealistic-cat/"
    },
    {
      "by": "gumby",
      "descendants": 1,
      "id": 31288128,
      "kids": [
        31288149
      ],
      "score": 2,
      "time": 1651860313,
      "title": "Google’s cloud group forms Web3 team to capitalize on popularity of crypto",
      "type": "story",
      "url": "https://www.cnbc.com/2022/05/06/googles-cloud-group-forms-web3-product-and-engineering-team.html"
    },
    {
      "by": "linkdd",
      "descendants": 0,
      "id": 31288114,
      "score": 1,
      "text": "Hi HN,<p>It&#x27;s been some time now since I&#x27;ve started working on my own programming language. But I never wrote the spec.<p>I love the concept of PEP (Python Enhancement Proposals) and it inspired me to start writing the spec in a similar format.<p>As of now, I&#x27;ve written 4 LEPs:<p><pre><code>  - LEP-001: Language Target - https:&#x2F;&#x2F;letlang.dev&#x2F;lep&#x2F;001&#x2F;\n  - LEP-002: Import resolution - https:&#x2F;&#x2F;letlang.dev&#x2F;lep&#x2F;002&#x2F;\n  - LEP-003: Statements - https:&#x2F;&#x2F;letlang.dev&#x2F;lep&#x2F;003&#x2F;\n  - LEP-004: Type System - https:&#x2F;&#x2F;letlang.dev&#x2F;lep&#x2F;004&#x2F;\n</code></pre>\nAnd I&#x27;ve started to write the following LEPs:<p><pre><code>  - LEP-005: Functions\n  - LEP-006: Side Effects\n  - LEP-007: SAT Solver\n</code></pre>\nI think this will help me stop changing my mind for starters, but also help me get the implementation right (which is still a work in progress).<p>The Github repository is not yet opensource, I intend to open it once the &quot;hello world&quot; example compiles. I&#x27;m still wondering what would be a good license to use for a compiler, I&#x27;d love your feedback.",
      "time": 1651860243,
      "title": "Show HN: Letlang specification inspired by Python PEPs (WIP)",
      "type": "story",
      "url": "https://letlang.dev/lep/"
    }
  ]
}