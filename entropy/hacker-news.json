{
  "stories": [
    null,
    {
      "by": "klevertree",
      "descendants": 0,
      "id": 30754432,
      "score": 1,
      "text": "Looking to network with my fellow bio founders. I&#x27;d especially appreciate if I could swap applications with someone and we could mutually criticize&#x2F;improve each other&#x27;s applications. If you&#x27;re interested, please reach out through my website, highwaypharm.com . If a bunch of people are interested, I&#x27;ll see if I can connect more people together.<p>Reminder: YC applications are due 3&#x2F;24!",
      "time": 1647872372,
      "title": "Ask HN: Are you applying to YC as a bio company?",
      "type": "story"
    },
    {
      "by": "Kelamir",
      "descendants": 0,
      "id": 30754424,
      "score": 1,
      "time": 1647872349,
      "title": "Stand with Ukraine Bundle",
      "type": "story",
      "url": "https://www.humblebundle.com/stand-with-ukraine-bundle"
    },
    {
      "by": "muunbo",
      "descendants": 0,
      "id": 30754421,
      "score": 1,
      "time": 1647872339,
      "title": "How to use Microdot, an async web server for microcontrollers",
      "type": "story",
      "url": "https://bhave.sh/micropython-microdot/"
    },
    {
      "by": "worldvoyageur",
      "descendants": 0,
      "id": 30754419,
      "score": 1,
      "time": 1647872333,
      "title": "Love Is Love: Workplace Edition",
      "type": "story",
      "url": "https://betonit.blog/2022/03/21/love-is-love-workplace-edition/"
    },
    {
      "by": "tylerjaywood",
      "descendants": 0,
      "id": 30754417,
      "score": 1,
      "text": "Inspired by how Wordle could get the world talking about specific words, we wanted to try to make a game that could do the same for major events in history.<p>Our hope is that this game is fun to play and provides a jumping off point for conversations like, &quot;Who were the Goths, anyway?&quot;",
      "time": 1647872329,
      "title": "Show HN: Chrono. A daily, bite sized, browser based, history game",
      "type": "story",
      "url": "https://chrono.quest"
    },
    {
      "by": "decrypt",
      "descendants": 0,
      "id": 30754405,
      "score": 1,
      "time": 1647872254,
      "title": "Remove Cloudflare Proxy",
      "type": "story",
      "url": "https://community.bitwarden.com/t/remove-cloudflare-proxy/12944"
    },
    {
      "by": "jmsflknr",
      "descendants": 0,
      "id": 30754402,
      "score": 1,
      "time": 1647872236,
      "title": "India to tax each crypto investment independently",
      "type": "story",
      "url": "https://techcrunch.com/2022/03/21/india-crypto-tax/"
    },
    {
      "by": "patrikbraborec",
      "descendants": 0,
      "id": 30754400,
      "score": 1,
      "time": 1647872234,
      "title": "Use Python for Your Next Project",
      "type": "story",
      "url": "https://medium.com/gooddata-developers/why-you-should-use-python-for-your-next-project-426dc8629aa6"
    },
    {
      "by": "alxthm",
      "descendants": 0,
      "id": 30754394,
      "score": 1,
      "text": "The MDN Web docs [0] are useful to understand what are custom elements, the shadow DOM, or templates and slots. But as someone starting with web components and front-end stuff in general, I was wondering about the recommended approaches&#x2F;design patterns when building more complex apps ?<p>For instance, how should components communicate with each other? By using a parent element systematically, firing up events from child nodes, then calling children methods from the parent node? Is this the equivalent of the &quot;props down, events up&quot; pattern in React for instance [1]?<p>Regarding the life-cycle, is there any reason to use the `constructor()` instead of the `connectedCallback()` for init code?<p>Another one that seems to have sparked some debate [2]: how to work with custom elements that need to interact with their children? Should I use `setTimeout()` to wait for the DOM to be parsed [3], should I use mutation observers, or should I fire up an event from the children to notify its parent when it is ready to be used?<p>These are just a couple questions that came up when reading about this, but I am curious about general best practices when building front-end apps using web components.<p>[0] https:&#x2F;&#x2F;developer.mozilla.org&#x2F;en-US&#x2F;docs&#x2F;Web&#x2F;Web_Components<p>[1] https:&#x2F;&#x2F;jasonformat.com&#x2F;props-down-events-up&#x2F;<p>[2] https:&#x2F;&#x2F;github.com&#x2F;WICG&#x2F;webcomponents&#x2F;issues&#x2F;809<p>[3] https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;58354531&#x2F;custom-elements-connectedcallback-wait-for-parent-node-to-be-available-bef",
      "time": 1647872185,
      "title": "Ask HN: What are some recommended patterns when using Web Components?",
      "type": "story"
    }
  ]
}