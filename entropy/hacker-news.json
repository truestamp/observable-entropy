{
  "stories": [
    {
      "by": "kiyanwang",
      "descendants": 0,
      "id": 31142702,
      "score": 1,
      "time": 1650795472,
      "title": "Gyros and Gimbals, Oh My â€“ The James Webb Space Telescope Reliability Lessons",
      "type": "story",
      "url": "https://flyingbarron.medium.com/gyros-and-gimbals-oh-my-the-james-webb-space-telescope-9741480266a"
    },
    {
      "by": "kiyanwang",
      "descendants": 0,
      "id": 31142700,
      "score": 1,
      "time": 1650795420,
      "title": "Video Transcript Tomorrow Talks",
      "type": "story",
      "url": "https://jobs.libertymutualgroup.com/video-transcript-tomorrow-talks-episode-2/"
    },
    {
      "by": "dnetesn",
      "descendants": 0,
      "id": 31142697,
      "score": 1,
      "time": 1650795378,
      "title": "What the Meadow Teaches Us",
      "type": "story",
      "url": "https://worldsensorium.com/what-the-meadow-teaches-us/"
    },
    {
      "by": "ColinWright",
      "descendants": 0,
      "id": 31142694,
      "score": 1,
      "time": 1650795309,
      "title": "How to Not Be Boring, According to a Psychologist Who Researches Boredom",
      "type": "story",
      "url": "https://www.vice.com/en/article/z3n7w8/scientist-studies-boredom-boring-people-jobs-psychology"
    },
    {
      "by": "dnetesn",
      "descendants": 0,
      "id": 31142692,
      "score": 1,
      "time": 1650795285,
      "title": "What Regret Tells Us",
      "type": "story",
      "url": "https://nautil.us/what-regret-tells-us-16264/"
    },
    {
      "by": "pabs3",
      "descendants": 0,
      "id": 31142681,
      "score": 1,
      "time": 1650795113,
      "title": "The changing economics of open source",
      "type": "story",
      "url": "https://www.technologyreview.com/2022/04/21/1050788/the-changing-economics-of-open-source/"
    },
    {
      "by": "spaniard89277",
      "descendants": 0,
      "id": 31142677,
      "score": 1,
      "time": 1650795071,
      "title": "Lenovo ThinkPad X200 clone takes us back, way back (2011)",
      "type": "story",
      "url": "https://www.engadget.com/2011-01-12-lenovo-thinkpad-x200-clone-takes-us-back-way-back.html"
    },
    {
      "by": "abhayhegde",
      "descendants": 0,
      "id": 31142664,
      "score": 1,
      "time": 1650794923,
      "title": "In Academia, Pats on the Back Are Rare",
      "type": "story",
      "url": "http://occamstypewriter.org/athenedonald/2022/02/15/in-academia-pats-on-the-back-are-rare/"
    },
    {
      "by": "dredmorbius",
      "descendants": 0,
      "id": 31142662,
      "score": 1,
      "time": 1650794909,
      "title": "Disinformation Is a Threat to Our Democracy",
      "type": "story",
      "url": "https://barackobama.medium.com/my-remarks-on-disinformation-at-stanford-7d7af7ba28af"
    },
    {
      "by": "viraptor",
      "descendants": 0,
      "id": 31142631,
      "score": 2,
      "text": "I&#x27;m looking for a SaaS solution where I can send 10msgs a day per endpoint, but with &lt;1s latency to deliver.<p>I need the ad-hoc, independent queues to be trivially created based on a shared publisher&#x2F;consumer key and I don&#x27;t care about persistence - if a msg is not delivered immediately, it should be dropped. All endpoints are behind Nat, so some polling is required.<p>Is there a service that would help me here? SNS almost works, but creating&#x2F;restricting individual queues ad-hoc makes it more work than I want to deal with. Can something else provide a trivial &quot;send(secret, queue name, message)&quot; and &quot;listen(secret, queue)&quot; functionality?<p>I&#x27;m a little tempted to just use Telegram for this.",
      "time": 1650794511,
      "title": "Ask HN: What's a global, low throughput, low latency message bus service?",
      "type": "story"
    }
  ]
}