{
  "stories": [
    {
      "by": "darknavi",
      "descendants": 0,
      "id": 30723745,
      "score": 1,
      "time": 1647618556,
      "title": "iPod Modders Give Apple’s Abandoned Music Player New Life",
      "type": "story",
      "url": "https://www.wired.com/story/ipod-modders/"
    },
    {
      "by": "merlinscholz",
      "descendants": 0,
      "id": 30723742,
      "score": 1,
      "time": 1647618537,
      "title": "Faulty if statement causes 98k ETH damages",
      "type": "story",
      "url": "https://twitter.com/mikeinspace/status/1503754795848450061"
    },
    {
      "by": "bryan0",
      "descendants": 0,
      "id": 30723739,
      "score": 1,
      "time": 1647618511,
      "title": "A 27-Year-Old Texan Became the Face of Russia’s US TV Network as It Imploded",
      "type": "story",
      "url": "https://www.texasmonthly.com/news-politics/texan-face-of-rt-america/"
    },
    {
      "by": "textinterface",
      "descendants": 0,
      "id": 30723738,
      "score": 1,
      "text": "Hi! I&#x27;m an Ubuntu user and I love exploring all kinds of apps around the internet, specially FOSS. I install new software and update their configs very often, but upgrading my OS and sharing my setup over the two laptops I use is yet not very straightforward to me.<p>Do you also have to handle that? How do you do it? Is there any good software available out there to make it easy?",
      "time": 1647618505,
      "title": "Ask HN: How do you share your personal setup over different computers?",
      "type": "story"
    },
    {
      "by": "Gadiguibou",
      "descendants": 0,
      "id": 30723736,
      "score": 1,
      "time": 1647618501,
      "title": "From zero to Tailscale in five minutes",
      "type": "story",
      "url": "https://www.gabriellacroix.com/notes/tailscale.html"
    },
    {
      "by": "chippy",
      "descendants": 0,
      "id": 30723721,
      "score": 2,
      "time": 1647618396,
      "title": "AI Generated Utopias",
      "type": "story",
      "url": "https://www.aiweirdness.com/ai-generated-utopias/"
    },
    {
      "by": "matbilodeau",
      "descendants": 0,
      "id": 30723714,
      "score": 1,
      "time": 1647618372,
      "title": "Google TAG exposes 'Exotic Lily' access broker linked to Conti ransomware group",
      "type": "story",
      "url": "https://blog.google/threat-analysis-group/exposing-initial-access-broker-ties-conti/"
    },
    {
      "by": "nigerian1981",
      "descendants": 0,
      "id": 30723713,
      "score": 1,
      "time": 1647618365,
      "title": "Syrians join Russian ranks in Ukraine as Putin calls in Assad’s debt",
      "type": "story",
      "url": "https://www.theguardian.com/world/2022/mar/18/syrians-join-russian-ranks-in-ukraine-as-putin-calls-in-assads-debt"
    },
    {
      "by": "Breadmaker",
      "descendants": 0,
      "id": 30723708,
      "score": 2,
      "time": 1647618334,
      "title": "Robert Freitas was still in college when he started “Xenology”",
      "type": "story",
      "url": "https://www.inverse.com/article/30886-robert-freitas-alien-life-xenology-book-qa"
    },
    {
      "by": "amrith",
      "descendants": 0,
      "id": 30723699,
      "score": 1,
      "text": "The Intel SSE 4.2 instruction set added the new CRC32C computation instructions. They are super cool and they are SO MUCH faster than doing the CRC calculation in software.<p>But, as I was coding up crc32c for something, I noticed that the CRC32 instruction has a mode that returns a 64 bit value for 64 bit source operands, and a 64 bit value for an 8 bit source operand (in addition to 32 bit values for all the others).<p>https:&#x2F;&#x2F;www.intel.com&#x2F;content&#x2F;dam&#x2F;www&#x2F;public&#x2F;us&#x2F;en&#x2F;documents&#x2F;manuals&#x2F;64-ia-32-architectures-software-developer-instruction-set-reference-manual-325383.pdf<p>See page 2A 3-225 and 226.<p>This means there is a strange<p>unsigned __int64 _mm_crc32_u64() in the Intel intrinsics (see https:&#x2F;&#x2F;www.intel.com&#x2F;content&#x2F;www&#x2F;us&#x2F;en&#x2F;docs&#x2F;intrinsics-guide&#x2F;index.html#ig_expand=1494,1494&amp;techs=SSE4_2).<p>It isn&#x27;t a big deal, return a 64 bit value with the top two bytes set to zero, the result is correct. But, I&#x27;m sure there was some reason why Intel did this, has anyone found a good explanation for this somewhere - I&#x27;m asking only out of curiosity, not asserting that it is wrong or something.<p>I would have thought unsigned __int32 _mm_crc32_u64() would be more reasonable at least for the intrinsic, no?",
      "time": 1647618304,
      "title": "Intel SSE 4.2 CRC32C instruction set question – why return uint64_t?",
      "type": "story"
    }
  ]
}