{
  "stories": [
    {
      "by": "prostoalex",
      "descendants": 0,
      "id": 31662763,
      "score": 1,
      "time": 1654657974,
      "title": "The invention, slow adoption and near perfection of the zip (2018)",
      "type": "story",
      "url": "https://www.economist.com/christmas-specials/2018/12/18/the-invention-slow-adoption-and-near-perfection-of-the-zip"
    },
    {
      "by": "mohon",
      "descendants": 0,
      "id": 31662713,
      "kids": [
        31662748
      ],
      "score": 1,
      "text": "I&#x27;m currently working on how to speed up our analytics report development workflow.<p>So imagine, you have this table called A with this structure<p>+----------+--------------+---------+----------+<p>| location |  order_count |   gmv   |  net_gmv |<p>+----------+--------------+---------+----------+<p>| TX       |         1000 |  9000.0 |   8000.0 |<p>| FL       |         1000 |  9000.0 |   8000.0 |<p>+----------+--------------+---------+----------+<p>then you want to have another table called B with this structure<p>+-------+--------------+---------+----------+<p>|  age  |  order_count |   gmv   |  net_gmv |<p>+-------+--------------+---------+----------+<p>| 20-30 |         1000 |  9000.0 |   8000.0 |<p>| 30-40 |         1000 |  9000.0 |   8000.0 |<p>| 40-50 |         1000 |  9000.0 |   8000.0 |<p>+-------+--------------+---------+----------+<p>The location and age are the dimension needed for the report, eventually we&#x27;ll be having different dimension needed for our report. What we&#x27;re doing now is we develop a Spark-SQL job for each table. But we think this is not gonna scale because every time we want to add new dimension, we need to develop the Spark-SQL job again (same logic but different group by dimension)<p>So I&#x27;m wondering whether there&#x27;s a better way to do this. Anyone has any experience with this kind of problem before? Any pointer how to do this efficiently (I&#x27;m thinking someone could just specify the dimension they need and there&#x27;ll be a script where it&#x27;ll automatically generate the new table based on the specified dimension)<p>Thanks",
      "time": 1654657522,
      "title": "Ask HN: How do you automate your data analytics report?",
      "type": "story"
    },
    {
      "by": "1vuio0pswjnm7",
      "descendants": 0,
      "id": 31662711,
      "score": 1,
      "time": 1654657505,
      "title": "Wikimedia Dumps Mirrors",
      "type": "story",
      "url": "https://dumps.wikimedia.org/mirrors.html"
    },
    {
      "by": "grawprog",
      "descendants": 0,
      "id": 31662703,
      "score": 2,
      "time": 1654657409,
      "title": "The tech titans of Silicon Valley are in serious trouble",
      "type": "story",
      "url": "https://www.businessinsider.com/twilight-of-tech-gods-recession-stock-market-crash-silicon-valley-2022-5"
    },
    {
      "by": "lnyan",
      "descendants": 0,
      "id": 31662676,
      "score": 2,
      "time": 1654657095,
      "title": "Compositional Visual Generation with Composable Diffusion Models",
      "type": "story",
      "url": "https://energy-based-model.github.io/Compositional-Visual-Generation-with-Composable-Diffusion-Models/"
    },
    {
      "by": "samclemens",
      "descendants": 1,
      "id": 31662647,
      "kids": [
        31662708
      ],
      "score": 1,
      "time": 1654656633,
      "title": "Vintage Steel Kitchen Cabinets",
      "type": "story",
      "url": "https://retrorenovation.com/metal-kitchen-cabinets-history-design-faq/"
    },
    {
      "by": "nojs",
      "descendants": 1,
      "id": 31662594,
      "kids": [
        31662663
      ],
      "score": 2,
      "time": 1654656089,
      "title": "The Spotify Song Formula",
      "type": "story",
      "url": "https://www.bbc.com/news/entertainment-arts-61717373"
    },
    {
      "by": "lnyan",
      "descendants": 0,
      "id": 31662578,
      "score": 2,
      "time": 1654655831,
      "title": "Shape, Light, Material Decomposition from Images Using Monte Carlo Rendering",
      "type": "story",
      "url": "https://arxiv.org/abs/2206.03380"
    },
    {
      "by": "lnyan",
      "descendants": 0,
      "id": 31662569,
      "score": 2,
      "time": 1654655746,
      "title": "NeMF: Neural Motion Fields for Kinematic Animation",
      "type": "story",
      "url": "https://arxiv.org/abs/2206.03287"
    },
    {
      "by": "lnyan",
      "descendants": 0,
      "id": 31662567,
      "score": 1,
      "time": 1654655702,
      "title": "Generating Long Videos of Dynamic Scenes",
      "type": "story",
      "url": "https://www.timothybrooks.com/tech/long-videos/"
    }
  ]
}