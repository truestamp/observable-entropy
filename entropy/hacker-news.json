{
  "stories": [
    {
      "by": "emrahsamdan",
      "descendants": 0,
      "id": 30197917,
      "score": 1,
      "time": 1643918366,
      "title": "How Serverless API, Data, Schedule, Events Work",
      "type": "story",
      "url": "https://www.serverless.com/blog/how-serverless-cloud-works-part-2"
    },
    {
      "by": "mooreds",
      "descendants": 0,
      "id": 30197914,
      "score": 1,
      "time": 1643918343,
      "title": "Separating Your User Db and Authorization from Apps with Istio and FusionAuth",
      "type": "story",
      "url": "https://reachablegames.com/oidc-fusionauth-istio/"
    },
    {
      "by": "winternett",
      "descendants": 0,
      "id": 30197907,
      "score": 1,
      "text": "After seeing numerous complaints from YouTube and TikTok OC posters, thr thought occurred to me that many sites now are encouraging users to re-host content originally posted by OC creators on those platforms to each other.<p>There is apparently a huge market for false creator accounts that re-post stolen content.<p>My question is How do sites like Reddit &amp; TikTok escape criticism for duplicating YouTube content?<p>I think the platforms should hold a bit of accountability for this issue, as original content creators are often ignored, unpaid, and uncredited for most of the content that goes viral on platforms because of the repost culture they regularly don&#x27;t account properly for?",
      "time": 1643918288,
      "title": "Ask HN: How do sites like Reddit and TikTok escape criticism for repost content?",
      "type": "story"
    },
    {
      "by": "spodernet",
      "descendants": 0,
      "id": 30197867,
      "score": 1,
      "time": 1643918092,
      "title": "Public domain Posix make (a new implementation)",
      "type": "story",
      "url": "https://frippery.org/make/"
    },
    {
      "by": "jeffreyrogers",
      "descendants": 0,
      "id": 30197856,
      "score": 1,
      "time": 1643918042,
      "title": "CToy: Interactive C Live Coding Environment",
      "type": "story",
      "url": "https://github.com/anael-seghezzi/CToy"
    },
    {
      "by": "aloukissas",
      "descendants": 0,
      "id": 30197851,
      "score": 1,
      "time": 1643918032,
      "title": "World’s brightest x-rays reveal Covid-19’s damage to the body",
      "type": "story",
      "url": "https://www.nationalgeographic.com/science/article/worlds-brightest-x-rays-reveal-covid-19-damage-to-the-body"
    },
    {
      "by": "yread",
      "descendants": 0,
      "id": 30197839,
      "score": 1,
      "time": 1643917963,
      "title": "Medical isotope update: Shortage expected to last weeks",
      "type": "story",
      "url": "https://www.healthimaging.com/topics/molecular/medical-isotope-shortage-nuclear-reactor"
    },
    {
      "by": "Chetane",
      "descendants": 0,
      "id": 30197837,
      "score": 1,
      "text": "Hey there,<p>Long time lurker here! I wanted to share and get feedback on a feature I&#x27;ve been building at Flowdash. We build a form builder that _updates_ existing records.<p>Why yet another form builder? Most form products today (e.g. google form) only create new records upon submission. That’s useful for initially capturing customer data, but what happens when you need to ask extra information down the line?<p>I&#x27;ve noticed that’s usually when my process breaks, and I have to jump over to email asking for extra information and eventually end up with long email chains with file attachments and what not.<p>This got me thinking: why is it I can&#x27;t create a form that allows me to update existing records for the follow-up data requests. Found some hacks around (e.g. hidden field with a unique ID + zapier script to match and update), but nothing that worked seamlessly.<p>Anyways, that&#x27;s the story of how I ended up building my own form builder, that can be triggered to update an existing record :)<p>Is something you&#x27;ve also run into in the past? how did you solve it?<p>I would love to hear your feedback and suggestions on the idea. Thanks!<p>Demo video: https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=AUsVDyVZ-Is<p>Try it out: https:&#x2F;&#x2F;bit.ly&#x2F;3sdQpsG<p>PS: If you want to chat more about the idea, you can also email me at omar@flowdash.com",
      "time": 1643917959,
      "title": "Show HN: What do you think this form builder that *updates* existing records?",
      "type": "story"
    },
    {
      "by": "hinting",
      "descendants": 0,
      "id": 30197824,
      "score": 3,
      "time": 1643917904,
      "title": "Tools for Fast (and Less Furious) Front End Development",
      "type": "story",
      "url": "https://felt.com/blog/tools-fast-frontend-development"
    },
    {
      "by": "todsacerdoti",
      "descendants": 0,
      "id": 30197821,
      "score": 1,
      "time": 1643917874,
      "title": "Minimal Color Swatches",
      "type": "story",
      "url": "https://hugodaniel.com/posts/minimal-color-swatches/"
    }
  ]
}