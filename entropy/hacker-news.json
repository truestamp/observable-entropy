{
  "stories": [
    {
      "by": "xqcgrek2",
      "descendants": 0,
      "id": 29796195,
      "score": 1,
      "time": 1641311953,
      "title": "Matt Damon’s Viral Crypto Ad Is an Embarrassing Cash Grab",
      "type": "story",
      "url": "https://www.thedailybeast.com/matt-damons-viral-crypto-ad-is-an-embarrassing-cash-grab"
    },
    {
      "by": "tolstoyevsky",
      "descendants": 0,
      "id": 29796185,
      "score": 1,
      "text": "Hi HN, this is Guy and Dean from DAGsHub (https:&#x2F;&#x2F;www.dagshub.com). We help machine learning practitioners create a central repository for their projects, where they can leverage open-source tools to version datasets and models, track experiments, and starting today – label data, and comment on anything. Like GitHub for machine learning (you probably heard that one before, but we mean it).<p>Our vision is that anyone should be able to jump into an open-source data science project and contribute code, data, labeling, models, or experiments via pull request, just like you would with an open-source software project.<p>We combine awesome, popular, open-source tools, and connect them to the place you build data science projects. Lowering the barrier by doing the DevOps work for you and creating a coherent workflow that makes sense for production-oriented teams and our open-source community.<p>We did it with Git and DVC for code, data, model, and pipeline versioning, MLflow for experiment tracking, Jenkins for automation, and we’re doing it today with Label Studio.<p>How does it work?\n1. Version your code with Git (notebooks also work)\n2. Version your data, models, and pipeline with DVC\n3. Git push to your DagsHub repo\n4. DVC push to your free DVC compatible DagsHub storage, or to your preferred cloud storage which we support\n5. You get a zero-config, access-controlled MLFlow API endpoint to log experiments.<p>We saw that labeling was a big challenge for many community projects, as well as teams in the industry we spoke with. We wanted to make our community’s life a bit simpler, and since many of the challenges were around integrating labeling into the rest of the ML lifecycle, that’s exactly what we built with DagsHub Annotations and the Label Studio integration.<p>The main additions are:\n1. Zero setup labeling – we did all the work, so after you push data to DagsHub, just click a button to fire up a labeling instance\n2. Sync data from your Git&#x2F;DVC remote – after it’s up you can select what data you want to label, and it will be waiting in your workspace for you\n3. Commit back to Git – when you’re done with a version of labels, we created a “Commit” button that just adds the annotations to Git, making it easy to pull them for model training, or any other need you have while preserving the project history.\n4. Diff and discuss annotations – you can see annotations on the data itself (check out the example project below), and have discussions on them in a way that preserves context (even comment on bounding boxes on images.<p>Our platform is serving over 5000 members, hundreds of organizations, and has 3000 projects. They are using DagsHub to have all their project pieces in one place, contribute datasets, work on data for good projects, and build overall awesome things.<p>We created an example project that you can play with to see how it actually looks (https:&#x2F;&#x2F;www.dagshub.com&#x2F;DAGsHub-Official&#x2F;annotations-showcase), and of course, we’d love to hear your thoughts and feedback, and answer any questions you might have. Thank you :)",
      "time": 1641311918,
      "title": "Show HN: DagsHub – Git-integrated data labeling",
      "type": "story"
    },
    {
      "by": "jger15",
      "descendants": 0,
      "id": 29796183,
      "score": 1,
      "time": 1641311911,
      "title": "How to Watch Movies",
      "type": "story",
      "url": "https://marginalrevolution.com/marginalrevolution/2022/01/how-to-watch-movies.html"
    },
    {
      "by": "andruby",
      "descendants": 0,
      "id": 29796171,
      "score": 1,
      "time": 1641311839,
      "title": "AMD 2022 Product Premiere (At CES)",
      "type": "story",
      "url": "https://www.amd.com/en/events/ces"
    },
    {
      "by": "ushakov",
      "descendants": 0,
      "id": 29796169,
      "score": 1,
      "time": 1641311833,
      "title": "Framework Available for Pre-Order in UK, Germany, and France",
      "type": "story",
      "url": "https://frame.work/blog/now-available-for-pre-order-in-uk-germany-and-france"
    },
    {
      "by": "ItsTotallyOn",
      "descendants": 0,
      "id": 29796165,
      "score": 1,
      "time": 1641311811,
      "title": "AMD Teases 5nm Ryzen 7000 ‘Raphael’ Zen 4 CPUs, Unveils Ryzen 7 5800X3D",
      "type": "story",
      "url": "https://www.tomshardware.com/news/amd-teases-5nm-ryzen-7000-raphael-zen-4-cpus-unveils-ryzen-7-5800x3d-with-96mb-of-l3-cache"
    },
    {
      "by": "ItsTotallyOn",
      "descendants": 0,
      "id": 29796148,
      "score": 1,
      "time": 1641311749,
      "title": "AMD Unveils 6nm Ryzen 6000 ‘Rembrandt’ Chips with Zen 3, RDNA2 and DDR5",
      "type": "story",
      "url": "https://www.tomshardware.com/news/amds-6nm-ryzen-6000-rembrandt-chips-have-zen-3-rdna2-and-ddr5"
    },
    {
      "by": "solcloud",
      "descendants": 1,
      "id": 29796132,
      "kids": [
        29796133
      ],
      "score": 1,
      "time": 1641311684,
      "title": "NiceOS – PHP programmer create Linux distro that use binaries from other distros",
      "type": "story",
      "url": "https://github.com/solcloud/NiceOS"
    },
    {
      "by": "neiman1",
      "descendants": 0,
      "id": 29796099,
      "score": 1,
      "text": "Is there a task or activity that regularly causes you grief during your day-to-day (no matter how big or small)?<p>Post it here to potentially motivate someone to work on a solution!",
      "time": 1641311575,
      "title": "Ask HN: What problem do you wish someone would solve?",
      "type": "story"
    },
    {
      "by": "collinmanderson",
      "descendants": 1,
      "id": 29796094,
      "kids": [
        29796097
      ],
      "score": 1,
      "time": 1641311550,
      "title": "Today’s Django Security Release Deconstructed (4.0.1, 3.2.11, and 2.2.26)",
      "type": "story",
      "url": "https://adamj.eu/tech/2022/01/04/django-security-release/"
    }
  ]
}