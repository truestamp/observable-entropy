{
  "stories": [
    {
      "by": "leephillips",
      "descendants": 0,
      "id": 30237090,
      "score": 1,
      "time": 1644182272,
      "title": "Amazon will increase the annual price of Prime in the US",
      "type": "story",
      "url": "https://arstechnica.com/gadgets/2022/02/amazon-will-increase-the-annual-price-of-prime-in-the-us/"
    },
    {
      "by": "Petiver",
      "descendants": 0,
      "id": 30237085,
      "score": 1,
      "time": 1644182254,
      "title": "The Common Tongue of Twenty-First-Century London",
      "type": "story",
      "url": "https://www.newyorker.com/culture/personal-history/the-common-tongue-of-twenty-first-century-london"
    },
    {
      "by": "belltaco",
      "descendants": 0,
      "id": 30237080,
      "score": 1,
      "time": 1644182163,
      "title": "Reversing the link between gut microbiome and autism",
      "type": "story",
      "url": "https://cosmosmagazine.com/health/body-and-mind/autism-gut-microbiome-link-causation-disputed/"
    },
    {
      "by": "marinesebastian",
      "descendants": 0,
      "id": 30237071,
      "score": 1,
      "time": 1644182107,
      "title": "Teaching a kid to code with Pygame Zero (2019)",
      "type": "story",
      "url": "https://www.mattlayman.com/blog/2019/teach-kid-code-pygame-zero/"
    },
    {
      "by": "bariumbitmap",
      "descendants": 0,
      "id": 30237032,
      "score": 1,
      "time": 1644181856,
      "title": "Virtual Keyboards Approach Reality (2002)",
      "type": "story",
      "url": "https://www.technologyreview.com/2002/11/19/234612/virtual-keyboards-approach-reality/"
    },
    {
      "by": "NTDF9",
      "descendants": 0,
      "id": 30236996,
      "score": 2,
      "time": 1644181571,
      "title": "Scrum is not for software engineering",
      "type": "story",
      "url": "https://medium.com/@NTDF9/scrum-is-not-for-software-engineering-ede11cb79112"
    },
    {
      "by": "dmckeon",
      "descendants": 0,
      "id": 30236992,
      "score": 1,
      "time": 1644181554,
      "title": "Money and Payments: The U.S. Dollar in the Age of Digital Transformation",
      "type": "story",
      "url": "https://www.federalreserve.gov/publications/january-2022-cbdc.htm"
    },
    {
      "by": "tristanMatthias",
      "descendants": 0,
      "id": 30236958,
      "score": 1,
      "time": 1644181263,
      "title": "Awakening from the Meaning Crisis â€“ Episode 1 [video]",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=54l8_ewcOlY"
    },
    {
      "by": "taylorhughes",
      "descendants": 1,
      "id": 30236929,
      "kids": [
        30237031
      ],
      "score": 1,
      "text": "As the codebases I work in scale, I&#x27;m wondering how to think about finding &amp; detecting problems to important business logic earlier on, ideally during development.<p>The main ways to protect against regressions that I know about are 1) having a large set of (mostly integration-level, for me) automated tests, 2) adding business metric monitors, and 3) periodic manual human QA. Wondering if there&#x27;s anything I&#x27;m missing.<p>With a growing codebase, the number of tests written gets almost out of control, and it&#x27;s unclear which are the important ones. I&#x27;ve also seen business metrics being recorded in a place that &quot;misses a spot&quot; or otherwise breaks independently of the actual thing it&#x27;s measuring, too. And there&#x27;s no way to know the human flows are operating at the right granularity.<p>Is this something everyone just figures out ad hoc? What am I missing?",
      "time": 1644181053,
      "title": "Ask HN: What's the best way to protect against regressions?",
      "type": "story"
    },
    {
      "by": "_Microft",
      "descendants": 0,
      "id": 30236879,
      "score": 1,
      "time": 1644180732,
      "title": "A simple machine that points to the ISS (2019)",
      "type": "story",
      "url": "https://github.com/k4yt3x/iss-pointer"
    }
  ]
}