{
  "stories": [
    {
      "by": "theafh",
      "descendants": 0,
      "id": 29810233,
      "score": 1,
      "time": 1641396888,
      "title": "Flying Fish and Aquarium Pets Yield Secrets of Evolution",
      "type": "story",
      "url": "https://www.quantamagazine.org/flying-fish-and-aquarium-pets-yield-secrets-of-evolution-20220105/"
    },
    {
      "by": "infodocket",
      "descendants": 0,
      "id": 29810227,
      "score": 1,
      "time": 1641396874,
      "title": "Making Most of World Talent for Science? Nobel Prize and Fields Medal Experience",
      "type": "story",
      "url": "https://link.springer.com/article/10.1007/s11192-021-04236-y"
    },
    {
      "by": "pkilgore",
      "descendants": 0,
      "id": 29810226,
      "score": 1,
      "time": 1641396872,
      "title": "76ers New Metaverse Partner Somehow Getting Weirder",
      "type": "story",
      "url": "https://defector.com/76ers-new-metaverse-partner-somehow-getting-weirder/"
    },
    {
      "by": "CapitalistCartr",
      "descendants": 0,
      "id": 29810222,
      "score": 1,
      "time": 1641396855,
      "title": "How the Building Industry Blocked Better Tornado Safeguards",
      "type": "story",
      "url": "https://www.nytimes.com/2021/12/22/climate/tornadoes-building-codes-safety.html"
    },
    {
      "by": "definataly",
      "descendants": 0,
      "id": 29810221,
      "score": 1,
      "time": 1641396853,
      "title": "Introduction to Gravitational Waves Physics",
      "type": "story",
      "url": "https://alvarofeito.com/articles/ligo/"
    },
    {
      "by": "Bostonian",
      "descendants": 0,
      "id": 29810216,
      "score": 2,
      "time": 1641396843,
      "title": "Germany Shuts Down Three Perfectly Good Nuclear Power Plants",
      "type": "story",
      "url": "https://reason.com/2022/01/04/germany-shuts-down-three-perfectly-good-nuclear-power-plants/"
    },
    {
      "by": "conanxin",
      "descendants": 0,
      "id": 29810212,
      "score": 1,
      "time": 1641396832,
      "title": "Designing Internet-Native Economies: A Guide to Crypto Tokens",
      "type": "story",
      "url": "https://future.a16z.com/a-taxonomy-of-tokens-distinctions-with-a-difference/"
    },
    {
      "by": "feross",
      "descendants": 0,
      "id": 29810211,
      "score": 1,
      "time": 1641396829,
      "title": "Memory leaks: the forgotten side of web performance",
      "type": "story",
      "url": "https://nolanlawson.com/2022/01/05/memory-leaks-the-forgotten-side-of-web-performance/"
    },
    {
      "by": "habiche6",
      "descendants": 0,
      "id": 29810210,
      "score": 1,
      "time": 1641396826,
      "title": "Electromecanique and Technologie",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=RqFex7eP7QU"
    },
    {
      "by": "moneywoes",
      "descendants": 0,
      "id": 29810189,
      "score": 1,
      "text": "Unfortunately, I work at a startup where there’s no effort put into things like even leaving consistent comments.<p>Now that I’m planning on interviewing, is there a primary resource I consult on writing clean code? Especially during an interview? For example I don’t see many of the solutions on the leetcode discuss section as being maintainable.<p>I was considering purchasing the book clean code, however, I’ve seen a lot of conflicting opinions about it on Reddit.<p>I plan to interview in Python and was consulting Google’s style guide https:&#x2F;&#x2F;google.github.io&#x2F;styleguide&#x2F;pyguide.html which albeit lengthy seems great. Are there any succinct resources?",
      "time": 1641396746,
      "title": "Ask HN: How do I write clean and maintainable code",
      "type": "story"
    }
  ]
}