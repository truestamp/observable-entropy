{
  "stories": [
    {
      "by": "gusthoff",
      "descendants": 0,
      "id": 30808179,
      "score": 1,
      "time": 1648253679,
      "title": "Updates to Learn.adacore.com",
      "type": "story",
      "url": "https://blog.adacore.com/learn-2021-updates"
    },
    {
      "by": "belter",
      "descendants": 1,
      "id": 30808173,
      "kids": [
        30808174
      ],
      "score": 1,
      "time": 1648253553,
      "title": "Russia starts military drill on disputed islands off Japan",
      "type": "story",
      "url": "https://english.kyodonews.net/news/2022/03/c0868f95954a-russia-starts-military-drill-on-disputed-islands-off-japan.html"
    },
    {
      "by": "aghilmort",
      "descendants": 1,
      "id": 30808168,
      "kids": [
        30808175
      ],
      "score": 1,
      "time": 1648253512,
      "title": "Early Alpha – Study Assistance Search Engine",
      "type": "story",
      "url": "https://breezethat.com/b/study"
    },
    {
      "by": "dikaio",
      "descendants": 0,
      "id": 30808163,
      "score": 1,
      "text": "I was installing dropbox via homebrew and I was prompted with the message &quot;dropbox requires a kernel extension to work.&quot; and also a Warning &quot;No checksum defined for cask &#x27;dropbox&#x27;, skipping verification.&quot; that there was no checksum to verify the file.<p>I&#x27;m weary of installing apps that require access to the kernel or administrative access... should I be concerned?",
      "time": 1648253455,
      "title": "Dropbox requires a kernel extension to work",
      "type": "story"
    },
    {
      "by": "servytor",
      "descendants": 0,
      "id": 30808150,
      "score": 1,
      "time": 1648253282,
      "title": "Cosmicism, the literary philosophy of H.P. Lovecraft",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Cosmicism"
    },
    {
      "by": "drewmate",
      "descendants": 0,
      "id": 30808136,
      "score": 1,
      "time": 1648253120,
      "title": "Where Counties Are Growing",
      "type": "story",
      "url": "https://www.census.gov/library/visualizations/2022/comm/where-counties-are-growing.html"
    },
    {
      "by": "marxo",
      "descendants": 0,
      "id": 30808113,
      "score": 1,
      "time": 1648252847,
      "title": "JavaScript Remote Jobs",
      "type": "story",
      "url": "https://javascriptremote.com"
    },
    {
      "by": "maydemir",
      "descendants": 0,
      "id": 30808107,
      "score": 1,
      "time": 1648252825,
      "title": "Uthash – C macros for hash tables and more",
      "type": "story",
      "url": "https://github.com/troydhanson/uthash"
    },
    {
      "by": "JNRowe",
      "descendants": 0,
      "id": 30808090,
      "score": 1,
      "time": 1648252627,
      "title": "N2: Revisiting Ninja",
      "type": "story",
      "url": "http://neugierig.org/software/blog/2022/03/n2.html"
    },
    {
      "by": "vxGxKrGU",
      "descendants": 1,
      "id": 30808071,
      "kids": [
        30808101
      ],
      "score": 2,
      "text": "I have this idea, guys I wanted to know your opinion:<p>1. My idea would be an open file format called csvsheets. csvsheets file is csv format with spreadsheet function. My idea would be how people have a database in a spreadsheet but with a freer format without much complexity.\n2. This would be nice if you don&#x27;t want to rely on software company to open plain text files like Microsoft Office Excel etc. I thought about it because I think the xml format in my view compared to csv is bad. xslx is xml based is proprietary. There are of course open file formats, that&#x27;s my idea of   open file format.\n3. I was thinking of using the sqlite format, but it&#x27;s something that hasn&#x27;t been implemented yet.<p>```\n =CONCATENAR(A1:H7,A1:H7,1), =PISO(A1:H7,A1:H7,1), =BINOMDIST(A1:H7,A1:H7,1)\n =CHIDIST(A1:H7,A1:H7,1), =CHIINV(A1:H7,A1:H7,1), =CHITEST(A1:H7,A1:H7,1)\n =CONFIANÇA(A1:H7,A1:H7,1), =FTEST(A1:H7,A1:H7,1), =LOGINV(A1:H7,A1:H7,1)\n =LOGNORMDIST(A1:H7,A1:H7,1), = DIST.NORM(A1:H7,A1:H7,1), =NORMINV(A1:H7,A1:H7,1)\n = DIST.NORM(A1:H7,A1:H7,1), =NORMSINV(A1:H7,A1:H7,1), =PERCENTIL(A1:H7,A1:H7,1)\n ...\n```\ncommand description: These are some functions, it&#x27;s just an illustration of csvhseets<p>#### Ideas\n1. I don&#x27;t want to depend on a software company to open simple databases like csv. Csvsheets is an interesting format and not yet implemented\n2. My idea would be implementation, but I want to know everyone&#x27;s opinion here. My idea is with csvsheets is that i get business rules from spreadsheet files and easily if i need to replace with a database like postgres, mongodb, sql server, mariadb i can\n3. Csvsheets makes it easy to migrate from robust spreadsheets, that&#x27;s the idea\n4. There are trades that a database of many data is made by electronic spreadsheet. My idea here is to give people freedom\n5. This format reserved in gpl 2 license which is the same as linux. I believe csvsheets format can help people who don&#x27;t have the money for a robust database. There is no size for csvsheets files. The choice of csv format is that many databases are already able to read this file format\n6. In theory you can get a very fast system with csvsheets, just know csv and excel and create the rules in csv with excel formulas.\n7. The cool thing about this is the possibility of migrating the data to a larger database. The coolest is a csv file format with excel formula support. The GUI part would be done with html, css, js. There are systems like firefox os that implement this. Talk about csvsheets which is something very interesting, but I forgot to talk about how to create a csvsheets interface.\n8. Thought to implement csvsheets in rust, there is a browser made in rust called servo, the servo supports html, js, css.\n9. With the servo implementation I wanted a visual structure for the csvsheets. In summary, csvsheets is a csv format with excel formula support, a visual interface made from html, css, js.\n10. The manipulation and data structure part is the same as sql but applied to a csvsheets. The graphics part is not done by the graphical user interface, it is done by the command line.\n11. My idea is this:\n    1. Format name: CSV Spreadsheets, extension: .csvsht\n    2. Data Manipulation Language (DML), Data Definition Language (DDL), Data Control Language (DCL), Transactional Control Language (TCL) is the same as Transact-SQL for csvsht. But supports: SchemeQL, CLSQL, ScalaQL ... \n    3. Spreadsheet Extended Data Definition Language for Business Rules: Markdeep, Svgbob, asciigrid, Archetype, Textik, ASCIIFlow, textik, fsymbols ... this allows you to create business rules, open charts in csvsheets\n    4. Every csvsht file can generate an api in several programming languages: python, lisp, c, c++ ...",
      "time": 1648252264,
      "title": "Open File Format for Spreadsheets",
      "type": "story"
    }
  ]
}