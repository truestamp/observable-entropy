{
  "stories": [
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 30098738,
      "score": 1,
      "time": 1643279955,
      "title": "The Authoritarians (2006)",
      "type": "story",
      "url": "https://theauthoritarians.org/"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 30098733,
      "score": 1,
      "time": 1643279939,
      "title": "Moscowâ€™s Metro Dogs (2013)",
      "type": "story",
      "url": "https://www.newyorker.com/culture/culture-desk/moscows-metro-dogs"
    },
    {
      "by": "pseudolus",
      "descendants": 0,
      "id": 30098712,
      "score": 1,
      "time": 1643279784,
      "title": "The Case for Writing Longhand",
      "type": "story",
      "url": "https://www.nytimes.com/2022/01/21/insider/the-case-for-writing-longhand-its-about-trying-to-create-that-little-space-of-freedom.html"
    },
    {
      "by": "LittlePeter",
      "descendants": 0,
      "id": 30098709,
      "score": 1,
      "time": 1643279769,
      "title": "Speed, Quality, and the Optimal Timing of Complex Decisions: Field Evidence",
      "type": "story",
      "url": "https://arxiv.org/abs/2201.10808"
    },
    {
      "by": "mutant_self",
      "descendants": 0,
      "id": 30098701,
      "score": 1,
      "time": 1643279698,
      "title": "PyHeck: A fast Python case conversion library in just 106 lines of Rust code",
      "type": "story",
      "url": "https://old.reddit.com/r/Python/comments/sdkkqb/pyheck_i_wrote_a_fast_case_conversion_library/"
    },
    {
      "by": "pseudolus",
      "descendants": 0,
      "id": 30098687,
      "score": 1,
      "time": 1643279553,
      "title": "Government Scientists Create 'Burning Plasma' in Fusion Energy Milestone",
      "type": "story",
      "url": "https://www.vice.com/en/article/93bda8/government-scientists-create-burning-plasma-in-fusion-energy-milestone"
    },
    {
      "by": "ColinWright",
      "descendants": 0,
      "id": 30098683,
      "score": 1,
      "time": 1643279534,
      "title": "Elon Musk SpaceX rocket on collision course with moon",
      "type": "story",
      "url": "https://www.bbc.co.uk/news/science-environment-60148543"
    },
    {
      "by": "throwawaynay",
      "descendants": 0,
      "id": 30098671,
      "parts": [
        30098672,
        30098673,
        30098674
      ],
      "score": 1,
      "text": "I live in western Europe.<p>I&#x27;ve worked for 4 different companies, for European salaries, without doing any leetcode type interviews(I ditched any company that was doing it), it was either take home tests about real problems, technical questions, or sometimes just trust in my abilities given my previous experiences.<p>I&#x27;ve never really trained for leetcode(or not consciously at least, I did do a bit of algorithms&#x2F;data structures of course), mostly because I know that I would panic and perform poorly in this kind of interview, so I don&#x27;t really see the point of practicing for that.(it&#x27;s not really about whether or not I can solve a hard leetcode problem, it&#x27;s about if I want to do it live in front of a recruiter, it make me anxious just to think about that and I don&#x27;t want to inflict that on myself), I&#x27;d much rather have a hard take home test than an easy leetcode interview.<p>+If I have to spend a few hundreds hours of hard work on something I&#x27;d much rather work on an useful and potentially profitable side-project, rather than on pointless problems already solved thousand&#x2F;millions of times.<p>Do you think grinding leetcode is an absolute necessity to land a good job at a company hiring worldwide remotely? I&#x27;d be aiming for salaries around 80-100k$. In my country the only companies paying that are FAANGs.<p>Thanks for your answers",
      "time": 1643279410,
      "title": "Poll: Is the leetcode grind necessary to land a high paying remote job?",
      "type": "poll"
    },
    {
      "by": "MarkurSens",
      "descendants": 0,
      "id": 30098665,
      "score": 1,
      "text": "I&#x27;m developing a proprietary product delivered as a docker image &#x2F;container. I&#x27;m looking for ways to issue licenses to those who pay for it (think product key).<p>Obviously, I&#x27;m in no mood to start handling encryption processes so  I started looking for solutions.<p>I came across products like keygen, kryptolens, and netlicensing.io that offer some sort of API to validate licenses within the app, but all of these are small companies with 5-10 people that could go out of business any time and generally I don&#x27;t see any &quot;big names&quot; there.<p>Am I missing something obvious here? What are the standard solutions for this?",
      "time": 1643279375,
      "title": "Ask HN: What tools are available for proprietary software licensing?",
      "type": "story"
    },
    {
      "by": "sofixa",
      "descendants": 0,
      "id": 30098661,
      "score": 1,
      "time": 1643279352,
      "title": "Valve confirms Steam Deck shipment, review dates: By the end of February",
      "type": "story",
      "url": "https://arstechnica.com/gaming/2022/01/valve-confirms-steam-deck-shipment-review-dates-by-the-end-of-february/"
    }
  ]
}