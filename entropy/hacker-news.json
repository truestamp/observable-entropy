{
  "stories": [
    null,
    {
      "by": "linkdd",
      "descendants": 0,
      "id": 31288114,
      "score": 1,
      "text": "Hi HN,<p>It&#x27;s been some time now since I&#x27;ve started working on my own programming language. But I never wrote the spec.<p>I love the concept of PEP (Python Enhancement Proposals) and it inspired me to start writing the spec in a similar format.<p>As of now, I&#x27;ve written 4 LEPs:<p><pre><code>  - LEP-001: Language Target - https:&#x2F;&#x2F;letlang.dev&#x2F;lep&#x2F;001&#x2F;\n  - LEP-002: Import resolution - https:&#x2F;&#x2F;letlang.dev&#x2F;lep&#x2F;002&#x2F;\n  - LEP-003: Statements - https:&#x2F;&#x2F;letlang.dev&#x2F;lep&#x2F;003&#x2F;\n  - LEP-004: Type System - https:&#x2F;&#x2F;letlang.dev&#x2F;lep&#x2F;004&#x2F;\n</code></pre>\nAnd I&#x27;ve started to write the following LEPs:<p><pre><code>  - LEP-005: Functions\n  - LEP-006: Side Effects\n  - LEP-007: SAT Solver\n</code></pre>\nI think this will help me stop changing my mind for starters, but also help me get the implementation right (which is still a work in progress).<p>The Github repository is not yet opensource, I intend to open it once the &quot;hello world&quot; example compiles. I&#x27;m still wondering what would be a good license to use for a compiler, I&#x27;d love your feedback.",
      "time": 1651860243,
      "title": "Show HN: Letlang specification inspired by Python PEPs (WIP)",
      "type": "story",
      "url": "https://letlang.dev/lep/"
    },
    {
      "by": "gojiberries",
      "descendants": 0,
      "id": 31288101,
      "score": 1,
      "time": 1651860130,
      "title": "Pryrite: Interactively execute shell code blocks in a Markdown file",
      "type": "story",
      "url": "https://github.com/1xyz/pryrite"
    },
    {
      "by": "bothra90",
      "descendants": 0,
      "id": 31288098,
      "score": 1,
      "time": 1651860118,
      "title": "The Case for Consolidation",
      "type": "story",
      "url": "https://benn.substack.com/p/case-for-consolidation"
    },
    {
      "by": "keeganjw",
      "descendants": 0,
      "id": 31288090,
      "score": 1,
      "time": 1651860051,
      "title": "A Fight over Americaâ€™s Energy Future Erupts on the Canadian Border",
      "type": "story",
      "url": "https://www.nytimes.com/2022/05/06/climate/hydro-quebec-maine-clean-energy.html"
    },
    {
      "by": "slater",
      "descendants": 0,
      "id": 31288059,
      "score": 1,
      "time": 1651859937,
      "title": "The Halfbakery",
      "type": "story",
      "url": "https://www.halfbakery.com/"
    },
    {
      "by": "todsacerdoti",
      "descendants": 0,
      "id": 31288050,
      "score": 1,
      "time": 1651859892,
      "title": "Fig Terminal Auto-Complete Review",
      "type": "story",
      "url": "https://matduggan.com/fig-terminal-autocomplete-review/"
    },
    {
      "by": "tusslewake",
      "descendants": 0,
      "id": 31288018,
      "score": 2,
      "time": 1651859674,
      "title": "Jepson eFlora",
      "type": "story",
      "url": "https://ucjeps.berkeley.edu/eflora/"
    },
    {
      "by": "rntn",
      "descendants": 0,
      "id": 31288016,
      "score": 1,
      "time": 1651859669,
      "title": "Extremism analysis using natural language processing: trends and challenges",
      "type": "story",
      "url": "https://link.springer.com/article/10.1007/s12652-021-03658-z"
    },
    {
      "by": "elsadek",
      "descendants": 0,
      "id": 31288014,
      "score": 1,
      "time": 1651859662,
      "title": "Upgrade from iPhone se 2016 to iPhone se 2020 in 2022?",
      "type": "story",
      "url": "https://old.reddit.com/r/iphone/comments/ujt5n7/upgrade_from_iphone_se_2016_to_iphone_se_2020_in/"
    }
  ]
}