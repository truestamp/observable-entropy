{
  "stories": [
    {
      "by": "votick",
      "descendants": 0,
      "id": 32182767,
      "score": 1,
      "time": 1658427305,
      "title": "Show HN: Banana.dev Serverless GPUs for Machine Learning Inference",
      "type": "story",
      "url": "https://www.banana.dev"
    },
    {
      "by": "oaknutspiano",
      "descendants": 0,
      "id": 32182766,
      "score": 1,
      "text": "A few month ago my roommates and I started building Rubbrband(https:&#x2F;&#x2F;rubbrband.com). It&#x27;s a platform that helps you monitor and modify your users&#x27; Redux states, LocalStorage, and browser cache all from your browser.<p>Why did we start working on this?<p>We want to make the data layer on the client-side less siloed from developers. This is obviously hard because each client&#x27;s device is remote and is typically part of one-way communication.<p>Essentially we&#x27;re building the set of tools that we each wanted as developers building web apps that go into production. One of the main issues we found is that most frontend bugs we&#x27;ve found came from some sort of a data state issue, which got extremely frustrating when the code went into production since you&#x27;d have to talk to the customer, get on a call, etc... We wanted a simple way to monitor the user&#x27;s app, contextualize it in the grander scheme of the data models and application structure, and ideally push out an OTA update that would patch bugs.<p>What&#x27;s included<p>- A simple React library to monitor Redux, and LocalStorage states<p>- Monitoring user&#x27;s LocalStorage and Redux states in a clean dashboard, tied together with User data<p>- Client-side and Server-side API for serverless caching, with support for GoLang and Node.js<p>I&#x27;d love to get feedback on what you think<p>Mainly I&#x27;m interested in these questions:<p>- Does this solve a pain point that you face as a Frontend developer?<p>- What features would you want to see built out?<p>Thanks a ton!",
      "time": 1658427294,
      "title": "A Data Platform for React",
      "type": "story"
    },
    {
      "by": "noch",
      "descendants": 0,
      "id": 32182755,
      "score": 1,
      "time": 1658427201,
      "title": "Luck versus Skill in Games (2012)",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=dSg408i-eKw"
    },
    {
      "by": "gustopher",
      "descendants": 0,
      "id": 32182728,
      "score": 1,
      "time": 1658427038,
      "title": "Alaska Airlines Announces Batteryless Electronic Bag Tags",
      "type": "story",
      "url": "https://www.geekwire.com/2022/alaska-airlines-to-roll-out-electronic-bag-tags-to-save-time-and-paper-at-the-airport/"
    },
    {
      "by": "serverlessmom",
      "descendants": 0,
      "id": 32182717,
      "score": 1,
      "time": 1658426964,
      "title": "How Long It Would Take a Hacker to Brute Force Your Password in 2022, Ranked",
      "type": "story",
      "url": "https://digg.com/technology/link/how-long-it-takes-to-get-password-hacked-1IvDFspF6p"
    },
    {
      "by": "woldemariam",
      "descendants": 1,
      "id": 32182699,
      "kids": [
        32182715
      ],
      "score": 1,
      "time": 1658426882,
      "title": "Heat pumps are efficient and eco-friendly. So why are they so rarely used?",
      "type": "story",
      "url": "https://www.washingtonpost.com/technology/2022/07/21/europe-heat-wave-heat-pump/"
    },
    {
      "by": "2517AD",
      "descendants": 0,
      "id": 32182684,
      "score": 2,
      "time": 1658426801,
      "title": "The Birth of Random-Access Memory",
      "type": "story",
      "url": "https://spectrum.ieee.org/the-birth-of-ram"
    },
    {
      "by": "dirslashls",
      "descendants": 0,
      "id": 32182674,
      "score": 1,
      "text": "I have a product called SQL Frames that provides in-browser analytics. I was exploring how to integrate this into JAMSTACK. I learned about how to create docusaurus plugin and React components to make it easy to integrate SQL Frames. For example, after installing docusaurus, all it takes is &quot;npm install @sqlframes&#x2F;docusaurus-plugin@latest @sqlframes&#x2F;docusaurus-components@latest&quot; (extra configuration to specify a license key if desired) jamstackanalytics.com is just a preview website to show what kind of analytics UX is possible with JAMSTACK and in-browser analytics. The primary target for this technology is internal teams that need analytics and rapid data exploration capabilities and iterate fast without waiting for changes to data models in the backend. Docusaurus is one JAMSTACK candidate but I want to explore others as well. Looking for feedback on the idea, UX at the preview site and what other JAMSTACK are good choices to expand on.",
      "time": 1658426748,
      "title": "Show HN: In-browser analytics within JAMSTACK",
      "type": "story",
      "url": "https://jamstackanalytics.com/"
    },
    {
      "by": "bananapear",
      "descendants": 0,
      "id": 32182671,
      "score": 2,
      "time": 1658426737,
      "title": "Line search before you dig",
      "type": "story",
      "url": "https://lsbud.co.uk/"
    },
    {
      "by": "FeaturelessBug",
      "descendants": 0,
      "id": 32182667,
      "score": 1,
      "time": 1658426704,
      "title": "Minecraft studio wants nothing to do with NFTs",
      "type": "story",
      "url": "https://www.engadget.com/minecraft-nfts-blockchain-mojang-microsoft-204311069.html"
    }
  ]
}