{
  "stories": [
    {
      "by": "lukastyrychtr",
      "descendants": 0,
      "id": 29780151,
      "score": 1,
      "time": 1641213459,
      "title": "This Year in Wgpu â€“ 2021",
      "type": "story",
      "url": "https://gfx-rs.github.io/2021/12/25/this-year.html"
    },
    {
      "by": "luke2m",
      "descendants": 0,
      "id": 29780150,
      "score": 1,
      "time": 1641213455,
      "title": "AaronOS",
      "type": "story",
      "url": "https://aaronos.dev/AaronOS/aosBeta.php"
    },
    {
      "by": "tosh",
      "descendants": 0,
      "id": 29780148,
      "score": 1,
      "time": 1641213440,
      "title": "Sonic 3D: Director's Cut",
      "type": "story",
      "url": "https://info.sonicretro.org/Sonic_3D:_Director%27s_Cut"
    },
    {
      "by": "lukastyrychtr",
      "descendants": 0,
      "id": 29780132,
      "score": 1,
      "time": 1641213311,
      "title": "Hello, Youki",
      "type": "story",
      "url": "https://www.utam0k.jp/en/blog/2021/12/27/youki_first_release/"
    },
    {
      "by": "daly",
      "descendants": 0,
      "id": 29780109,
      "score": 2,
      "text": "It seems to me that a Neural Network is essentially a distributed form of content addressable memory (CAM). (https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Content-addressable_memory)<p>It should be possible to extract the information in the Neural Network and collapse it into a flat content addressable memory. The Neural Network is basically a matrix of stored values. The input to the network is a vector. The output is a vector of weights.<p>Each input &#x2F; output pair recognized could be stored in a CAM, giving O(1) lookup.<p>You could &quot;invert&quot; it by using the output vector as the key, giving the input on lookup.<p>Of course, you are unlikely to find an exact match on the input vectors. Instead you&#x27;d like to be able to provide an &quot;interval&quot; for each input vector entry. Values that fall within the interval provide a fuzzy match, essentially a Fuzzy Content Addressable Memory (FCAM).<p>Such fuzzy matches are easier to implement in an analog fashion, such as a charge on a capacitor. An interesting question would be how to modify the circuit mentioned in the Wikipedia article above to provide analog matching.<p>FCAMs would make an interesting model of neurons if their &quot;match&quot; was dependent on their history of access as measured by the charge remaining on the capacitor, which would leak over time if not accessed.",
      "time": 1641213072,
      "title": "Content Addressable Memory and Neural Networks",
      "type": "story"
    },
    {
      "by": "serdigital64",
      "descendants": 0,
      "id": 29780098,
      "score": 2,
      "time": 1641212994,
      "title": "Terraform Scripting Concepts",
      "type": "story",
      "url": "https://serdigital64.github.io/post/terraform/terraform-scripting-concepts-part1of2/"
    },
    {
      "by": "radmuzom",
      "descendants": 0,
      "id": 29780074,
      "score": 2,
      "time": 1641212858,
      "title": "Those Who Don't Understand Section 230 Are Doomed to Repeal It",
      "type": "story",
      "url": "https://www.techdirt.com/articles/20211228/17164048192/those-who-dont-understand-section-230-are-doomed-to-repeal-it.shtml"
    },
    {
      "by": "msadowski",
      "descendants": 0,
      "id": 29780073,
      "score": 1,
      "time": 1641212857,
      "title": "Show HN: Robotics in 2021",
      "type": "story",
      "url": "https://weeklyrobotics.com/weekly-robotics-2021"
    },
    {
      "by": "asicsp",
      "descendants": 0,
      "id": 29780064,
      "score": 1,
      "time": 1641212790,
      "title": "The Good Research Code Handbook",
      "type": "story",
      "url": "https://goodresearch.dev/index.html"
    },
    {
      "by": "ingve",
      "descendants": 0,
      "id": 29780007,
      "score": 2,
      "time": 1641212300,
      "title": "Profiling Linkers",
      "type": "story",
      "url": "https://fasterthanli.me/articles/profiling-linkers"
    }
  ]
}