{
  "stories": [
    {
      "by": "tosh",
      "descendants": 0,
      "id": 29613160,
      "score": 1,
      "time": 1639913884,
      "title": "Jurassic Park: Trespasser CG Source Code Review (2014)",
      "type": "story",
      "url": "https://fabiensanglard.net/trespasser/index.php"
    },
    {
      "by": "gkorland",
      "descendants": 0,
      "id": 29613157,
      "score": 1,
      "time": 1639913796,
      "title": "A replacement for serde-JSON's Value type, significantly more memory efficient",
      "type": "story",
      "url": "https://github.com/Diggsey/ijson"
    },
    {
      "by": "rustoo",
      "descendants": 0,
      "id": 29613154,
      "score": 1,
      "time": 1639913738,
      "title": "The Rise in Global Debt",
      "type": "story",
      "url": "https://conversableeconomist.wpcomstaging.com/2021/12/16/the-rise-in-global-debt/"
    },
    {
      "by": "shelfchair",
      "descendants": 0,
      "id": 29613152,
      "score": 1,
      "time": 1639913715,
      "title": "Program Emacs in Python",
      "type": "story",
      "url": "https://github.com/zielmicha/emacspy"
    },
    {
      "by": "tim333",
      "descendants": 0,
      "id": 29613149,
      "score": 1,
      "time": 1639913644,
      "title": "A New Company with a Wild Mission: Bring Back the Woolly Mammoth",
      "type": "story",
      "url": "https://www.nytimes.com/2021/09/13/science/colossal-woolly-mammoth-DNA.html"
    },
    {
      "by": "brianzelip",
      "descendants": 0,
      "id": 29613144,
      "score": 1,
      "time": 1639913603,
      "title": "Omnizart Music Transcription",
      "type": "story",
      "url": "https://music-and-culture-technology-lab.github.io/omnizart-doc/"
    },
    {
      "by": "swyx",
      "descendants": 0,
      "id": 29613136,
      "score": 1,
      "time": 1639913541,
      "title": "Princeton CS Profs sends fake CCPA requests to businesses as “research”",
      "type": "story",
      "url": "https://twitter.com/jamesivings/status/1472452983866544136"
    },
    {
      "by": "gjvc",
      "descendants": 0,
      "id": 29613134,
      "score": 1,
      "time": 1639913533,
      "title": "Patchwork – a web-based patch tracking system",
      "type": "story",
      "url": "http://jk.ozlabs.org/projects/patchwork/"
    },
    {
      "by": "dennisy",
      "descendants": 0,
      "id": 29613107,
      "score": 2,
      "text": "I was recently recommended an incredible talk on boundaries by Gary Bernhardt [1], and right away I fell in love with this concept. I then found a further video [2] on this topic and also a HN thread [3].<p>But I need more information on this, I would love to learn more and be able to apply this to my own software, so I was wondering:<p>- Are there example of non trivial apps written in this manner?<p>- Are there more resources which explain the data not code as boundaries concept?<p>- Is there possibly a relevant book?<p>[1] https:&#x2F;&#x2F;www.destroyallsoftware.com&#x2F;talks&#x2F;boundaries<p>[2] https:&#x2F;&#x2F;www.destroyallsoftware.com&#x2F;screencasts&#x2F;catalog&#x2F;functional-core-imperative-shell<p>[3] https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=18043058",
      "time": 1639913177,
      "title": "Ask HN: Functional Core, Imperative Shell",
      "type": "story"
    },
    {
      "by": "1_player",
      "descendants": 6,
      "id": 29612976,
      "kids": [
        29613171,
        29613097,
        29613106,
        29613082,
        29613026,
        29613085
      ],
      "score": 42,
      "time": 1639911480,
      "title": "Bottles: GUI front end to run Windows software on Linux",
      "type": "story",
      "url": "https://usebottles.com/"
    }
  ]
}