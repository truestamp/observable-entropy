{
  "stories": [
    {
      "by": "rcarmo",
      "descendants": 0,
      "id": 31386499,
      "score": 1,
      "time": 1652608758,
      "title": "Balloon Guitar Is an Absolute Gas, Helium or Not",
      "type": "story",
      "url": "https://hackaday.com/2022/05/14/balloon-guitar-is-an-absolute-gas-helium-or-not/"
    },
    {
      "by": "spark3k",
      "descendants": 0,
      "id": 31386493,
      "score": 1,
      "time": 1652608699,
      "title": "Drum magazine for dropping mortar rounds from commercial drones",
      "type": "story",
      "url": "https://twitter.com/defmon3/status/1525448394159931394"
    },
    {
      "by": "nathanganser",
      "descendants": 0,
      "id": 31386483,
      "score": 1,
      "text": "I&#x27;ve always heard that narrative that micropayments simply won&#x27;t work and that people don&#x27;t like it.<p>Recently, I&#x27;ve found myself paying for OpenAI&#x27;s GPT-3 playground app in micropayments format. I use it for small tasks here and there and pay around 2-4$ a month. It feels totally fine and now I don&#x27;t see why I wouldn&#x27;t do the same for my Google searches or usage of maps.<p>Does anyone else have examples of services&#x2F;products that they pay for in micropayments?",
      "time": 1652608463,
      "title": "Ask HN: Is There Hope for Micropayments?",
      "type": "story"
    },
    {
      "by": "novoreorx",
      "descendants": 1,
      "id": 31386469,
      "kids": [
        31386470
      ],
      "score": 1,
      "time": 1652608265,
      "title": "Tips that may save you from the hell of PyYAML",
      "type": "story",
      "url": "https://reorx.com/blog/python-yaml-tips/"
    },
    {
      "by": "J253",
      "descendants": 0,
      "id": 31386460,
      "score": 2,
      "time": 1652608075,
      "title": "Phylum Raises $15M to Proactively Defend the Open-Source Supply Chain",
      "type": "story",
      "url": "https://www.prnewswire.com/news-releases/phylum-raises-15-million-to-proactively-defend-the-open-source-supply-chain-301537863.html"
    },
    {
      "by": "geox",
      "descendants": 0,
      "id": 31386449,
      "score": 1,
      "time": 1652607961,
      "title": "Creating an Earth Archive",
      "type": "story",
      "url": "https://www.pnas.org/doi/10.1073/pnas.2115485119"
    },
    {
      "by": "vitabenes",
      "descendants": 0,
      "id": 31386434,
      "score": 1,
      "time": 1652607779,
      "title": "Ways Social Media Distorts Reality",
      "type": "story",
      "url": "https://mailchi.mp/humanetech.com/8-ways-social-media-distorts-our-realities"
    },
    {
      "by": "dcminter",
      "descendants": 0,
      "id": 31386419,
      "score": 1,
      "time": 1652607468,
      "title": "The BepiColombo ‘model’: looking beyond the ‘original’",
      "type": "story",
      "url": "http://journal.sciencemuseum.ac.uk/browse/issue-17/bepicolumbo/"
    },
    {
      "by": "cmitsakis",
      "descendants": 0,
      "id": 31386414,
      "score": 1,
      "text": "I recently published a new worker pool library that uses generics.<p>Generics allowed me to design a different API from other libraries. Instead of submitting a function for each task (as other libraries do), you submit values. This enabled me to make the pools connectable into pipelines, which can be useful if you want to separate IO-intensive from CPU-intensive tasks, or tasks of different parallelizability.<p>It also supports auto-scaling (resizable number of workers), which currently works well for my needs, but has a lot of room for improvement, especially in the case of pipelines with bottleneck.<p>Type Pool[I, O, C any] has three type parameters, but if you don&#x27;t need all of them, I offer constructors that hide some of those types (by assigning them to empty struct).<p>I would appreciate your feedback.",
      "time": 1652607420,
      "title": "Show HN: Auto-scaling worker pool library, using Go 1.18 generics",
      "type": "story",
      "url": "https://github.com/cmitsakis/workerpool-go"
    },
    {
      "by": "minkwwwimr",
      "descendants": 2,
      "id": 31386392,
      "kids": [
        31386496,
        31386393
      ],
      "score": 1,
      "time": 1652607122,
      "title": "Web 3.0: When in Doubt, Do the Opposite",
      "type": "story",
      "url": "https://hackernoon.com/web-30-when-in-doubt-do-the-opposite"
    }
  ]
}