{
  "stories": [
    {
      "by": "onychomys",
      "descendants": 0,
      "id": 30458607,
      "score": 1,
      "time": 1645728586,
      "title": "What Happens When Police Use AI to Predict and Prevent Crime?",
      "type": "story",
      "url": "https://daily.jstor.org/what-happens-when-police-use-ai-to-predict-and-prevent-crime/"
    },
    {
      "by": "cpeterso",
      "descendants": 0,
      "id": 30458604,
      "score": 1,
      "time": 1645728579,
      "title": "A time before Wordle: Newspapers used to hate word puzzles",
      "type": "story",
      "url": "https://www.niemanlab.org/2022/02/a-time-before-wordle-newspapers-used-to-hate-word-puzzles/"
    },
    {
      "by": "0066cc",
      "descendants": 0,
      "id": 30458597,
      "score": 1,
      "time": 1645728551,
      "title": "Why Can’t We Agree on What’s True?",
      "type": "story",
      "url": "https://wiobyrne.com/why-cant-we-agree-on-whats-true/"
    },
    {
      "by": "Anon84",
      "descendants": 0,
      "id": 30458582,
      "score": 1,
      "time": 1645728470,
      "title": "Medical misinformation often isn’t outright lies. It’s more subtle than that",
      "type": "story",
      "url": "https://www.statnews.com/2022/02/22/misinformation-often-isnt-outright-lies-more-subtle-than-that/"
    },
    {
      "by": "luu",
      "descendants": 0,
      "id": 30458580,
      "score": 1,
      "time": 1645728464,
      "title": "PostgreSQL Guide",
      "type": "story",
      "url": "https://gist.github.com/jcoleman/1e6ad1bf8de454c166da94b67537758b"
    },
    {
      "by": "BenLloydPearson",
      "descendants": 0,
      "id": 30458577,
      "score": 1,
      "time": 1645728442,
      "title": "Turning Neovim into a Full-Fledged Code Editor with Lua",
      "type": "story",
      "url": "https://mattermost.com/blog/turning-neovim-into-a-full-fledged-code-editor-with-lua/"
    },
    {
      "by": "lopis",
      "descendants": 0,
      "id": 30458572,
      "score": 1,
      "time": 1645728438,
      "title": "Why are the stars not magnified in the telescope? (2000)",
      "type": "story",
      "url": "https://books.google.com/books/about/Astronomy_for_Entertainment.html?hl=de&id=2Sc_eaR9c9UC"
    },
    {
      "by": "tychonoff",
      "descendants": 0,
      "id": 30458495,
      "kids": [
        30458560
      ],
      "score": 2,
      "time": 1645728111,
      "title": "Where to find the world’s best programmers",
      "type": "story",
      "url": "https://www.cio.com/article/236406/where-to-find-the-worlds-best-programmers.html"
    },
    {
      "by": "mooreds",
      "descendants": 0,
      "id": 30458481,
      "score": 1,
      "time": 1645727999,
      "title": "Implementing RBAC in Kubernetes with FusionAuth",
      "type": "story",
      "url": "https://fusionauth.io/blog/2022/02/24/rbac-with-kubernetes-fusionauth"
    },
    {
      "by": "oshams",
      "descendants": 0,
      "id": 30458465,
      "score": 6,
      "text": "Hi HN, I’m Omar the Founder and CEO of MutableAI (YC W22) (<a href=\"https:&#x2F;&#x2F;mutable.ai\" rel=\"nofollow\">https:&#x2F;&#x2F;mutable.ai</a>). We transform Jupyter notebook code into production-quality Python code using a combination of AI (OpenAI codex) and PL metaprogramming techniques.<p>I&#x27;m obsessed with clean code because I&#x27;ve written so much terrible code in the past. I went from being a theoretical physics PhD dropout -&gt; data scientist -&gt; software engineer at Google -&gt; research engineer at DeepMind -&gt; ML engineer at Apple. In that time I&#x27;ve grown to tremendously value code quality. Clean code is not only more maintainable but also more extensible as you can more readily add new features. It even enables you to think thoughts that you may have never considered before.<p>I want to reduce the cost of clean, production-quality code using AI, and am starting with a niche I&#x27;m intimately familiar with (Jupyter), because it&#x27;s particularly prone to bad code. Jupyter notebooks are beloved by data scientists, but notorious for having spaghetti code that is low on readability, hard to maintain, and hard to move into a production codebase or even share with a colleague. That’s why a Kaggle Grandmaster shocked his audience and recommended that they do not use Jupyter notebooks [1].<p>MutableAI allows developers to get the best of both worlds: Jupyter’s easy prototyping and visualization, plus greatly improved quality with our AI product. We also offer a full featured AI autocomplete to help prototyping go faster. I think the quadrant of &quot;easy to develop in&quot; and &quot;easy to create high quality code&quot; has been almost empty, and AI can help fill this gap.<p>Right now there are two ways of manipulating programs: PL techniques for program analysis and transformation, and large scale transformers from OpenAI&#x2F;DeepMind, which are trained on code treated as text (tokens) and don&#x27;t look at the tree structure of code (ASTs).  MutableAI combines OpenAI Codex &#x2F; Copilot with traditional PL analysis (variable lifetimes, scopes, etc.) and statistical filters to identify AST transformations that, when successively applied, produce cleaner code.<p>We use OpenAI&#x27;s Codex to document and type the code, and for AI autocomplete. We use PL techniques to refactor the code (e.g. extract methods), remove zombie code, and normalize formatting (e.g. remove weird spacing). We use statistical filters to detect opportunities for refactoring, for example when a large grouping of variable lifetimes are suddenly created and destroyed, which can be an opportunity to extract a function.<p>Some of the PL techniques are similar to traditional refactoring tools, but those tools don’t help you decide when and how to refactor. We use AI and stats to do that, as well as to generate names when the new code needs them.<p>A tool that reduces the time to productionize code can be compared to having an extra engineer on staff. If you take this seriously, that’s a pretty big market. Stripe Research claims that developer inefficiency is a $300B problem [2].  Just about every tech company would become more efficient through increased velocity, fewer errors, and the ability to tackle more complex problems. It may even become unthinkable to write software without this sort of tool, the same way most people don&#x27;t write assembly and use a compiler.<p>You can try the product by visiting our website, <a href=\"https:&#x2F;&#x2F;mutable.ai\" rel=\"nofollow\">https:&#x2F;&#x2F;mutable.ai</a> and creating an account on the setup page <a href=\"https:&#x2F;&#x2F;mutable.ai&#x2F;setup.html\" rel=\"nofollow\">https:&#x2F;&#x2F;mutable.ai&#x2F;setup.html</a>. License keys are on the setup page once you’ve signed up (check your mailbox for an email verification link). I’ve bumped up the budget for free accounts temporarily for the day, I hope you enjoy the product !<p>In addition to inviting the HN community to try out the product, I’d love it if you would share any tips for reducing code complexity you’ve come across and of course to hear your ideas about this problem and tools to address it.<p>[1] <a href=\"https:&#x2F;&#x2F;youtu.be&#x2F;tsGGpe-onZI?t=1067\" rel=\"nofollow\">https:&#x2F;&#x2F;youtu.be&#x2F;tsGGpe-onZI?t=1067</a><p>[2] <a href=\"https:&#x2F;&#x2F;stripe.com&#x2F;files&#x2F;reports&#x2F;the-developer-coefficient.pdf\" rel=\"nofollow\">https:&#x2F;&#x2F;stripe.com&#x2F;files&#x2F;reports&#x2F;the-developer-coefficient.p...</a>",
      "time": 1645727947,
      "title": "Launch HN: MutableAI (YC W22) – Automatically Clean Jupyter Notebooks Using AI",
      "type": "story",
      "url": "https://mutable.ai/"
    }
  ]
}