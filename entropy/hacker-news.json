{
  "stories": [
    {
      "by": "ivanvas",
      "descendants": 0,
      "id": 31203052,
      "score": 1,
      "time": 1651223413,
      "title": "Amazon's PR Genius",
      "type": "story",
      "url": "https://www.ben-evans.com/benedictevans/2014/1/1/amazons-pr-genius"
    },
    {
      "by": "jacquesm",
      "descendants": 0,
      "id": 31203030,
      "score": 1,
      "time": 1651223202,
      "title": "DFI GHF51 – Worlds Smallest AMD Ryzen SBC",
      "type": "story",
      "url": "https://williamlam.com/2022/04/dfi-ghf51-worlds-smallest-amd-ryzen-sbc.html"
    },
    {
      "by": "Borkdude",
      "descendants": 0,
      "id": 31203024,
      "score": 1,
      "text": "Together with PEZ (Peter Strömberg) I made a VSCode extension that allows you to script VSCode using Clojure (interpreted CLJS).<p>The repo:\nhttps:&#x2F;&#x2F;github.com&#x2F;BetterThanTomorrow&#x2F;joyride<p>Introductory video:<p>https:&#x2F;&#x2F;www.youtube.com&#x2F;watch?v=V1oTf-1EchU<p>See examples directory.<p>See animated gifs and news on Twitter:<p>https:&#x2F;&#x2F;twitter.com&#x2F;hashtag&#x2F;vsjoyride?src=hashtag_click&amp;f=live",
      "time": 1651223171,
      "title": "Show HN: Joyride: script VSCode like Emacs but using Clojure",
      "type": "story"
    },
    {
      "by": "andyjohnson0",
      "descendants": 0,
      "id": 31203017,
      "score": 1,
      "time": 1651223061,
      "title": "Visual Studio 2022 for Mac Release Candidate",
      "type": "story",
      "url": "https://devblogs.microsoft.com/visualstudio/visual-studio-2022-for-mac-release-candidate/"
    },
    {
      "by": "tomhuntio",
      "descendants": 0,
      "id": 31203002,
      "score": 1,
      "time": 1651222922,
      "title": "Redefining a Category in 12 Simple Steps: The State of Demand Gen Story",
      "type": "story",
      "url": "https://www.fame.so/post/state-of-demand-gen-chris-walker-podcast"
    },
    {
      "by": "daoudc",
      "descendants": 0,
      "id": 31202998,
      "score": 1,
      "time": 1651222906,
      "title": "Compost Heater",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Compost_heater"
    },
    {
      "by": "0xedb",
      "descendants": 0,
      "id": 31202982,
      "score": 1,
      "time": 1651222780,
      "title": "Making collapsed content accessible with hidden=until-found",
      "type": "story",
      "url": "https://developer.chrome.com/blog/hidden-until-found/"
    },
    {
      "by": "mariuz",
      "descendants": 0,
      "id": 31202957,
      "score": 2,
      "time": 1651222597,
      "title": "Why the Russian Army T-72 Tank Is Worse Than You Think",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=Z0xUt9A1AXw"
    },
    {
      "by": "gary_chambers",
      "descendants": 0,
      "id": 31202946,
      "score": 1,
      "text": "Hi HN! I&#x27;m Gary, the creator of Repro (<a href=\"https:&#x2F;&#x2F;repro.dev\" rel=\"nofollow\">https:&#x2F;&#x2F;repro.dev</a>), the time-travel web inspector for replayable, shareable bug reports. It is available as a free Chrome extension today (support for other browsers is coming soon).<p>I started building Repro as I was frustrated by the state of tools and processes for sharing feedback and bug reports during web development. Screenshots, videos and written bug reports can certainly be helpful, but they are inconsistently used and often do not give clear steps to reproduction.<p>Repro is an experiment in how far session recording can be an effective way for team members to communicate their feedback, both during development and on issues in production.<p>It&#x27;s at an early stage right now - the recording includes DOM mutations, styling and user interactions, but there is much more coming: console messages, network requests, performance reporting, commenting&#x2F;discussion, etc.<p>How it works:<p>When the Repro extension is running, your browsing session in the current tab is recorded into a fixed-size, in-memory buffer (no data leaves your browser until you are ready to share). When you open the Repro inspector, the recorded events are replayed - and you can pause, rewind and inspect at any time!<p>If you want to save and share a recording, you can upload it to Repro&#x27;s cloud storage. Your recording is end-to-end encrypted and a unique URL is generated for you to share.<p>For more detail or to download the Repro extension, go to <a href=\"https:&#x2F;&#x2F;repro.dev\" rel=\"nofollow\">https:&#x2F;&#x2F;repro.dev</a>. I would love to hear your feedback.<p>PS. Repro is free to use and no sign-up is required, but if you would like to be more involved in shaping the future of the product and its roadmap, please consider joining our early adopter program: <a href=\"https:&#x2F;&#x2F;forms.gle&#x2F;CTGhWiyekU4sdCyB9\" rel=\"nofollow\">https:&#x2F;&#x2F;forms.gle&#x2F;CTGhWiyekU4sdCyB9</a>. Or feel free to email me directly - gary [at] repro [dot] dev.<p>Thanks!",
      "time": 1651222475,
      "title": "Show HN: Repro – the time-travel web inspector",
      "type": "story",
      "url": "https://repro.dev"
    },
    {
      "by": "obert",
      "descendants": 0,
      "id": 31202926,
      "score": 1,
      "time": 1651222324,
      "title": "Box: First Free-Forever Cloud Storage Alternative",
      "type": "story",
      "url": "https://www.indiegogo.com/projects/box-first-free-forever-cloud-storage-alternative"
    }
  ]
}