{
  "stories": [
    {
      "by": "clouddrover",
      "descendants": 0,
      "id": 31392736,
      "score": 1,
      "time": 1652662620,
      "title": "University of Cambridge researchers use algae to power computer",
      "type": "story",
      "url": "https://www.bbc.com/news/uk-england-cambridgeshire-61443073"
    },
    {
      "by": "nthypes",
      "descendants": 1,
      "id": 31392700,
      "kids": [
        31392706
      ],
      "score": 2,
      "time": 1652662295,
      "title": "Send and receive money through GitHub comments",
      "type": "story",
      "url": "https://github.com/givebk-bot"
    },
    {
      "by": "jfzoid",
      "descendants": 0,
      "id": 31392694,
      "score": 2,
      "time": 1652662270,
      "title": "Geometry and Topology Videos by Dr Tadashi Tokieda",
      "type": "story",
      "url": "https://www.youtube.com/playlist?list=PLTBqohhFNBE_09L0i-lf3fYXF5woAbrzJ"
    },
    {
      "by": "brendanfalk",
      "descendants": 2,
      "id": 31392653,
      "kids": [
        31392739,
        31392709
      ],
      "score": 1,
      "text": "It seem like nix has become quite popular on HN over the last few years... [1] Engineering teams at notable tech companies (shopify, replit) are also beginning to adopt it.<p>But why has it suddenly become so popular? NixOS was first released in 2003. Has Nixpkgs finally hit a critical mass that you can build full projects with it? Did documentation just become much better? Did people just exploring more during covid?<p>[1] https:&#x2F;&#x2F;hn.algolia.com&#x2F;?dateRange=all&amp;page=0&amp;prefix=true&amp;query=nix&amp;sort=byPopularity&amp;type=story",
      "time": 1652661878,
      "title": "Ask HN: Why has Nix suddenly become so popular?",
      "type": "story"
    },
    {
      "by": "jvilalta",
      "descendants": 0,
      "id": 31392645,
      "score": 1,
      "time": 1652661827,
      "title": "A new career in software development: advice for non-youngsters",
      "type": "story",
      "url": "https://shape-of-code.com/2022/05/15/a-new-career-in-software-development-advice-for-non-youngsters/"
    },
    {
      "by": "kamrani",
      "descendants": 0,
      "id": 31392610,
      "score": 1,
      "text": "I&#x27;m looking for a tool to help us with release management. A must have for us is serverless and k8s support.<p>Ideally it should integrate with Jira and our CI&#x2F;CD.<p>Any tools you&#x27;d recommend?",
      "time": 1652661495,
      "title": "Ask HN: Recommendations for Release Management Tool?",
      "type": "story"
    },
    {
      "by": "hahahacorn",
      "descendants": 0,
      "id": 31392598,
      "score": 1,
      "time": 1652661296,
      "title": "An Egyptian Ratscrew Simulator",
      "type": "story",
      "url": "https://github.com/benngarcia/egyptian-ratscrew-ruby"
    },
    {
      "by": "galaxyrancher",
      "descendants": 0,
      "id": 31392550,
      "score": 1,
      "time": 1652660696,
      "title": "K Nearest Neighbors: A Fun Guide to KNN with Rust",
      "type": "story",
      "url": "https://www.sotr.blog/articles/knn"
    },
    {
      "by": "muzani",
      "descendants": 0,
      "id": 31392528,
      "score": 1,
      "text": "For context, the codebase I&#x27;m working on is a big ball of mud. Normally, I can map code in my head. But a lot of it is unintuitive, and there are pockets of repeated and hacky code. Boundaries are strictly written in some places, and non-existent in others. There&#x27;s tons of global objects just stored in memory somewhere. A lot of stuff is labeled &quot;item_&quot; and in some generic folder.<p>So I&#x27;d like to draw the architecture to clearly visualize what the architecture currently is, and what it should be. I&#x27;d also like to &quot;zoom&quot; a level, e.g. identify the purpose of a layer, then the implementation of it, and implementations and relations around certain subclasses.<p>I think something like draw.io does the trick, but I figure there are better tools out there. A mind mapping tool could also work, but I haven&#x27;t found any that I&#x27;m more comfortable with over pen and paper.",
      "time": 1652660478,
      "title": "Ask HN: Software Architecture Tools?",
      "type": "story"
    },
    {
      "by": "atultw",
      "descendants": 0,
      "id": 31392524,
      "score": 1,
      "time": 1652660408,
      "title": "The Invisible Design Behind the Apple Watch's Many Faces",
      "type": "story",
      "url": "https://www.wired.com/2015/04/apple-watch-design/"
    }
  ]
}