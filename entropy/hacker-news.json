{
  "stories": [
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 31159038,
      "score": 1,
      "time": 1650912457,
      "title": "Goodbye cars, hello colour: the great reinvention of city intersections (2018)",
      "type": "story",
      "url": "https://www.theguardian.com/cities/gallery/2018/sep/20/goodbye-cars-hello-colour-the-great-reinvention-of-city-intersections"
    },
    {
      "by": "ctoth",
      "descendants": 0,
      "id": 31159036,
      "score": 1,
      "time": 1650912449,
      "title": "Writing a Linux Kernel Remote in 2022",
      "type": "story",
      "url": "https://blog.immunityinc.com/p/writing-a-linux-kernel-remote-in-2022/"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 31159035,
      "score": 1,
      "time": 1650912445,
      "title": "Going Anti-Postal (2012)",
      "type": "story",
      "url": "https://thehumanist.com/magazine/march-april-2012/up-front/going-anti-postal/"
    },
    {
      "by": "oblio",
      "descendants": 0,
      "id": 31159033,
      "score": 1,
      "text": "I&#x27;ve heard a lot of good things about django-rest-framework.<p>However:<p>1. I&#x27;ve used SQLAlchemy in the past and I liked it, and I&#x27;m not sure how well it works with Django or if the Django ORM is as powerful. Though at the end of the day I just want a simple mapper and SQL query builder, not necessarily the super high level DSL.<p>2. How useful is the rest of Django when only the REST API parts are needed? Is it easy to disable the unneeded parts? Is it easy to completely remove them from the distribution (primarily for security concerns)<p>What would you recommend for an average Python dev team?<p>Some of the requirements:<p>1. authentication&#x2F;authorization with support for IdPs.<p>2. paging.<p>3. built-in security features preventing various injections and web attacks.<p>I know about Flask but it seems like a more barebones solution that has a longer ramp-up time, in order to find the right libraries that go together and make them work well.",
      "time": 1650912439,
      "title": "Ask HN: What would you use for a Python REST API in 2022?",
      "type": "story"
    },
    {
      "by": "gmays",
      "descendants": 0,
      "id": 31159016,
      "score": 1,
      "time": 1650912374,
      "title": "New Miniature Heart Could Help Speed Heart Disease Cures",
      "type": "story",
      "url": "https://www.bu.edu/articles/2022/new-miniature-heart-could-help-test-heart-disease-cures/"
    },
    {
      "by": "craigkerstiens",
      "descendants": 0,
      "id": 31159010,
      "score": 1,
      "time": 1650912347,
      "title": "Sorbet and 100% cov makes Ruby refactoring possible",
      "type": "story",
      "url": "https://brandur.org/fragments/large-scale-ruby-refactoring"
    },
    {
      "by": "deofoo",
      "descendants": 1,
      "id": 31159003,
      "kids": [
        31159004
      ],
      "score": 1,
      "time": 1650912307,
      "title": "Engineering Levels: A Case Study from Three Perspectives",
      "type": "story",
      "url": "https://engstuff.substack.com/p/engineering-levels-a-case-study-from"
    },
    {
      "by": "Turukawa",
      "descendants": 0,
      "id": 31158978,
      "score": 1,
      "time": 1650912173,
      "title": "EU unveils plan for ‘largest ever ban’ on dangerous chemicals",
      "type": "story",
      "url": "https://www.theguardian.com/environment/2022/apr/25/eu-unveils-plan-largest-ever-ban-on-dangerous-chemicals"
    },
    {
      "by": "b3tameche",
      "descendants": 0,
      "id": 31158970,
      "score": 1,
      "text": "I&#x27;d like to learn backend engineering and don&#x27;t know from where to start, been messing around with NodeJS a few times(and felt comfortable with it) but nothing special. I also consider learning Go and have some xp in Python (but not with Django or Flask). Need help to choose one.",
      "time": 1650912133,
      "title": "Ask HN: Which language should I learn for Back end?",
      "type": "story"
    },
    {
      "by": "doersino",
      "descendants": 0,
      "id": 31158958,
      "score": 1,
      "time": 1650912078,
      "title": "Infinite Bash History (& More)",
      "type": "story",
      "url": "https://excessivelyadequate.com/posts/history.html"
    }
  ]
}