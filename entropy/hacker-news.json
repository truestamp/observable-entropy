{
  "stories": [
    {
      "by": "lukeplato",
      "descendants": 0,
      "id": 31535343,
      "score": 1,
      "time": 1653688160,
      "title": "Unpublished proof four color theorem",
      "type": "story",
      "url": "https://twitter.com/neil_calkin/status/1530288990431195136"
    },
    {
      "by": "nickcw",
      "descendants": 0,
      "id": 31535313,
      "score": 1,
      "time": 1653687984,
      "title": "Hacking Ham Radio: WinAPRS",
      "type": "story",
      "url": "https://www.coalfire.com/the-coalfire-blog/hacking-ham-radio-winaprs-part1"
    },
    {
      "by": "ddtaylor",
      "descendants": 0,
      "id": 31535297,
      "score": 1,
      "time": 1653687911,
      "title": "IndyCar is moving to 100% renewable ethanol in 2023",
      "type": "story",
      "url": "https://arstechnica.com/cars/2022/05/indycar-is-moving-to-100-renewable-ethanol-in-2023/"
    },
    {
      "by": "sraffa",
      "descendants": 0,
      "id": 31535286,
      "score": 1,
      "time": 1653687855,
      "title": "On Hiring: Seven Principles (Version 1.0)",
      "type": "story",
      "url": "https://medium.com/@rafr/on-hiring-seven-principles-version-1-0-4d31b739322f"
    },
    {
      "by": "micvbang",
      "descendants": 0,
      "id": 31535280,
      "score": 1,
      "text": "I&#x27;ve been a pretty happy user of mockery [1] for a while, but recently found it getting a lot in my way.\nSince mockery uses a lot of interface{} magic, adding arguments or return values to interfaces and regenerating the mocks does not get the compiler to complain about existing, now invalid, usages of the mocks. This means that I have to track them down manually. Or, if I&#x27;m brave enough, try my hand at a few crazy regexes that never get the job 100% done.<p>go-mocky does not use interface{}s, and thus can&#x27;t hide changes to function signatures from the compiler; whenever a mock has been updated and the function signature has changed, the compiler will complain for all existing tests. This means that I can now catch errors at compile&#x2F;lint time instead of runtime.<p>Another added benefit is that the go-mocky mocks are dead simple and very easy to write and maintain by hand, should the need ever arise.<p>[1]: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;vektra&#x2F;mockery\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;vektra&#x2F;mockery</a>",
      "time": 1653687847,
      "title": "Show HN: Simple Go mocks without interface{}s",
      "type": "story",
      "url": "https://github.com/micvbang/go-mocky"
    },
    {
      "by": "amusecassette",
      "descendants": 0,
      "id": 31535266,
      "score": 2,
      "time": 1653687760,
      "title": "So, Why Kubernetes?",
      "type": "story",
      "url": "https://theophileds.com/posts/why-kubernetes/"
    },
    {
      "by": "andris9",
      "descendants": 0,
      "id": 31535265,
      "score": 2,
      "time": 1653687756,
      "title": "Mining email contents for fun and profit",
      "type": "story",
      "url": "https://docs.emailengine.app/mining-email-data-for-fun-and-profit/"
    },
    {
      "by": "hardwaresofton",
      "descendants": 0,
      "id": 31535255,
      "score": 1,
      "time": 1653687673,
      "title": "Suricata â€“ F/OSS alternative to Snort",
      "type": "story",
      "url": "https://suricata.io/"
    },
    {
      "by": "Gambitos",
      "descendants": 1,
      "id": 31535246,
      "kids": [
        31535247
      ],
      "score": 1,
      "time": 1653687598,
      "title": "Chess Lessons for $1",
      "type": "story",
      "url": "https://gambitos.com/"
    },
    {
      "by": "gbourne1",
      "descendants": 0,
      "id": 31535243,
      "score": 2,
      "time": 1653687533,
      "title": "Substack Drops Fund-Raising Efforts as Market Sours",
      "type": "story",
      "url": "https://www.nytimes.com/2022/05/26/business/media/substack-venture-capital.html"
    }
  ]
}