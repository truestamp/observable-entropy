{
  "stories": [
    {
      "by": "Hooke",
      "descendants": 0,
      "id": 28831319,
      "score": 1,
      "time": 1633976932,
      "title": "Evidence of people on the Azores archipelago 700 years earlier than thought",
      "type": "story",
      "url": "https://phys.org/news/2021-10-evidence-people-azores-archipelago-years.html"
    },
    {
      "by": "bperson",
      "descendants": 1,
      "id": 28831305,
      "kids": [
        28831306
      ],
      "score": 1,
      "time": 1633976842,
      "title": "No Results for “ScotusPick”",
      "type": "story",
      "url": "https://twitter.com/search"
    },
    {
      "by": "fbueno",
      "descendants": 0,
      "id": 28831295,
      "score": 2,
      "text": "I&#x27;ve been looking for a set of tools that would detect wrong&#x2F;missing configuration on k8s API, running workloads and unapplied manifests.<p>So far I&#x27;ve found a set of tools like for example:<p>Snyk iac, datree, Kube-bench, Kube-score, Kubeaudit, Kube-scan, Kubescape, Krane<p>Each of them has it&#x27;s own speciality but often they overlap some features.<p>The idea is to have 3 steps of checking config:<p>1. github workflow that builds the kustomize manifest and use a scanner that will fail in case of bad practice was detected<p>2. Once a day run checks against the workloads applied on the cluster<p>3. Once a day run checks against the API configuration<p>The problem is that there are some many tools out there that I have no idea which one I should use for each step.<p>Better approaches are also welcome.",
      "time": 1633976776,
      "title": "Ask HN: Which K8s manifests/workload/API scanner do you use?",
      "type": "story"
    },
    {
      "by": "marcodiego",
      "descendants": 0,
      "id": 28831294,
      "score": 1,
      "time": 1633976774,
      "title": "Second Beta for Krita 5.0",
      "type": "story",
      "url": "https://krita.org/en/item/second-beta-for-krita-5-0/"
    },
    {
      "by": "dsr12",
      "descendants": 0,
      "id": 28831287,
      "score": 1,
      "time": 1633976738,
      "title": "Automatically give thanks to PyPI packages you use in your project",
      "type": "story",
      "url": "https://github.com/WardPearce/thanker"
    },
    {
      "by": "cobaltintel",
      "descendants": 0,
      "id": 28831278,
      "score": 1,
      "time": 1633976688,
      "title": "Show HN: An Amazon product finder for businesses looking to sell on Amazon",
      "type": "story",
      "url": "https://github.com/aarmora/jordan-scrapes-amazon-for-products-to-sell"
    },
    {
      "by": "pseudolus",
      "descendants": 2,
      "id": 28831231,
      "kids": [
        28831283,
        28831266
      ],
      "score": 3,
      "time": 1633976405,
      "title": "US schools gave kids laptops during the pandemic. Then they spied on them",
      "type": "story",
      "url": "https://www.theguardian.com/commentisfree/2021/oct/11/us-students-digital-surveillance-schools"
    },
    {
      "by": "peterkos",
      "descendants": 0,
      "id": 28831226,
      "score": 1,
      "time": 1633976382,
      "title": "Google Apps for iOS to Switch to UIKit",
      "type": "story",
      "url": "https://www.macrumors.com/2021/10/11/google-apps-for-ios-to-switch-to-uikit/"
    },
    {
      "by": "7402",
      "descendants": 0,
      "id": 28831221,
      "score": 1,
      "time": 1633976348,
      "title": "DIY SciFi Object: The Patterning Frame from Ursula Le Guin's City of Illusions",
      "type": "story",
      "url": "https://7402.org/blog/2021/patterning-frame.html"
    },
    {
      "by": "Cwizard",
      "descendants": 0,
      "id": 28831214,
      "score": 2,
      "time": 1633976270,
      "title": "The Complete Guide to Deep Work",
      "type": "story",
      "url": "https://blog.doist.com/deep-work/"
    }
  ]
}