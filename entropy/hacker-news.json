{
  "stories": [
    {
      "by": "lioeters",
      "descendants": 0,
      "id": 29996159,
      "score": 1,
      "time": 1642610993,
      "title": "Interview: Gerhard Behles and Robert Henke on Ableton",
      "type": "story",
      "url": "https://www.roberthenke.com/interviews/ableton.html"
    },
    {
      "by": "giuliomagnifico",
      "descendants": 0,
      "id": 29996137,
      "score": 1,
      "time": 1642610923,
      "title": "3D reconstruction of a day in Pompeii during the Vesuvio eruption",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=dY_3ggKg0Bc"
    },
    {
      "by": "pthaine",
      "descendants": 1,
      "id": 29996109,
      "kids": [
        29996111
      ],
      "score": 5,
      "time": 1642610831,
      "title": "Data Protection Regulations NLP Teams Should Watch for in 2022",
      "type": "story",
      "url": "https://www.private-ai.com/2022/01/17/data-protection-regulations-to-watch-for-in-2022/"
    },
    {
      "by": "mynameismon",
      "descendants": 0,
      "id": 29996072,
      "score": 1,
      "time": 1642610715,
      "title": "Incorrect Quotes Generator",
      "type": "story",
      "url": "https://incorrect-quotes-generator.neocities.org"
    },
    {
      "by": "SQL2219",
      "descendants": 0,
      "id": 29996062,
      "score": 1,
      "time": 1642610678,
      "title": "Police in this tiny Alabama town suck drivers into legal ‘black hole’",
      "type": "story",
      "url": "https://www.al.com/news/2022/01/police-in-this-tiny-alabama-town-suck-drivers-into-legal-black-hole.html"
    },
    {
      "by": "tslmy",
      "descendants": 0,
      "id": 29996037,
      "score": 3,
      "time": 1642610574,
      "title": "A tour to my Zettelkasten note clusters",
      "type": "story",
      "url": "https://lmy.medium.com/a-tour-to-my-zettelkasten-notes-dc26a75e5257"
    },
    {
      "by": "scaglio",
      "descendants": 1,
      "id": 29996029,
      "kids": [
        29996101
      ],
      "score": 1,
      "time": 1642610545,
      "title": "Godsip Club – Collection of curiosities about myths and religions",
      "type": "story",
      "url": "https://godsip.club/"
    },
    {
      "by": "detaro",
      "descendants": 0,
      "id": 29996027,
      "score": 1,
      "time": 1642610542,
      "title": "Orca Security, AWS, and the Killer Whale of a Problem",
      "type": "story",
      "url": "https://www.lastweekinaws.com/blog/orca-security-aws-and-the-killer-whale-of-a-problem/"
    },
    {
      "by": "mollerhoj",
      "descendants": 0,
      "id": 29996023,
      "score": 2,
      "text": "I find that my ruby code more and more resembles functional programming:<p>Instance variables are always set in the constructor, and almost never mutated.<p>The thing I like about OOP is really just that the methods of an object don&#x27;t have to take a bunch of parameters, but that it instead can rely on the instance variables. I guess in functional programming, this would be something like having a (constructor) function that returns a hash of methods that have been given what in OOP would be instance variables as their first parameters, and then only need non-instance variables through currying. My question is, is there a functional programming language that not only supports, but `encourages` this OOP style programming?",
      "time": 1642610536,
      "title": "Ask HN: OOP in Functional Programming Language",
      "type": "story"
    },
    {
      "by": "lioeters",
      "descendants": 0,
      "id": 29995996,
      "score": 1,
      "time": 1642610430,
      "title": "Firebird 6502 Computer",
      "type": "story",
      "url": "https://www.roberthenke.com/technology/firebird.html"
    }
  ]
}