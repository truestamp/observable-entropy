{
  "stories": [
    {
      "by": "stremovsky",
      "descendants": 0,
      "id": 28928260,
      "score": 1,
      "time": 1634719158,
      "title": "Curated list of European SaaS vendors",
      "type": "story",
      "url": "https://privacybunker.io/blog/european-cloud-saas-vendors/"
    },
    {
      "by": "app4soft",
      "descendants": 0,
      "id": 28928256,
      "score": 1,
      "time": 1634719124,
      "title": "Quarantine – a racing/first-person shooter video game (1994)",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Quarantine_(video_game)"
    },
    {
      "by": "shekhirin",
      "descendants": 0,
      "id": 28928250,
      "score": 1,
      "time": 1634719080,
      "title": "This Week in YC 5",
      "type": "story",
      "url": "https://thisweekinyc.substack.com/p/this-week-in-yc-5"
    },
    {
      "by": "eternalban",
      "descendants": 0,
      "id": 28928239,
      "score": 1,
      "time": 1634719010,
      "title": "DiSNI: Direct Storage and Networking Interface [for JVM]",
      "type": "story",
      "url": "https://github.com/zrlio/disni"
    },
    {
      "by": "azeirah",
      "descendants": 0,
      "id": 28928206,
      "score": 1,
      "time": 1634718736,
      "title": "“Impacting Global Policy by Understanding Litter Data” by Sean Doherty",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=azRe9UV8VJA"
    },
    {
      "by": "de_keyboard",
      "descendants": 0,
      "id": 28928173,
      "score": 1,
      "time": 1634718466,
      "title": "Nderstanding Clojure's Persistent Vectors (2013)",
      "type": "story",
      "url": "https://hypirion.com/musings/understanding-persistent-vector-pt-1"
    },
    {
      "by": "CapitalistCartr",
      "descendants": 0,
      "id": 28928164,
      "score": 2,
      "time": 1634718384,
      "title": "Viruses are both the villains and heroes of life as we know it",
      "type": "story",
      "url": "https://theconversation.com/viruses-are-both-the-villains-and-heroes-of-life-as-we-know-it-169131"
    },
    {
      "by": "samrohn777",
      "descendants": 0,
      "id": 28928156,
      "score": 1,
      "text": "I want to design a back in stock notification email service, where the users can sign up on the out-of-stock page and get notified when the item is back in stock.\nIf I have the list of users subscribed to back in stock alert and another table that has latest stock availability, what would be the best appraoch to build an efficient system that looks at these data and trigger back in stock email ?\n- Do I poll the stock table for change in stock and then compare with user table and trigger email ? \n- Is there any other better ways of doing it ? Is there any design patterns&#x2F; specific tools&#x2F; constructs to solve such problems ? I am gravitating towards as event driven model - but not sure what to look out for this problem statement.\nI am not looking for a complete solution, but opinions&#x2F; pointers to any resource would be greatly appreciated.",
      "time": 1634718311,
      "title": "Ask HN: How to design a back in stock notification system?",
      "type": "story"
    },
    {
      "by": "graderjs",
      "descendants": 0,
      "id": 28928150,
      "score": 1,
      "time": 1634718261,
      "title": "Far Eastern Group",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Far_Eastern_Group"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 28928149,
      "score": 1,
      "time": 1634718233,
      "title": "The Miseducation of America’s Elites",
      "type": "story",
      "url": "https://www.city-journal.org/the-miseducation-of-americas-elites#.YEqQ6751kvs.twitter"
    }
  ]
}