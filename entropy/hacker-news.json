{
  "stories": [
    {
      "by": "rowanajmarshall",
      "descendants": 0,
      "id": 31383669,
      "score": 1,
      "time": 1652570385,
      "title": "Ukraine Wins Eurovision",
      "type": "story",
      "url": "https://news.sky.com/story/ukraine-wins-eurovision-song-contest-after-performance-by-kalush-orchestra-12613436"
    },
    {
      "by": "kvee",
      "descendants": 0,
      "id": 31383665,
      "score": 1,
      "time": 1652570326,
      "title": "Cognitive psychology findings that all passed a stringent replicability test",
      "type": "story",
      "url": "https://digest.bps.org.uk/2017/06/05/these-nine-cognitive-psychology-findings-all-passed-a-stringent-test-of-their-replicability/"
    },
    {
      "by": "joshspankit",
      "descendants": 0,
      "id": 31383654,
      "score": 1,
      "text": "This challenge has been in the back of my mind for a while and I can&#x27;t crack it.<p>There are many scenarios to explore this, but let&#x27;s say we&#x27;re a presidential department tasked with recording a meeting in a way that can be later verified. (We could also look at evidence gathering where the person gathering has the legal right and technological ability to do anything. They&#x27;re fundamentally the same problem)<p>We can&#x27;t rely on internet access (that would be too easy because we could just send a request to a server).<p>We can&#x27;t rely on standard file metadata because it can be forged.<p>[&quot;Mains hum&quot;](https:&#x2F;&#x2F;en.wikipedia.org&#x2F;wiki&#x2F;Mains_hum) has been helpful for some things, but since the data is public someone could fake it by adding the expected hum later.<p>The only thing I can think of is to have a reasonably up-to-date blockchain on-device, then add a file&#x27;s hash as a transaction. I still don&#x27;t think it could store timestamp in a verifiable way but it would at least tell you the sequence that files were added (which is hopefully the sequence they were taken)<p>Has anyone actually solved this problem?",
      "time": 1652570240,
      "title": "Ask HN: Can we program a validation that foo happened at a specific past moment?",
      "type": "story"
    },
    {
      "by": "istoica",
      "descendants": 0,
      "id": 31383644,
      "score": 1,
      "text": "[1]: https:&#x2F;&#x2F;iongion.github.io&#x2F;podman-desktop-companion&#x2F;<p>One step closer to first stable release, it was quite an adventure since the beginning of the year when it all started.<p>Latest updates since previous release are quite big in functionality and bugs getting fixed:<p>- Added Network support<p>- Added Container Image security scanner reporting using trivy<p>- Added docker engine and docker api support<p>- Added configurable paths to container engines<p>- Added full support for LIMA on MacOS and WSL on Windows with relaying<p>- Added ability to generate `kube` yaml<p>- Added Pods support<p>- Faster application due to messaging infrastructure change<p>Plus many other bugs getting fixed, which I am grateful for being reported by patient, passionate and dedicated users world wide.<p>If all goes well, next big plans include<p>- plugin architecture<p>- more engines supported<p>- documentation and videos<p>- container building tool<p>- project support<p>- more scanning and intelligence tools",
      "time": 1652570144,
      "title": "Podman Desktop Companion",
      "type": "story"
    },
    {
      "by": "dedalus",
      "descendants": 0,
      "id": 31383637,
      "score": 1,
      "text": "Cache-Control:private only states that shared caches (such as proxy caches) should not cache the response but any private cache can. Now my question is do folks know of any such private caches in use (commerical or open source) as I can sense a lot of webapps today can be made faster with an &quot;unshared&quot; or per user cache e.g cache with user specific keys and cookies such that its purely a per user cache. It sounds like something on the user&#x27;s machine , correct?",
      "time": 1652570086,
      "title": "Ask HN: Unshared or Private Caches for my app/company to use?",
      "type": "story"
    },
    {
      "by": "dynamic_sausage",
      "descendants": 0,
      "id": 31383626,
      "score": 3,
      "time": 1652569996,
      "title": "Evaluation of Russia by Finnish Intelligence Colonel",
      "type": "story",
      "url": "https://www.youtube.com/watch?v=kF9KretXqJw"
    },
    {
      "by": "pizza",
      "descendants": 0,
      "id": 31383554,
      "score": 1,
      "time": 1652569372,
      "title": "Adaptive Gradient Descent Without Descent",
      "type": "story",
      "url": "https://proceedings.mlr.press/v119/malitsky20a.html"
    },
    {
      "by": "f38zf5vdt",
      "descendants": 1,
      "id": 31383518,
      "kids": [
        31383595
      ],
      "score": 6,
      "time": 1652569097,
      "title": "Netflix tells employees they can quit if they disagree with new content",
      "type": "story",
      "url": "https://www.businessinsider.com/netflix-company-culture-guidelines-employees-can-quit-if-they-disagree-2022-5"
    },
    {
      "by": "smithtim",
      "descendants": 0,
      "id": 31383504,
      "score": 7,
      "time": 1652568842,
      "title": "Formalizing a Proof of God by Leibniz",
      "type": "story",
      "url": "https://timlabs.org/leibniz/"
    },
    {
      "by": "Animats",
      "descendants": 0,
      "id": 31383473,
      "score": 1,
      "time": 1652568576,
      "title": "Ukraine face recognition Russian soldiers",
      "type": "story",
      "url": "https://www.cnn.com/videos/world/2022/05/13/ukraine-face-recognition-russian-soldiers-lead-sidner-pkg-vpx.cnn"
    }
  ]
}