{
  "stories": [
    {
      "by": "johnwoods",
      "descendants": 0,
      "id": 31796311,
      "score": 1,
      "text": "It seems that several projects claim that they have built the &quot;world&#x27;s fastest key&#x2F;value store&quot; or sometimes the phrase used is even more outrageous.\nThe following projects are in question:\n - Redis: https:&#x2F;&#x2F;github.com&#x2F;redis&#x2F;redis\n - KeyDB: https:&#x2F;&#x2F;github.com&#x2F;snapchat&#x2F;keydb\n - Dragonfly: https:&#x2F;&#x2F;github.com&#x2F;dragonflydb&#x2F;dragonfly\n - Skytable: https:&#x2F;&#x2F;github.com&#x2F;skytable&#x2F;skytable<p>1. Redis\nI&#x27;ll start with Redis which I&#x27;d like to call the &quot;original&quot; key&#x2F;value store because it is the oldest and most widely used of all. Being a long-time follower of Redis, I do know it&#x27;s single-threaded (and uses io-threads since 6.0) and hence it achieves lesser throughput than the other stores listed above which are multi-threaded, at least to some extent. The best parts about Redis: it&#x27;s the most feature complete of all the systems here, and is the oldest. (not saying old necessarily means better).<p>2. KeyDB\nThe second is KeyDB. IIRC, I saw it in a blog post which said that it is a &quot;multithreaded fork of Redis that is 5X faster&quot;[1]. I really liked the idea because I was previously running several instances of Redis on the same node and proxying them like a &quot;single-node cluster.&quot; Why? To increase CPU utilization. A single KeyDB instance could replace the unwanted proxying funkiness, so I ditched Redis for KeyDB. Has been a fine experience so far, except for some occasional crashes.<p>3. Dragonfly\nJust found it on HN and seems to be relatively new. Dragonfly claims that it is 25X faster than Redis[2] and has the slogan &quot;Probably, the fastest in-memory store in the universe!&quot;. Doesn&#x27;t support all the Redis commands yet, but I find it interesting mainly because of performance. Also, it&#x27;s good to know why it is faster because it clearly outlines the underlying architecture[2]. The other three stores don&#x27;t say much about it. Also promises lower memory usage which I like.<p>4. Skytable\nFound it while looking for projects written in Rust. Claims to be &quot;insanely fast.&quot; Skytable&#x27;s &quot;experimental benchmarks&quot; claim that it is something around 10X faster than Redis and some 2X-3X faster than KeyDB[3]. I hadn&#x27;t heard of Skytable and it doesn&#x27;t seem to be as widely used (unless I&#x27;m missing something?). I find it interesting because of the planned features[4] and performance. Only Skytable natively runs on Windows out of the four.<p>5. My thoughts\nRedis needs no introduction and is arguably super stable for use on production systems (using widely in our systems). KeyDB seems to be &quot;stable enough&quot; and it seems to be good for prod since Snapchat uses it already[5] (and so do we!). I found no Dragonfly v&#x2F;s Skytable benchmarks.\nThe best part about Redis, KeyDB and Skytable is that they don&#x27;t make any &quot;crazy assumptions&quot; about the system they run on. What do I mean?<p>Dragonfly expects you to have the latest hardware[6] and the latest kernel[7] on all your servers. I find this outrageous because not all servers run 5.10 and a majority of them are still using long-running branches on 4.x. I&#x27;d argue if the other three stores started assuming the latest features, they&#x27;d be far faster than what they are today. Finally, both Dragonfly and Skytable are still early in their development so it may not be fair to compare their features against Redis and KeyDB who have been around for far longer. Also, all projects other than Skytable have companies behind them (unless I&#x27;m missing something).<p>What are your thoughts? Have you tried benchmarking any of them locally or in the cloud?<p>References:\n[1]: https:&#x2F;&#x2F;docs.keydb.dev&#x2F;blog&#x2F;2019&#x2F;10&#x2F;07&#x2F;blog-post\n[2]: https:&#x2F;&#x2F;github.com&#x2F;dragonflydb&#x2F;dragonfly\n[3]: https:&#x2F;&#x2F;github.com&#x2F;ohsayan&#x2F;sky-benches\n[4]: https:&#x2F;&#x2F;github.com&#x2F;skytable&#x2F;skytable&#x2F;issues&#x2F;203\n[5]: https:&#x2F;&#x2F;docs.keydb.dev&#x2F;news&#x2F;2022&#x2F;05&#x2F;12&#x2F;keydb-joins-snap\n[6]: https:&#x2F;&#x2F;github.com&#x2F;dragonflydb&#x2F;dragonfly&#x2F;issues&#x2F;124\n[7]: https:&#x2F;&#x2F;github.com&#x2F;dragonflydb&#x2F;dragonfly&#x2F;issues&#x2F;96",
      "time": 1655615107,
      "title": "So, you call yourself the fastest key/value store? It's 5X, 10x and 25X faster",
      "type": "story"
    },
    {
      "by": "nsoonhui",
      "descendants": 0,
      "id": 31796295,
      "score": 1,
      "time": 1655614785,
      "title": "Wheel Made of ‘Odd Matter’ Spontaneously Rolls Uphill",
      "type": "story",
      "url": "https://www.quantamagazine.org/wheel-made-of-odd-matter-spontaneously-rolls-uphill-20220615/"
    },
    {
      "by": "pabs3",
      "descendants": 0,
      "id": 31796285,
      "score": 1,
      "time": 1655614613,
      "title": "Fixing spelling in GitHub repos using codespell",
      "type": "story",
      "url": "https://edwardbetts.com/blog/fixing-spelling-in-github-repos-using-codespell/"
    },
    {
      "by": "609venezia",
      "descendants": 1,
      "id": 31796271,
      "kids": [
        31796304
      ],
      "score": 1,
      "text": "In a recent interview about his belief in blockchain technology, Kevin O&#x27;Leary (Shark Tank) said:<p>&quot;Look at an MIT graduating class of engineers,&quot; O&#x27;Leary said. &quot;The smartest people want to work on the [block]chain. So you&#x27;ve got the majority of the best intellectual capital in the world solving poor outcomes on the chain — why wouldn&#x27;t you expect that to work?&quot;<p>Is his heuristic good? Are there examples of many highly intelligent people being drawn to work on technologies or ideas that ultimately prove useless?",
      "time": 1655614370,
      "title": "Ask HN: How strong a signal of idea value is “smart people want to work on it”?",
      "type": "story"
    },
    {
      "by": "ngaut",
      "descendants": 0,
      "id": 31796265,
      "score": 1,
      "time": 1655614292,
      "title": "HTAP Databases: What Is New and What Is Next",
      "type": "story",
      "url": "https://dl.acm.org/doi/pdf/10.1145/3514221.3522565"
    },
    {
      "by": "pabs3",
      "descendants": 0,
      "id": 31796261,
      "score": 1,
      "time": 1655614196,
      "title": "Pipes, deadlocks, and strace annoyingly fixing them",
      "type": "story",
      "url": "https://changelog.complete.org/archives/10388-pipes-deadlocks-and-strace-annoyingly-fixing-them"
    },
    {
      "by": "hboon",
      "descendants": 0,
      "id": 31796249,
      "score": 1,
      "time": 1655614087,
      "title": "My unorthodox, branchless Git workflow",
      "type": "story",
      "url": "https://drewdevault.com/2020/04/06/My-weird-branchless-git-workflow.html"
    },
    {
      "by": "yarg",
      "descendants": 0,
      "id": 31796241,
      "score": 1,
      "text": "A recent post (https:&#x2F;&#x2F;news.ycombinator.com&#x2F;item?id=31750981) shows an implementation of 2-Dimensional Voronoi diagrams, by rendering a number of cones, collapsing along the z-axis, and using the GPU&#x27;s z-culling as a de facto optimiser (it even bakes in free inter-cell anti-aliasing).<p>(This also allows weighted voronoi to be implemented simply by changing the gradient of the cones.)<p>I&#x27;m treating this as an analogue to 2-dimensional light-cones with a depth axis treated as the dimension of time. The z-axis collapse leaves everything within the domain of the first cone to intersect any given [x, y] 2-Dimensional location.<p>If we get depth culling in 4-dimensions, we can take a space [x, y, z, Ω] and treat our Ω dimension as the dimension of time (as we did for z in 2-dimensions).<p>And that would give us 3D voronois (with a lot of skipped stuff about volumetric rendering).<p>We can alter the gradients of the 4D cones, then we have weighted 3D voronois.<p>I think that this could be used for an interesting voxel experiment.",
      "time": 1655614013,
      "title": "Ask HN: Is 4-dimensional depth buffering feasible with modern APIs?",
      "type": "story"
    },
    {
      "by": "lakis",
      "descendants": 1,
      "id": 31796239,
      "kids": [
        31796299
      ],
      "score": 1,
      "time": 1655613982,
      "title": "Bitcoin mining becomes unprofitable as BTC price falls to average cost of mining",
      "type": "story",
      "url": "https://finbold.com/bitcoin-mining-becomes-unprofitable-as-btc-price-falls-to-the-average-cost-of-mining/"
    },
    {
      "by": "rdpintqogeogsaa",
      "descendants": 0,
      "id": 31796196,
      "score": 1,
      "time": 1655613287,
      "title": "List of unsafe ed25519 signature libs",
      "type": "story",
      "url": "https://github.com/MystenLabs/ed25519-unsafe-libs"
    }
  ]
}