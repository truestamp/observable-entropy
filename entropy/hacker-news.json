{
  "stories": [
    {
      "by": "steelstraw",
      "descendants": 0,
      "id": 29975503,
      "score": 1,
      "time": 1642484074,
      "title": "Sex Differences in Friendship Preferences",
      "type": "story",
      "url": "https://www.sciencedirect.com/science/article/abs/pii/S109051382100074X"
    },
    {
      "by": "jonbaer",
      "descendants": 0,
      "id": 29975488,
      "score": 1,
      "time": 1642483891,
      "title": "Markov Logic Networks in Python",
      "type": "story",
      "url": "http://www.pracmln.org/"
    },
    {
      "by": "Phithagoras",
      "descendants": 0,
      "id": 29975477,
      "score": 1,
      "time": 1642483671,
      "title": "What Sonic Black Holes Say About Real Ones",
      "type": "story",
      "url": "https://www.quantamagazine.org/what-sonic-black-holes-say-about-real-ones-20161108/"
    },
    {
      "by": "scottc",
      "descendants": 1,
      "id": 29975429,
      "kids": [
        29975438
      ],
      "score": 2,
      "time": 1642483132,
      "title": "Top VS Code Extensions you need for Web Development in 2022",
      "type": "story",
      "url": "https://creativedesignsguru.com/vscode-extensions-web-developers/"
    },
    {
      "by": "pseudolus",
      "descendants": 0,
      "id": 29975407,
      "score": 3,
      "time": 1642482915,
      "title": "Weird computer-generated phrases help researchers find scientific fraud",
      "type": "story",
      "url": "https://thebulletin.org/2022/01/bosom-peril-is-not-breast-cancer-how-weird-computer-generated-phrases-help-researchers-find-scientific-publishing-fraud/"
    },
    {
      "by": "axiomdata316",
      "descendants": 0,
      "id": 29975390,
      "score": 1,
      "time": 1642482818,
      "title": "Using the Ubiquiti EdgeRouter X and Ubiquiti AP-AC-LR Access Point",
      "type": "story",
      "url": "https://github.com/mjp66/Ubiquiti"
    },
    {
      "by": "pseudolus",
      "descendants": 1,
      "id": 29975373,
      "kids": [
        29975381
      ],
      "score": 2,
      "time": 1642482626,
      "title": "Pfizer and Moderna expect seasonal booster shots after omicron wave",
      "type": "story",
      "url": "https://arstechnica.com/science/2022/01/vaccine-makers-eye-annual-covid-booster-shots-for-foreseeable-future/"
    },
    {
      "by": "productivetom",
      "descendants": 0,
      "id": 29975370,
      "score": 1,
      "time": 1642482601,
      "title": "How to Climb the Management Consultant Career Ladder",
      "type": "story",
      "url": "https://www.squadroneer.com/management-consultant-career-ladder/"
    },
    {
      "by": "jonbaer",
      "descendants": 0,
      "id": 29975366,
      "score": 1,
      "time": 1642482559,
      "title": "Gastrobot",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Gastrobot"
    },
    {
      "by": "iamwil",
      "descendants": 1,
      "id": 29975334,
      "kids": [
        29975449
      ],
      "score": 3,
      "text": "In the realm of pure functional programming, like Haskell, side effects are managed. Where the effect is described by the IO monad, and sent off to the runtime to actually execute. This is intended to limit the complexities of side-effects and keep the program purely functional.<p>How does Common Lisp deal with the side effects? My understanding is that it&#x27;s not pure functional, so you can mix and match. How come Common Lisp doesn&#x27;t get bogged down in a quagmire of complexity like managing state in other programming languages end up being? Is there a design pattern that&#x27;s common. Is there some power in Lisp that enables programmers to contain it well? Or is it that Lisp programmers are usually experienced enough to contain it on their own no matter which language they program in?",
      "time": 1642482154,
      "title": "Ask HN: How does Common Lisp deal with side effects?",
      "type": "story"
    }
  ]
}