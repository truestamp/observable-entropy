{
  "stories": [
    {
      "by": "urlwolf",
      "descendants": 0,
      "id": 31444895,
      "score": 1,
      "time": 1653036865,
      "title": "A key-infra open-source project can get compromised",
      "type": "story",
      "url": "https://lof.flounder.online/gemlog/2022-05-20%20how%20an%20open%20source%20project%20can%20get%20compromised.gmi"
    },
    {
      "by": "Tepix",
      "descendants": 0,
      "id": 31444893,
      "score": 1,
      "text": "With a recession that&#x27;s either looming or already in underway, what are some financial indicators that you use for your financial planning?<p>What are you looking at and what do these indicators tell you?",
      "time": 1653036852,
      "title": "Ask HN: What financial indicators do you look at, and why?",
      "type": "story"
    },
    {
      "by": "brushyolaf",
      "descendants": 0,
      "id": 31444884,
      "score": 1,
      "text": "I built a web based prototype for an application using a Docker microservices architecture:\npostgreSQL, redis, traefik, etc. - the regular stuff - which works great.\nNow, the application&#x27;s usecase is actually better suited in a offline environment with a standalone executable, \nand I&#x27;m struggling to make this transition.<p><i>(How does the app work?\nThink of the application as a file indexing system: you specify a folder on your local hard drive and the program will analyze the files (might take up to 30 minutes) and store metadata for it in a search-optimized datastructure.)</i><p>From what I understand most applications also separate frontend and backend layers and let the processes communicate via message passing\nover some form of channel and protocol. The solutions I found include Unix Sockets with gRPC (https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;aspnet&#x2F;core&#x2F;grpc&#x2F;interprocess?view=aspnetcore-6.0), local HTTP Servers with a REST API or gRPC, even \nJSON over stdin&#x2F;stdout (https:&#x2F;&#x2F;github.com&#x2F;xi-editor&#x2F;xi-editor).\nSolutions for datastorage include custom file formats, sqlite databases or bundled mongodb instances into the main application.<p>I figured out the backend part with analysis running multithreaded and writing into a sqlite database.\nFor the IPC I spawn a gRPC Server which clients connect to over HTTP&#x2F;2.\nThat way I compile a platform agnostic backend and platform specific frontends.\nIt all works okish but I feel like it&#x27;s unnecessarily complicated and there could be a common strategy I am missing.<p>*TL;DR: What are modern architectures for desktop applications equivalent to a microservice architecture with backend&#x2F;frontend separation, message queueing, pub&#x2F;sub, authentication, ...?*",
      "time": 1653036695,
      "title": "Ask HN: What are modern architecture patterns for desktop applications?",
      "type": "story"
    },
    {
      "by": "cedarswitch",
      "descendants": 1,
      "id": 31444883,
      "kids": [
        31444899
      ],
      "score": 1,
      "time": 1653036687,
      "title": "GitHub Is Down",
      "type": "story"
    },
    {
      "by": "geox",
      "descendants": 0,
      "id": 31444857,
      "score": 2,
      "time": 1653036354,
      "title": "Microsoft Bing’s Chinese Political Censorship of Autosuggestions",
      "type": "story",
      "url": "https://citizenlab.ca/2022/05/bada-bing-bada-boom-microsoft-bings-chinese-political-censorship-autosuggestions-north-america/"
    },
    {
      "by": "polyrand",
      "descendants": 0,
      "id": 31444837,
      "score": 1,
      "time": 1653036136,
      "title": "Jakt: Memory-safe systems programming language",
      "type": "story",
      "url": "https://github.com/awesomekling/jakt"
    },
    {
      "by": "rntn",
      "descendants": 0,
      "id": 31444831,
      "score": 1,
      "time": 1653036070,
      "title": "New research sheds light on how to make the most of crowdsourcing campaigns",
      "type": "story",
      "url": "https://techxplore.com/news/2022-05-crowdsourcing-campaigns.html"
    },
    {
      "by": "rntn",
      "descendants": 0,
      "id": 31444829,
      "score": 2,
      "time": 1653036055,
      "title": "Prehistoric faeces reveal parasites from feasting at Stonehenge",
      "type": "story",
      "url": "https://phys.org/news/2022-05-prehistoric-faeces-reveal-parasites-feasting.html"
    },
    {
      "by": "ofou",
      "descendants": 0,
      "id": 31444805,
      "score": 1,
      "time": 1653035856,
      "title": "Backpropagation and the Brain [pdf]",
      "type": "story",
      "url": "http://www.cs.toronto.edu/~hinton/absps/backpropandbrain.pdf"
    },
    {
      "by": "martypitt",
      "descendants": 0,
      "id": 31444798,
      "score": 2,
      "text": "We build Vyne, a data gateway designed to eliminate integration code between in-house dev teams.<p>Vyne gives you a single API that automatically integrates and fetches data from APIs, Databases, Kafka Topics, Lambdas etc - with no integration code required.<p>It’s powered by Taxi[1], our open source data language for humans. Developers can embed semantic tags inside their existing schemas which Vyne then uses to automate the integration.<p>We’ve created a getting started tutorial[0] to help devs get a feel of what Vyne is capable of. The tutorial automatically integrates a REST API, a database and a Kafka topic, to deliver combined data feed.<p>We&#x27;ve been working on this for a while, and are really looking forward to hearing the thoughts of the HN community.<p>[0]: <a href=\"https:&#x2F;&#x2F;docs.vyne.co&#x2F;tutorials&#x2F;api-db-integration&#x2F;rest-db-integration&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;docs.vyne.co&#x2F;tutorials&#x2F;api-db-integration&#x2F;rest-db-in...</a>\n[1]: <a href=\"https:&#x2F;&#x2F;taxilang.org\" rel=\"nofollow\">https:&#x2F;&#x2F;taxilang.org</a>",
      "time": 1653035780,
      "title": "Show HN: Vyne – Automated integration for in-house platforms",
      "type": "story",
      "url": "https://vyne.co"
    }
  ]
}