{
  "stories": [
    {
      "by": "kooskoos",
      "descendants": 0,
      "id": 28058021,
      "score": 1,
      "time": 1628059950,
      "title": "The NIH Syndrome",
      "type": "story",
      "url": "https://omkarbirade.medium.com/the-nih-syndrome-8d2f0c7a1a78"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 28057992,
      "score": 1,
      "time": 1628059672,
      "title": "A year after Beirut explosion, parents seek justice for their daughter",
      "type": "story",
      "url": "https://www.dw.com/en/a-year-after-beirut-explosion-still-no-justice/a-58732367"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 28057985,
      "score": 1,
      "time": 1628059578,
      "title": "Launching the World’s Biggest Space Telescope",
      "type": "story",
      "url": "https://blogs.nasa.gov/drthomasz/2021/08/02/launching-the-worlds-biggest-space-telescope/"
    },
    {
      "by": "clubdorothe",
      "descendants": 0,
      "id": 28057980,
      "score": 1,
      "time": 1628059546,
      "title": "MLOps Capabilities, Outcomes and Opportunities for Enterprise AI",
      "type": "story",
      "url": "https://aiexplorations.in/2021/08/01/mlops-capabilities-outcomes-and-opportunities-for-enterprise-ai/"
    },
    {
      "by": "lazyfreelancer",
      "descendants": 0,
      "id": 28057969,
      "score": 1,
      "text": "I have a billion client calls and hate taking notes. Anyone got a good workaround or tool?",
      "time": 1628059427,
      "title": "Way to save Google meet chat/transcription?",
      "type": "story"
    },
    {
      "by": "Borlands",
      "descendants": 0,
      "id": 28057953,
      "score": 2,
      "time": 1628059289,
      "title": "Blush, illustrations for your product page",
      "type": "story",
      "url": "https://blush.design/"
    },
    {
      "by": "noduerme",
      "descendants": 1,
      "id": 28057950,
      "kids": [
        28058005
      ],
      "score": 1,
      "text": "This is probably the third time in 10 years I&#x27;ve noticed job listings clamoring for React, and went and submerged myself again in what exactly React and JSX look like, in case I&#x27;d ever want or need to take a job involving that framework. And again I just can&#x27;t believe this method of writing an interface is popular. It&#x27;s like turning your socks inside out and claiming you&#x27;re wearing magic shoes. On one hand, I&#x27;m permanently offended at the removal of the ever-elegant `${}` as a way to concatenate strings and JS. I was one of those coders who used to write PHP and never, ever, inlined it in a mainly HTML doc. I&#x27;d never touch inline javascript in HTML tags. It&#x27;s just unreadable. I&#x27;d much rather have a pure piece of HTML as a template, with all the properties and roles and id&#x27;s, and then a pure piece of code that modifies it or updates it. In some rare cases I&#x27;ll inline templates with &gt;&gt;&gt;EOT or `` syntax. The other thing is, Facebook started as a company doing PHP inline in HTML, and raced to find a way to compile PHP and then raced to find a way to turn Javascript inside out like a sock; <i>they are not good hierarchical thinkers</i>.<p>I think the promise of a virtual DOM is fun, but ultimately once you&#x27;ve dispensed with IDs and everything is an object, you still need keys; which means you need to bring back IDs in the model; which means you still have to go back to interacting with the DOM where you started, there&#x27;s just a further layer of abstraction, one which you can&#x27;t control the lifecycle of. And a hard-to-read abstraction! Now you can&#x27;t just check the properties of a tag to see what hooks into it; it&#x27;s instantiating something beyond your control, on its own.<p>Why does every new front-end developer job now ask for React as a core competency? Do people think it&#x27;s going to still be a dominant framework in a few years? I really hope coders are able to think outside this paradigm and create their own element &#x2F; component hierarchies without relying on this extremely hinky observational system to run the DOM for them. For instance (as an alternative) in big web apps I register components with my own MVC pattern, giving them unique Class.struct.IDs and assign them broad (global), narrow (within a parent component) or specific (just this component) listeners, to cause DOM redraws &#x2F; updates; and these refreshes can be triggered by setting off events anywhere else in the app when a specific piece of data changes, and only when it changes, regardless of whether one or many related components are on-screen at the time. So refreshes aren&#x27;t based on which DOM component happens to be on screen and whether its key matches some state, and consequently, you don&#x27;t have to hunt for every component that might need that state. Encapsulating states in component-level architecture is <i>stupid</i> if you&#x27;re dealing with apps that have hundreds of components and need to abstract model changes to any or all of them. Looking at React code and trying to figure out how to turn off specific listeners, or only target certain elements in sub-components when big models update seems like a recipe for hell.<p>And I also don&#x27;t get why something that came out of Facebook has gained such popularity. Have you looked at Facebook&#x27;s website since 2011? Is that a framework you would use to build an app?",
      "time": 1628059244,
      "title": "React Strikes Me as Ridiculous",
      "type": "story"
    },
    {
      "by": "slyall",
      "descendants": 0,
      "id": 28057913,
      "score": 1,
      "time": 1628058889,
      "title": "Babby's First AI Art - Put in some text, get some art",
      "type": "story",
      "url": "https://colab.research.google.com/drive/1n_xrgKDlGQcCF6O-eL3NOd_x4NSqAUjK"
    },
    {
      "by": "dredmorbius",
      "descendants": 0,
      "id": 28057860,
      "kids": [
        28057872
      ],
      "score": 2,
      "time": 1628058428,
      "title": "Amazon’s drone delivery team ‘collapsing,’ losing over 100 workers",
      "type": "story",
      "url": "https://nypost.com/2021/08/03/amazons-drone-delivery-team-collapsing-losing-over-100-workers/"
    },
    {
      "by": "scopio918",
      "descendants": 1,
      "id": 28057849,
      "kids": [
        28058034
      ],
      "score": 2,
      "time": 1628058316,
      "title": "Every Car Made After 2027 May Have Drunk Driving Monitoring System",
      "type": "story",
      "url": "https://www.vice.com/en/article/dyvk9z/every-car-made-after-2027-may-have-drunk-driving-monitoring-system"
    }
  ]
}