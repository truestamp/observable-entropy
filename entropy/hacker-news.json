{
  "stories": [
    {
      "by": "todsacerdoti",
      "descendants": 0,
      "id": 32108793,
      "score": 1,
      "time": 1657896856,
      "title": "Writing and Running a BBS on a Macintosh Plus",
      "type": "story",
      "url": "https://jcs.org/2022/07/15/kludge"
    },
    {
      "by": "elashri",
      "descendants": 0,
      "id": 32108780,
      "score": 1,
      "time": 1657896763,
      "title": "Jetbrains Fleet will be paid product with free plans",
      "type": "story",
      "url": "https://twitter.com/jetbrains_fleet/status/1547895766458322948"
    },
    {
      "by": "mikece",
      "descendants": 0,
      "id": 32108776,
      "score": 1,
      "time": 1657896741,
      "title": "DevOps feedback loop explained: Delayed feedback",
      "type": "story",
      "url": "https://sdtimes.com/devops/devops-feedback-loop-explained-delayed-feedback/"
    },
    {
      "by": "olalonde",
      "descendants": 0,
      "id": 32108759,
      "score": 1,
      "time": 1657896609,
      "title": "Rust: TIL how `+toolchain` works under the hood and it's pretty cool",
      "type": "story",
      "url": "https://old.reddit.com/r/rust/comments/vznctr/til_how_toolchain_works_under_the_hood_and_its/"
    },
    {
      "by": "nudpiedo",
      "descendants": 0,
      "id": 32108735,
      "score": 1,
      "text": "Hi all,<p>I would like to write a programming language with semantics compatible with Haskell alike languages like F# or OCaml. I would make the prototype in python for all its bindings as I hope I can be more productive even if it has not support for pattern matching and ADTs.<p>The only known guide I know about hundreds of &quot;Make you a Lisp&quot; tutorials and about a &quot;Make you a Haskell&quot; one which is not complete.<p>The only part that scares me a bit is the type system for what I would be afraid to have to recreate a Prolog or something similar (my first thought was to delegate this job to a separate engine during the first proofs of concept but I to report errors properly and advance I will end up having to implement my own, much more complex, system). Also in order to implement proper Effect Systems or Lazy Execution&#x2F;evaluation elegantly.<p>If that doesn&#x27;t exist I also would love some pointers in any other programming language, such as Python, Clojure or OCaml.",
      "time": 1657896476,
      "title": "Ask HN: Is there any “Make you a Haskell” tutorial?",
      "type": "story"
    },
    {
      "by": "razin",
      "descendants": 0,
      "id": 32108695,
      "score": 2,
      "time": 1657896203,
      "title": "How a fake cricket league ran for Russian punters",
      "type": "story",
      "url": "https://www.bbc.com/news/world-asia-india-62123966"
    },
    {
      "by": "perihelions",
      "descendants": 0,
      "id": 32108694,
      "score": 1,
      "time": 1657896202,
      "title": "Motion to Suppress Evidence from a Keyword Warrant [pdf]",
      "type": "story",
      "url": "https://s3.documentcloud.org/documents/22077509/google-reverse-suppress.pdf"
    },
    {
      "by": "pseudolus",
      "descendants": 0,
      "id": 32108678,
      "score": 2,
      "time": 1657896116,
      "title": "Microsoft to return to releasing new Windows versions once every 3 years",
      "type": "story",
      "url": "https://arstechnica.com/gadgets/2022/07/report-microsoft-will-return-to-releasing-new-windows-versions-once-every-3-years/"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 32108657,
      "score": 1,
      "time": 1657895982,
      "title": "Architecture of the wood‐wide web (2009)",
      "type": "story",
      "url": "https://nph.onlinelibrary.wiley.com/doi/full/10.1111/j.1469-8137.2009.03069.x"
    },
    {
      "by": "jandrusk",
      "descendants": 0,
      "id": 32108651,
      "score": 1,
      "time": 1657895949,
      "title": "Tor Browser now bypasses internet censorship automatically",
      "type": "story",
      "url": "https://www.bleepingcomputer.com/news/security/tor-browser-now-bypasses-internet-censorship-automatically/"
    }
  ]
}