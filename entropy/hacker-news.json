{
  "stories": [
    {
      "by": "pcaversaccio",
      "descendants": 0,
      "id": 31917972,
      "score": 1,
      "time": 1656494444,
      "title": "PyTorch 1.12",
      "type": "story",
      "url": "https://pytorch.org/blog/pytorch-1.12-released/"
    },
    {
      "by": "ptrkmhms",
      "descendants": 0,
      "id": 31917967,
      "score": 2,
      "time": 1656494403,
      "title": "Microsoft Learned ABCs of D.C",
      "type": "story",
      "url": "https://www.politico.com/story/2011/04/how-microsoft-learned-abcs-of-dc-052483"
    },
    {
      "by": "user_hacking",
      "descendants": 0,
      "id": 31917959,
      "score": 1,
      "time": 1656494344,
      "title": "5G: Où en sont les françAIs?",
      "type": "story",
      "url": "https://www.greenit.fr/2021/01/19/les-francais-contre-la-5g-sondage/"
    },
    {
      "by": "OrderOfChaos",
      "descendants": 0,
      "id": 31917951,
      "score": 2,
      "time": 1656494267,
      "title": "The atheist case for free speech",
      "type": "story",
      "url": "https://onlysky.media/pzuckerman/the-atheist-case-for-free-speech/"
    },
    {
      "by": "tomduncalf",
      "descendants": 0,
      "id": 31917948,
      "score": 1,
      "time": 1656494246,
      "title": "The iPhone at 15: pro photographers on how it changed their world",
      "type": "story",
      "url": "https://www.theguardian.com/artanddesign/2022/jun/29/the-iphone-at-15-pro-photographers-on-how-it-changed-their-world"
    },
    {
      "by": "haunter",
      "descendants": 0,
      "id": 31917946,
      "score": 1,
      "time": 1656494198,
      "title": "Non-English-based programming languages",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Non-English-based_programming_languages"
    },
    {
      "by": "jfcalvo",
      "descendants": 1,
      "id": 31917940,
      "kids": [
        31917943
      ],
      "score": 1,
      "time": 1656494140,
      "title": "Show HN: imglab – Image optimization and processing on-demand",
      "type": "story",
      "url": "https://imglab.io"
    },
    {
      "by": "kazanins",
      "descendants": 0,
      "id": 31917930,
      "score": 1,
      "time": 1656494035,
      "title": "Why Wall Street Expects Robinhood to Be Acquired",
      "type": "story",
      "url": "https://www.barrons.com/articles/robinhood-hood-stock-merger-analysts-51656489138"
    },
    {
      "by": "DmitryNovikov",
      "descendants": 0,
      "id": 31917929,
      "score": 2,
      "time": 1656494019,
      "title": "Challenge: Can you spot an error in C++ code?",
      "type": "story",
      "url": "https://medium.com/@Code_Analysis/challenge-can-you-spot-an-error-in-c-code-9705a7a730e6"
    },
    {
      "by": "hahnchen",
      "descendants": 1,
      "id": 31917928,
      "kids": [
        31917961
      ],
      "score": 1,
      "text": "If two threads lock a mutex at the same time, wont both of them think they both hold the lock?<p>But then, if there’s a way to lock a mutex so that it’s impossible for two threads to do it at the same time, why not use that mechanism to modify whatever shared variable is in question?<p>I imagine that pthread or &lt;insert other threading library&gt;’s provided mutex is, internally, an integer which is set to 1 or 0 depending on the mutex’s state.<p>if i want to share an integer from my program with another thread, why cant I just use whatever is used by the mutex?",
      "time": 1656494018,
      "title": "Ask HN: Can a mutex have a race condition?",
      "type": "story"
    }
  ]
}