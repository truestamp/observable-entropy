{
  "stories": [
    null,
    {
      "by": "eezurr",
      "descendants": 0,
      "id": 29398147,
      "score": 1,
      "text": "Hello HN<p>TL;DR: I probably created the fastest &quot;find all K simple paths&quot; algorithm for a weighted or unweighted, directed or undirected graph. How would I, as an outsider, publish the results? If I&#x27;m right, I&#x27;d like to benefit from this discovery to open doors to more interesting work&#x2F;careers. (I fear, in my 30s, I am at a huge disadvantage for not having any big co. or university to list on my resume)<p>Background:<p>I am outside of the tech &quot;scene&quot; and have no tech&#x2F;academia connections (self taught, no time spent in university). That being said, I&#x27;ve been programming and managing operations (working as the sole dev at small co.) for 10+ years. I recently quit my job to reevaluate my career path and for fun, started working on a city builder video game. The first big problem I had to solve was &quot;how can I efficiently simulate people&#x2F;cars utilizing ALL the fastest paths available to them?&quot; (in case you aren&#x27;t aware, Dijkstra&#x27;s algorithm only returns one shortest path from start to destination).<p>Solution:<p>I created an algorithm that has a time complexity of around O((V+E)log V) and a space complexity of O(n) (for a single node to all other nodes, for all possible shortest paths from each possible destination node to the source node).<p>Now:<p>I tested the algorithm in my game world and watched my digital citizens utilize all the shortest paths available to them for various destinations around the map. For a heavy load test, I created a 100 x 100 grid (where each square is a node), and my code takes 1.75 times longer than Dijkstra&#x27;s. Since I can store the search tree I created, I can move tens of thousands of units around the map without any lag (using SFML vertex arrays for efficiently handling the screen draws).<p>I started researching other existing solutions and to my surprise, my solution is faster. Eppstein (1997) is the fastest solution I came across @ O(E + V log V + kV), where k can grow at some binomial coefficient (thus would be terribly inefficient with hundreds of nodes, let alone thousands, if many fastest paths existed, which is the reality of most cities if you walk).<p>Other notes (excuse my lack of traditional education here):<p>This does not prove P = NP (phew! I&#x27;m safe.). While the number of shortest paths can grow at some binomial coefficient, the classification of all possible paths does not. To explain by example: Going from node (A) to node (G) could possibly use nodes (B, C, D, E, F) along the way. So A--&gt;G is a classification. When we add a new node (H) to (G), that (A) can only get to via (G), the A--&gt;G classification is not changed. On the other hand, if every node connected to every other node, the amount of classifications would increase at an exponential rate (and devolve into all NP-Complete problems), and the possible amount of k paths (not necessarily shortest) would grow super-binomial coefficient-ly.",
      "time": 1638310234,
      "title": "Ask HN: As an outsider, how could I publish a white paper?",
      "type": "story"
    },
    {
      "by": "gigama",
      "descendants": 0,
      "id": 29398137,
      "score": 1,
      "time": 1638310191,
      "title": "China Is Winning the Big Data War",
      "type": "story",
      "url": "https://www.nytimes.com/2021/11/30/opinion/xi-jinping-china-us-data-war.html"
    },
    {
      "by": "Eduard",
      "descendants": 0,
      "id": 29398117,
      "score": 1,
      "time": 1638310058,
      "title": "Beifall.ch",
      "type": "story",
      "url": "https://beifall.ch/"
    },
    {
      "by": "stevenhubertron",
      "descendants": 0,
      "id": 29398114,
      "score": 1,
      "time": 1638310031,
      "title": "ISPs 1 Router – Ensuring connectivity in the home office",
      "type": "story",
      "url": "https://www.drkpxl.com/blog/dual-wan-network"
    },
    {
      "by": "severine",
      "descendants": 0,
      "id": 29398111,
      "score": 1,
      "time": 1638310014,
      "title": "Court Throws Out Messages Obtained by FBI Honeypot Phone Company Anom",
      "type": "story",
      "url": "https://www.vice.com/en/article/pkppqk/court-throws-out-messages-from-anom-finland-spain"
    },
    {
      "by": "TravisDirks",
      "descendants": 0,
      "id": 29398108,
      "score": 1,
      "text": "If the following book were written, would you care? Would you share? Save me from a herculean thankless task with your indifference, or hurl me into the abyss with your prospective interest.<p>Title<p>Moonshots: Ambitious Technology Development - A Book of Methods Developed in the Trenches.<p>Sample Contents:\nIntroduction: The case for Ambitions Technology Development &amp; Productive vs Creative Work. \nPart I: Methods for Individuals - How to organize your work, your day and your mind to maximize the chance of breakthrough.\nPart II: Methods for Teams and Managers - How to organize a team, and a team&#x27;s work to maximize the chance of breakthrough.\nPart III: Methods for Portfolio Managers and Heads of R&amp;D - How to Assess Investment, resource allocation and progress in the absence of predictable progress and traditional KPI&#x27;s.",
      "time": 1638309994,
      "title": "Moonshot: Ambitious Technology Development – A Book of Methods from the Trenches",
      "type": "story"
    },
    {
      "by": "BrendanThompson",
      "descendants": 0,
      "id": 29398104,
      "score": 4,
      "time": 1638309942,
      "title": "Knative applies to become a CNCF incubating project",
      "type": "story",
      "url": "https://opensource.googleblog.com/2021/11/Knative-applies-to-become-CNCF-incubating-project.html"
    },
    {
      "by": "arexxbifs",
      "descendants": 0,
      "id": 29398100,
      "score": 1,
      "time": 1638309873,
      "title": "Evaluation of Single User Systems (1986)",
      "type": "story",
      "url": "http://www.chilton-computing.org.uk/acd/sus/perq_papers/perq_external/p003.htm"
    },
    {
      "by": "feross",
      "descendants": 0,
      "id": 29398089,
      "score": 2,
      "time": 1638309793,
      "title": "Dangerous biological research – is it worth it? (Kevin Esvelt)",
      "type": "story",
      "url": "http://rationallyspeakingpodcast.org/261-dangerous-biological-research-is-it-worth-it-kevin-esvelt/"
    }
  ]
}