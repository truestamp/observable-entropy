{
  "stories": [
    {
      "by": "runningmike",
      "descendants": 0,
      "id": 28603186,
      "score": 1,
      "time": 1632214509,
      "title": "A penchant for patching: After 20 years, the systemâ€™s still a mess",
      "type": "story",
      "url": "https://www.computerworld.com/article/3633645/a-penchant-for-patching-after-20-years-the-systems-still-a-mess.html#tk.rss_all"
    },
    {
      "by": "isellgreatideas",
      "descendants": 0,
      "id": 28603172,
      "score": 1,
      "time": 1632214283,
      "title": "Small things that make a big difference (Impact of design on your business)",
      "type": "story",
      "url": "https://docs.craft.do/editor/d/d46345d9-5c83-0934-9316-6e1b32d805a0/EF532388-1B4C-499E-8C79-81265889B050"
    },
    {
      "by": "sixhobbits",
      "descendants": 0,
      "id": 28603164,
      "score": 1,
      "time": 1632214166,
      "title": "A short introduction to Dask for Pandas developers",
      "type": "story",
      "url": "https://datarevenue.com/en-blog/a-short-introduction-to-dask-for-pandas-developers"
    },
    {
      "by": "DerArztDrache",
      "descendants": 0,
      "id": 28603127,
      "score": 1,
      "time": 1632213785,
      "title": "Create a toxic language detector for Telegram in 4 steps",
      "type": "story",
      "url": "https://n8n.io/blog/create-a-toxic-language-detector-for-telegram/"
    },
    {
      "by": "timdaub",
      "descendants": 0,
      "id": 28603126,
      "score": 1,
      "time": 1632213773,
      "title": "Technical Yield",
      "type": "story",
      "url": "https://timdaub.github.io/2021/09/06/technical-debt-and-yield/"
    },
    {
      "by": "jackhalford",
      "descendants": 0,
      "id": 28603125,
      "score": 1,
      "time": 1632213735,
      "title": "A Journey to the Disappointment Islands (2019)",
      "type": "story",
      "url": "https://www.bbc.com/travel/article/20190319-a-journey-to-the-disappointment-islands"
    },
    {
      "by": "olvy0",
      "descendants": 1,
      "id": 28603118,
      "kids": [
        28603194
      ],
      "score": 10,
      "time": 1632213620,
      "title": "A Tunguska size burst destroyed Tall el-Hammam, Bronze Age city in Jordan Valley",
      "type": "story",
      "url": "https://www.nature.com/articles/s41598-021-97778-3"
    },
    {
      "by": "brijeshpatel007",
      "descendants": 0,
      "id": 28603117,
      "score": 1,
      "time": 1632213610,
      "title": "How to Create Widgets with SwiftUI?",
      "type": "story",
      "url": "https://www.blog.devitpl.com/how-to-create-widget-with-swiftui/"
    },
    {
      "by": "thomaschaplin",
      "descendants": 1,
      "id": 28603106,
      "kids": [
        28603107
      ],
      "score": 2,
      "time": 1632213368,
      "title": "Generate self-describing strings of a given length to help aid software testing",
      "type": "story",
      "url": "https://github.com/thomaschaplin/rust-counter-strings"
    },
    {
      "by": "sschueller",
      "descendants": 1,
      "id": 28603100,
      "kids": [
        28603116
      ],
      "score": 1,
      "text": "Is there a tool that shows code in a different format (alternate configurations of prettier etc. e.g. shows methods in one line instead of split at 80 char. etc.) for different devs yet all commits meet the companies coding standard. For example a plugin for VS code and a JS codebase that runs through prettier.",
      "time": 1632213239,
      "title": "Ask HN: Is there a tool that shows code in different format for different devs?",
      "type": "story"
    }
  ]
}