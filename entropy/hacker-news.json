{
  "stories": [
    {
      "by": "Hard_Space",
      "descendants": 0,
      "id": 27904029,
      "score": 1,
      "time": 1626858858,
      "title": "Teaching AI to Understand and Use Images in Dialogue",
      "type": "story",
      "url": "https://www.unite.ai/teaching-ai-to-understand-and-use-images-in-dialogue/"
    },
    {
      "by": "underscore_ku",
      "descendants": 0,
      "id": 27904012,
      "score": 1,
      "time": 1626858650,
      "title": "Pakistan blocks TikTok again over 'inappropriate content'",
      "type": "story",
      "url": "https://www.france24.com/en/live-news/20210721-pakistan-blocks-tiktok-again-over-inappropriate-content"
    },
    {
      "by": "unexaminedlife",
      "descendants": 2,
      "id": 27903941,
      "kids": [
        27903993
      ],
      "score": 1,
      "text": "I&#x27;ve been programming for a long time.  Over the years I&#x27;ve become way too familiar with the back and forth arguments between different programming language philosophies.  I&#x27;ve generally avoided the more religious of the arguments, but know from reading blogs and such that there are definitely plenty of people in the developer community with perspectives on the extreme ends of the spectrum.  One of those debates has to do with strongly vs loosely typed languages.<p>Most of my career I&#x27;ve worked in languages that are on the more loosely typed side of the argument, but never immersed myself in the other end of the spectrum enough to have much of an opinion.  Until recently.  Because of the sheer number of jobs available for Java and C#, and those typically being the higher paying of the bunch, it&#x27;s always been in the back of my mind that I probably should do some homework and bring those skills up to snuff.<p>It&#x27;s not been difficult.  I&#x27;ve been able to transition into these languages mostly seamlessly it seems.  However, one thing I&#x27;m noticing is my productivity is way down.  Part of that, admittedly, is because I&#x27;m less familiar with the languages.  But now that I&#x27;m familiar enough I can take a step back and see pretty clearly that I almost certainly will NEVER be able to get to my previous levels of productivity simply due to the nature of these languages.  The fact that they&#x27;re statically typed seems to have &quot;on its own&quot; been responsible for perhaps as much as 60-80% of these languages&#x27; bloat.  If I don&#x27;t know how to do something in a loosely typed language I maybe have to refer to a single page of documentation.  When working with strongly-typed languages though, I feel like sometimes in order to get the full picture of what I&#x27;m trying to do, I have to jump around to so many pages of documentation I find sometimes I need to step back to reflect on what it was I was trying to do in the first place to make sure I haven&#x27;t drifted off on a tangent.<p>One argument that is pretty common is the fact that statically typed languages guarantee certain levels of completeness.  If it compiles it probably works.  Then again, when I look at the trade-off as to what is necessary in order to make that possible, I&#x27;d prefer to be independently proficient and (if necessary &#x2F; desired) I&#x27;d want to be able to (as I&#x27;ve done many times in the past) complete large-scale projects on my own in their entirety in a relatively short period of time.  I feel like having complete autonomy in what you&#x27;re doing SHOULD be a virtue all of us as developers should really strive for.<p>Granted, our minds work differently and so it&#x27;s obvious in the open source world that there are a few human beings who have the capacity to create enormous projects on their own in these languages.  If I had to guess I would think it&#x27;s not many people when compared to the number of people who work in loosely typed languages who have accomplished comparably grand achievements.<p>I don&#x27;t know exactly how one would measure this, but knowing what I know now about both ends of this spectrum, I&#x27;d bet a pretty hefty sum of money that a far larger number of people have been able to achieve comparably amazing things using loosely-typed programming languages as compared with strongly typed languages.  If anyone knows of actual metrics being used to track this sort of thing I&#x27;d definitely love to learn more.",
      "time": 1626857809,
      "title": "A unique argument for loosely typed programming languages",
      "type": "story"
    },
    {
      "by": "flanfly",
      "descendants": 0,
      "id": 27903940,
      "score": 1,
      "time": 1626857809,
      "title": "The Crossover Project",
      "type": "story",
      "url": "https://www.hillelwayne.com/tags/crossover-project/"
    },
    {
      "by": "Red_Tarsius",
      "descendants": 0,
      "id": 27903930,
      "score": 2,
      "time": 1626857685,
      "title": "From a China Traveler, by David Rockefeller (1973)",
      "type": "story",
      "url": "https://www.nytimes.com/1973/08/10/archives/from-a-china-traveler.html"
    },
    {
      "by": "susam",
      "descendants": 0,
      "id": 27903912,
      "score": 2,
      "time": 1626857565,
      "title": "How many spaces should come after a period/full stop?",
      "type": "story",
      "url": "https://english.stackexchange.com/q/2544"
    },
    {
      "by": "bloniac",
      "descendants": 0,
      "id": 27903910,
      "score": 1,
      "time": 1626857506,
      "title": "Neutralinojs lightweight crossplatform desktop apps with JavaScript HTML and CSS",
      "type": "story",
      "url": "https://neutralino.js.org/"
    },
    {
      "by": "gergderkson",
      "descendants": 0,
      "id": 27903886,
      "score": 1,
      "time": 1626857108,
      "title": "MongoDB Atlas Serverless Instances",
      "type": "story",
      "url": "https://www.mongodb.com/cloud/atlas/serverless"
    },
    {
      "by": "fctorial",
      "descendants": 0,
      "id": 27903884,
      "score": 3,
      "time": 1626857083,
      "title": "Vulkan Memory Allocator",
      "type": "story",
      "url": "https://gpuopen.com/vulkan-memory-allocator/"
    },
    {
      "by": "lnyan",
      "descendants": 0,
      "id": 27903880,
      "score": 1,
      "time": 1626857036,
      "title": "Meta-Learning: Learning to Learn Fast (2018)",
      "type": "story",
      "url": "https://lilianweng.github.io/lil-log/2018/11/30/meta-learning.html"
    }
  ]
}