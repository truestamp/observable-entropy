{
  "stories": [
    {
      "by": "croes",
      "descendants": 0,
      "id": 30975974,
      "score": 1,
      "time": 1649587751,
      "title": "Exploiting Node.js in Nvidia Geforce Experience",
      "type": "story",
      "url": "https://twitter.com/Laughing_Mantis/status/1512081814994575377"
    },
    {
      "by": "pseudolus",
      "descendants": 0,
      "id": 30975964,
      "score": 1,
      "time": 1649587595,
      "title": "The woman who turned down her share of a $6bn settlement to fight the Sacklers",
      "type": "story",
      "url": "https://www.theguardian.com/us-news/2022/apr/10/ellen-isaacs-purdue-pharma-opioid-settlement"
    },
    {
      "by": "rntn",
      "descendants": 1,
      "id": 30975963,
      "kids": [
        30975965
      ],
      "score": 1,
      "time": 1649587588,
      "title": "Foreigners ready to join Ukraine's fight must pass tougher muster",
      "type": "story",
      "url": "https://www.stripes.com/theaters/europe/2022-04-08/Foreigners-ready-to-join-Ukraines-fight-must-pass-tougher-muster-5627595.html"
    },
    {
      "by": "takiwatanga",
      "descendants": 1,
      "id": 30975959,
      "kids": [
        30975971
      ],
      "score": 1,
      "time": 1649587553,
      "title": "Birdhouse LoRa Mesh Network",
      "type": "story",
      "url": "https://github.com/brucemack/WARS-Birdhouse"
    },
    {
      "by": "Ambolia",
      "descendants": 0,
      "id": 30975955,
      "score": 1,
      "time": 1649587508,
      "title": "US using Intel to fight infowar with Russia,even when the Intel isn't rock solid",
      "type": "story",
      "url": "https://www.nbcnews.com/politics/national-security/us-using-declassified-intel-fight-info-war-russia-even-intel-isnt-rock-rcna23014"
    },
    {
      "by": "pingou",
      "descendants": 0,
      "id": 30975950,
      "score": 1,
      "time": 1649587453,
      "title": "How MBA-wielding bosses boost profits",
      "type": "story",
      "url": "https://www.economist.com/business/2022/04/09/how-mba-wielding-bosses-boost-profits"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 30975890,
      "score": 1,
      "time": 1649586801,
      "title": "They Do the Work, You Reap the Yogurt (2009)",
      "type": "story",
      "url": "https://www.nytimes.com/2009/04/15/dining/15curi.html"
    },
    {
      "by": "Tomte",
      "descendants": 0,
      "id": 30975888,
      "score": 1,
      "time": 1649586775,
      "title": "Yog’s Law and Self-Publishing (2014)",
      "type": "story",
      "url": "https://whatever.scalzi.com/2014/06/20/yogs-law-and-self-publishing/"
    },
    {
      "by": "rcshubhadeep",
      "descendants": 0,
      "id": 30975887,
      "score": 1,
      "text": "I have been tinkering with some DL models and wanted to implement part of it using PyTorch einsum. Before doing so I was wondering about the performance. I have been a bit skeptic as I believe there is a parsing (and even may be somewhat code generation) involved in implementation of einsum (I have never look under the hood of PyTorch or Numpy as to how is it implemented, so I may be completely wrong)<p>So to measure the performance, I created a simple benchmark of comparison. I created a Tensor with these dimensions (BATCH, X, Y). Like so -<p>a = torch.randn(10, 20, 30)<p>Then in Jupyter I did this<p>%%timeit<p>torch.einsum(&#x27;b i j -&gt; b j i&#x27;, a)<p>AND<p>%%timeit<p>a.transpose(1, 2)<p>-----------------------<p>This is the result<p>5.43 µs ± 63.5 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each) [Einsum]<p>1.15 µs ± 2.51 ns per loop (mean ± std. dev. of 7 runs, 1,000,000 loops each) [transpose]<p>Am I doing &#x2F; reading something wrong? Is it a wrong way to benchmark? Or is it really true what I see, that einsum is order of magnitude slower than transpose?",
      "time": 1649586769,
      "title": "Ask HN: Why PyTorch einsum is significantly slower than transpose",
      "type": "story"
    },
    {
      "by": "s1291",
      "descendants": 0,
      "id": 30975886,
      "score": 2,
      "time": 1649586766,
      "title": "NumPy-100",
      "type": "story",
      "url": "https://github.com/rougier/numpy-100"
    }
  ]
}