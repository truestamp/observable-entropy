{
  "stories": [
    {
      "by": "lota-putty",
      "descendants": 0,
      "id": 32118966,
      "score": 1,
      "time": 1657984728,
      "title": "One-hit wonder: How awards, recognition decrease inventors' creativity",
      "type": "story",
      "url": "https://www.sciencedaily.com/releases/2022/07/220714165825.htm"
    },
    {
      "by": "rntn",
      "descendants": 0,
      "id": 32118957,
      "score": 1,
      "time": 1657984659,
      "title": "Toward understanding the communication in sperm whales",
      "type": "story",
      "url": "https://www.cell.com/iscience/fulltext/S2589-0042(22)00664-2?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS2589004222006642%3Fshowall%3Dtrue"
    },
    {
      "by": "pseudopuppet",
      "descendants": 0,
      "id": 32118950,
      "score": 1,
      "time": 1657984625,
      "title": "Show HN: Logto public beta – build sign-in, auth, and identity with ease",
      "type": "story",
      "url": "https://github.com/logto-io/logto"
    },
    {
      "by": "lota-putty",
      "descendants": 0,
      "id": 32118939,
      "score": 1,
      "time": 1657984540,
      "title": "Diphthamide – An Achilles heel shared by plants and animals",
      "type": "story",
      "url": "https://www.sciencedaily.com/releases/2022/07/220715105700.htm"
    },
    {
      "by": "paulhart",
      "descendants": 1,
      "id": 32118936,
      "kids": [
        32118937
      ],
      "score": 1,
      "time": 1657984535,
      "title": "Futel – Free Payphone Service (art/social justice)",
      "type": "story",
      "url": "http://futel.net/"
    },
    {
      "by": "DiamontIsComing",
      "descendants": 0,
      "id": 32118929,
      "score": 1,
      "text": "I&#x27;ve just learned that the stdckdint.h [1] header is in the C2x standard. I&#x27;m not really a C programmer, so I can&#x27;t help but ask myself how does the committee expect libc developers to implement those macros without generics, 128bit integers, or even statement expressions? Are they going to add generics in C2x?\nSo I figured out C veterans on HN would have some ideas on how they would implement this. Really all that I can think is generate functions for every possible type triplet using some preprocessor X_Macro magic (you guys still use the preprocessor, right?). I don&#x27;t know, I&#x27;m kinda spoiled by Rust in this case.\n Hey, we could even help a libc developer with this thread!<p>[1]: http:&#x2F;&#x2F;www.open-std.org&#x2F;jtc1&#x2F;sc22&#x2F;wg14&#x2F;www&#x2F;docs&#x2F;n2792.pdf",
      "time": 1657984501,
      "title": "Ask HN: Thoughts on C23 Stdckdint.h",
      "type": "story"
    },
    {
      "by": "tbyehl",
      "descendants": 0,
      "id": 32118922,
      "score": 1,
      "text": "Three years ago I posted a &#x27;Change my mind&#x27; meme on Facebook dissing The Sopranos. Today FB says my post violated community standards and directs me to resources about self-harm and suicide.<p>Officially I can&#x27;t advertise or go live for 30 days (don&#x27;t do either anyways). Unofficially, my posts are no longer showing up in my own feed nor anyone else&#x27;s. Were I actually at risk of self-harm, I struggle to imagine how socially isolating me is a proper response.<p>Warning and original post: https:&#x2F;&#x2F;i.imgur.com&#x2F;2kzCEza.png<p>Restrictions: https:&#x2F;&#x2F;i.imgur.com&#x2F;VHCWfbt.png",
      "time": 1657984438,
      "title": "Tell HN: Dis the Sopranos? Machine Learning Put Me on Facebook Suicide Watch",
      "type": "story"
    },
    {
      "by": "tcper",
      "descendants": 0,
      "id": 32118904,
      "score": 1,
      "time": 1657984325,
      "title": "Show HN: Text-Diff Powered by WebAssembly",
      "type": "story",
      "url": "https://tcper.github.io/wasm-similar-demo/"
    },
    {
      "by": "rntn",
      "descendants": 0,
      "id": 32118884,
      "score": 2,
      "time": 1657984224,
      "title": "I am part of a dying breed of Taiwanese",
      "type": "story",
      "url": "https://lite.cnn.com/en/article/h_69251e2b8d581e1f06aa12d16038044b"
    },
    {
      "by": "sandreas",
      "descendants": 0,
      "id": 32118883,
      "score": 1,
      "text": "Hey HN,<p>I&#x27;m looking for a state of the art non-cryptographic hash algorithm specifically for audio data to identify audiofiles by raw audio ignoring metadata.<p>My current choice would be either:<p><pre><code>  - xxHash (my current favorite)\n  - CrapWow\n  - Murmur 3a\n  - SpookyHash\n</code></pre>\nIs there a better and faster one?<p>A good and reliable implementation in C# would be a bonus.<p>Thank you.",
      "time": 1657984222,
      "title": "Ask HN: Best non-cryptograpic hashing algorithm for audio data?",
      "type": "story"
    }
  ]
}