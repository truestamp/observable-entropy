{
  "stories": [
    null,
    {
      "by": "jdmark",
      "descendants": 0,
      "id": 31596648,
      "score": 1,
      "time": 1654186181,
      "title": "Low-Cost Gel Film Can Pluck Drinking Water from Desert Air",
      "type": "story",
      "url": "https://cockrell.utexas.edu/news/archive/9494-low-cost-gel-film-can-pluck-drinking-water-from-desert-air"
    },
    {
      "by": "aiallthewaydown",
      "descendants": 0,
      "id": 31596607,
      "score": 1,
      "time": 1654186028,
      "title": "Sheryl Sandberg Stepping Down as COO of Facebook Parent Meta Platforms",
      "type": "story",
      "url": "https://www.wsj.com/articles/sheryl-sandberg-stepping-down-from-meta-platforms-11654112778"
    },
    {
      "by": "kristianpaul",
      "descendants": 0,
      "id": 31596589,
      "score": 1,
      "time": 1654185971,
      "title": "Rumor that Apple will launch a web search engine pops up again",
      "type": "story",
      "url": "https://appleinsider.com/articles/22/06/02/rumor-that-apple-will-launch-a-web-search-engine-pops-up-again"
    },
    {
      "by": "lichtenberger",
      "descendants": 0,
      "id": 31596572,
      "score": 1,
      "text": "Hello,<p>I want to find enthusiastic OSS frontend developers for my JSON data store project[1], which is able to retain the full revision history of a database resource (binary JSON) through small sized copy-on-write snapshots of the main index tree of tries and a novel sliding snapshot algorithm.<p>As I&#x27;m a fan of compilers (http:&#x2F;&#x2F;brackit.io) I think either working on the current frontend with Svelte[2], which is currently really dated and uses Sapper or a new frontend using SolidJS would be great.<p>What are the advantages&#x2F;disadvantages of both frameworks in your opinion? I&#x27;m a backend software engineer, but maybe SolidJS is more familiar to frontend devs because of JSX and at least in benchmarks it seems to be faster. But maybe the differences except for the different syntaxes aren&#x27;t that big.<p>I envision visualizations for comparing revisions of resources or subtrees therein and also to visualize time travel queries. A screenshot of the old frontend: https:&#x2F;&#x2F;github.com&#x2F;sirixdb&#x2F;sirix&#x2F;blob&#x2F;master&#x2F;Screenshot%20from%202020-09-28%2018-50-58.png<p>Let me know which framework you&#x27;d prefer for the task at hand and what are the advantages&#x2F;disadvantages in your opinion for both of them in general.<p>If you want to help, it&#x27;s even better. Let me know :-)<p>[1] https:&#x2F;&#x2F;sirix.io || https:&#x2F;&#x2F;github.com&#x2F;sirixdb&#x2F;sirix\n[2] https:&#x2F;&#x2F;github.com&#x2F;sirixdb&#x2F;sirix-svelte-frontend",
      "time": 1654185895,
      "title": "Ask HN: Do you prefer Svelte or SolidJS?",
      "type": "story"
    },
    {
      "by": "andsoitis",
      "descendants": 0,
      "id": 31596571,
      "score": 1,
      "time": 1654185893,
      "title": "Sheryl Sandberg's Advertising Jackpot",
      "type": "story",
      "url": "https://www.axios.com/newsletters/axios-login"
    },
    {
      "by": "monroewalker",
      "descendants": 0,
      "id": 31596561,
      "score": 2,
      "text": "I&#x27;ve been using LazyGit [1] for a while and its made me realize how much easier a terminal ui can make things. It often makes me wish there was a TUI for the specific workflows I have when working in a given repo. Are there any programs that take some config file and produce a TUI as output? Eg. you have a file with a list of commands and aliases and it produces the corresponding TUI? Or are there any libraries which take minimal effort to add TUI elements to?<p>[1] https:&#x2F;&#x2F;github.com&#x2F;jesseduffield&#x2F;lazygit",
      "time": 1654185854,
      "title": "Ask HN: Are there any high-level TUI tools?",
      "type": "story"
    },
    {
      "by": "todsacerdoti",
      "descendants": 0,
      "id": 31596536,
      "score": 1,
      "time": 1654185775,
      "title": "Why .app and .dev are perfect homes for developer tools",
      "type": "story",
      "url": "https://blog.google/technology/developers/why-app-and-dev-are-perfect-homes-for-developer-tools/"
    },
    {
      "by": "rntn",
      "descendants": 0,
      "id": 31596523,
      "score": 1,
      "time": 1654185728,
      "title": "Backpropagation with spatiotemporal adjustment for deep spiking neural networks",
      "type": "story",
      "url": "https://www.cell.com/patterns/fulltext/S2666-3899(22)00119-2?_returnURL=https%3A%2F%2Flinkinghub.elsevier.com%2Fretrieve%2Fpii%2FS2666389922001192%3Fshowall%3Dtrue"
    },
    {
      "by": "todsacerdoti",
      "descendants": 0,
      "id": 31596507,
      "score": 1,
      "time": 1654185650,
      "title": "Best Practices for Deploying Language Models",
      "type": "story",
      "url": "https://openai.com/blog/best-practices-for-deploying-language-models/"
    }
  ]
}