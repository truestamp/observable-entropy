{
  "stories": [
    {
      "by": "airhangerf15",
      "descendants": 0,
      "id": 29685392,
      "score": 1,
      "time": 1640455777,
      "title": "A Microsoft Bot Is Forking Projects and Changing Their Licenses",
      "type": "story",
      "url": "https://floss.social/@carlschwan/107508229390635109"
    },
    {
      "by": "ContrarianBrit",
      "descendants": 0,
      "id": 29685367,
      "score": 1,
      "time": 1640455615,
      "title": "The Myth of ‘Pagan’ Christmas",
      "type": "story",
      "url": "https://unherd.com/2021/12/the-myth-of-pagan-christmas-2/"
    },
    {
      "by": "tqi",
      "descendants": 0,
      "id": 29685350,
      "score": 1,
      "text": "Finding a home test kit has been basically impossible in the bay area this last week, which is very frustrating. Curious to understand how widespread this experience is, and how much it&#x27;s an issue of unusually high local demand vs the US dropping the ball.",
      "time": 1640455487,
      "title": "Ask HN: How hard is it to find a home Covid test kit in your city/country?",
      "type": "story"
    },
    {
      "by": "marcoslozada",
      "descendants": 0,
      "id": 29685342,
      "score": 1,
      "time": 1640455417,
      "title": "$SOS token for the largest NFT community, to pay tribute, protect and promote",
      "type": "story",
      "url": "https://www.theopendao.com/"
    },
    {
      "by": "schleiss",
      "descendants": 0,
      "id": 29685311,
      "score": 1,
      "time": 1640455240,
      "title": "Diseconomies of Scale",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/Diseconomies_of_scale"
    },
    {
      "by": "scotty79",
      "descendants": 0,
      "id": 29685302,
      "score": 1,
      "text": "In most languages creating array, list, set, mapping, usually requires different code to create them and to access them.<p>Do you know any language where you create generic collection and just specify what you require of it?<p>For example, you might specify that you require collection to be indexed with numbers, and have quick access to elements by their index. Or have ability to add element at the end quickly or have  the ability to find next element quickly. Or have elements with quick parent access, or quick children access, or quick arbitrary inserts or you want collection to be indexed multidimensionally.<p>Language itself would pick the right algorithms for your collection for example picking fixed length immutable array (for the purposes of iteration), but also set (for quickly checking presence of element).<p>Creation, access and writing should be kept as similar as possible with different algorithms.<p>This system should of course be extensible. So that you could implement fast access to elements by creating and updating various task specific indexes into your data and have them available though built in language syntax.<p>The only thing that comes to my mind that somewhat attempted this is C++ template library, which offers various collections and iterators while trying to keep the interface mostly algorithm agnostic.",
      "time": 1640455210,
      "title": "Ask HN: Do you know any computer language where collections are unified?",
      "type": "story"
    },
    {
      "by": "Newstime",
      "descendants": 1,
      "id": 29685288,
      "kids": [
        29685289
      ],
      "score": 1,
      "time": 1640455162,
      "title": "NewsTime",
      "type": "story",
      "url": "https://www.arabdown.org/"
    },
    {
      "by": "simonebrunozzi",
      "descendants": 0,
      "id": 29685283,
      "score": 1,
      "time": 1640455136,
      "title": "Drug harms in the UK: a multicriteria decision analysis",
      "type": "story",
      "url": "https://www.thelancet.com/journals/lancet/article/PIIS0140-6736(10)61462-6/fulltext"
    },
    {
      "by": "simonebrunozzi",
      "descendants": 0,
      "id": 29685240,
      "score": 1,
      "time": 1640454857,
      "title": "High-Tech Employee Antitrust Litigation (2011)",
      "type": "story",
      "url": "https://en.wikipedia.org/wiki/High-Tech_Employee_Antitrust_Litigation"
    },
    {
      "by": "bearbin",
      "descendants": 0,
      "id": 29685209,
      "score": 1,
      "time": 1640454626,
      "title": "Practical Transformer Winding",
      "type": "story",
      "url": "https://ludens.cl/Electron/trafos/trafos.html"
    }
  ]
}