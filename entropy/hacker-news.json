{
  "stories": [
    {
      "by": "elras",
      "descendants": 0,
      "id": 31533770,
      "score": 1,
      "time": 1653679491,
      "title": "TensorFlow Unified Distributed Training API",
      "type": "story",
      "url": "https://www.infoq.com/news/2022/05/tensorflow-dtensor/"
    },
    {
      "by": "mooreds",
      "descendants": 0,
      "id": 31533712,
      "score": 1,
      "time": 1653679160,
      "title": "The median doesn't tell you anything",
      "type": "story",
      "url": "https://briandfoy.github.io/the-median-doesn-t-matter/"
    },
    {
      "by": "PaulHoule",
      "descendants": 0,
      "id": 31533710,
      "score": 1,
      "time": 1653679155,
      "title": "30 years after Mt. Pinatubo: the relationship between vulcanism and climate",
      "type": "story",
      "url": "https://www.aeronomie.be/en/news/2021/30-years-after-mt-pinatubo-eruption-illustration-relationship-between-volcanoes-and"
    },
    {
      "by": "adrianvincent",
      "descendants": 0,
      "id": 31533692,
      "score": 1,
      "text": "My idea is a very simple logging SaaS, where you can submit a log by simply make a POST request with your message.  The message can be text or JSON.<p>You will be able to view and search your logs on our website. Everything is managed.<p>That&#x27;s it. It doesn&#x27;t assume anything - the only information we receive is the message you send in the POST request. You can add optional labels, log levels etc.<p>There are a lot of advanced logging services out there, but I have not found something simple like this.<p>I&#x27;ve made a prototype which I use for my own projects. It&#x27;s so much easier compared to logging to disk and using command line tools like grep and awk to search through txt files.<p>Would anyone be interested in using something like this?",
      "time": 1653679036,
      "title": "Ask HN: A simple logging cloud SasS – is this a good idea?",
      "type": "story"
    },
    {
      "by": "aixiii",
      "descendants": 1,
      "id": 31533658,
      "kids": [
        31533659
      ],
      "score": 1,
      "time": 1653678907,
      "title": "Serious Dos Vulnerability",
      "type": "story",
      "url": "https://www.theoreticalstructures.io/2022/05/27/the-unbearable-lightness-of-web-vulnerabilities/"
    },
    {
      "by": "noch",
      "descendants": 0,
      "id": 31533649,
      "score": 2,
      "time": 1653678871,
      "title": "Foundry – A toolkit for Ethereum application development written in rust",
      "type": "story",
      "url": "https://getfoundry.sh/"
    },
    {
      "by": "matt_d",
      "descendants": 0,
      "id": 31533620,
      "score": 1,
      "time": 1653678728,
      "title": "Where's the Race Condition? “works on AArch64, how can it fail on x86_64?”",
      "type": "story",
      "url": "https://cpufun.substack.com/p/wheres-the-race-condition"
    },
    {
      "by": "pmoriarty",
      "descendants": 0,
      "id": 31533618,
      "score": 1,
      "time": 1653678719,
      "title": "The Void (Linux) Distribution",
      "type": "story",
      "url": "https://voidlinux.org/"
    },
    {
      "by": "apc999",
      "descendants": 0,
      "id": 31533611,
      "score": 2,
      "time": 1653678691,
      "title": "Metadata Synchronization: Design, Implementation and Optimization",
      "type": "story",
      "url": "https://www.alluxio.io/blog/metadata-synchronization-in-alluxio-design-implementation-and-optimization/"
    },
    {
      "by": "exists",
      "descendants": 0,
      "id": 31533567,
      "score": 1,
      "time": 1653678447,
      "title": "Deno News #43",
      "type": "story",
      "url": "https://deno.news/archive/43-deno-turns-4-new-deploy-pricing-and-v122"
    }
  ]
}