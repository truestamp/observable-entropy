{
  "stories": [
    {
      "by": "optimalsolver",
      "descendants": 0,
      "id": 30238973,
      "score": 1,
      "time": 1644196716,
      "title": "School Closures In 1918 Flu Had No Impact On Educational Or Career Attainment",
      "type": "story",
      "url": "https://direct.mit.edu/rest/article-abstract/doi/10.1162/rest_a_01170/109263/School-Closures-during-the-1918-Flu-Pandemic?redirectedFrom=fulltext"
    },
    {
      "by": "nstart",
      "descendants": 0,
      "id": 30238946,
      "score": 1,
      "time": 1644196454,
      "title": "Disney, Netflix, Apple: is anyone winning the streaming wars?",
      "type": "story",
      "url": "https://www.economist.com/business/disney-netflix-apple-is-anyone-winning-the-streaming-wars/21807591u"
    },
    {
      "by": "JNRowe",
      "descendants": 0,
      "id": 30238941,
      "score": 1,
      "time": 1644196421,
      "title": "Factoring composite numbers into nearly equal factors",
      "type": "story",
      "url": "https://blog.plover.com/math/finding-factors.html"
    },
    {
      "by": "ildaron_ron",
      "descendants": 1,
      "id": 30238937,
      "kids": [
        30238938
      ],
      "score": 1,
      "time": 1644196400,
      "title": "RaspberryPi for control robot by the mind with shield PiEEG (Open-source BCI)",
      "type": "story",
      "url": "https://arxiv.org/abs/2202.01936"
    },
    {
      "by": "tiagobraw",
      "descendants": 0,
      "id": 30238928,
      "score": 2,
      "time": 1644196334,
      "title": "Some of the error messages produced by Apple's MPW C compiler",
      "type": "story",
      "url": "https://www.cs.cmu.edu/~jasonh/personal/humor/compile.html"
    },
    {
      "by": "todsacerdoti",
      "descendants": 0,
      "id": 30238920,
      "score": 2,
      "time": 1644196273,
      "title": "Hot Reloading Rust: Windows and Linux",
      "type": "story",
      "url": "https://johnaustin.io/articles/2022/hot-reloading-rust"
    },
    {
      "by": "jonnydubowsky",
      "descendants": 0,
      "id": 30238896,
      "score": 4,
      "time": 1644196104,
      "title": "Google Says Web 3.0 Won't Kill SEO",
      "type": "story",
      "url": "https://www.seroundtable.com/web-3-0-wont-kill-seo-32870.html"
    },
    {
      "by": "exolymph",
      "descendants": 0,
      "id": 30238893,
      "score": 1,
      "time": 1644196075,
      "title": "The Communicating Vessels",
      "type": "story",
      "url": "https://covidianaesthetics.substack.com/p/the-communicating-vessels-cornelius"
    },
    {
      "by": "hardlyknowwho",
      "descendants": 0,
      "id": 30238890,
      "score": 3,
      "text": "The languages&#x2F;packages I use don&#x27;t natively support a way to log a message regardless of the current log level. First, is this common, and second, if it is, why is that? I&#x27;ve always felt like this is a gross oversight. For example, when my service starts, I would like it to ALWAYS log &quot;Service started.&quot; I don&#x27;t want that message to disappear when I go to production and the log level is set higher than that message deserves in a world defined by urgency. And I don&#x27;t want to set it to WARN or ERROR.<p>Other extra-level logging methods I could make use of are: log.random (with argument(s) defining how random), log.context (everything the runtime knows at that point), and log.assert. These may be asking too much of a logging module, but on the other hand, if they lead to software that&#x27;s easier to maintain, maybe they&#x27;re worth bargaining for?<p>Anyway, I would love to hear your thoughts on how&#x2F;why we ended up in a logging straitjacket of sorts. And yeah, I&#x27;ve defined ALWAYS as custom level before, and gotten it to work; I&#x27;m curious to know why it&#x27;s not built in.",
      "time": 1644196067,
      "title": "Ask HN: Where is log level ALWAYS?",
      "type": "story"
    },
    {
      "by": "wyuenho",
      "descendants": 0,
      "id": 30238885,
      "score": 1,
      "time": 1644195997,
      "title": "Step-ca private CA and and ACME server",
      "type": "story",
      "url": "https://github.com/smallstep/certificates"
    }
  ]
}