{
  "stories": [
    {
      "by": "SQL2219",
      "descendants": 0,
      "id": 29996062,
      "score": 1,
      "time": 1642610678,
      "title": "Police in this tiny Alabama town suck drivers into legal ‘black hole’",
      "type": "story",
      "url": "https://www.al.com/news/2022/01/police-in-this-tiny-alabama-town-suck-drivers-into-legal-black-hole.html"
    },
    {
      "by": "tslmy",
      "descendants": 0,
      "id": 29996037,
      "score": 2,
      "time": 1642610574,
      "title": "A tour to my Zettelkasten note clusters",
      "type": "story",
      "url": "https://lmy.medium.com/a-tour-to-my-zettelkasten-notes-dc26a75e5257"
    },
    {
      "by": "scaglio",
      "descendants": 0,
      "id": 29996029,
      "score": 1,
      "time": 1642610545,
      "title": "Godsip Club – Collection of curiosities about myths and religions",
      "type": "story",
      "url": "https://godsip.club/"
    },
    {
      "by": "detaro",
      "descendants": 0,
      "id": 29996027,
      "score": 1,
      "time": 1642610542,
      "title": "Orca Security, AWS, and the Killer Whale of a Problem",
      "type": "story",
      "url": "https://www.lastweekinaws.com/blog/orca-security-aws-and-the-killer-whale-of-a-problem/"
    },
    {
      "by": "mollerhoj",
      "descendants": 0,
      "id": 29996023,
      "score": 1,
      "text": "I find that my ruby code more and more resembles functional programming:<p>Instance variables are always set in the constructor, and almost never mutated.<p>The thing I like about OOP is really just that the methods of an object don&#x27;t have to take a bunch of parameters, but that it instead can rely on the instance variables. I guess in functional programming, this would be something like having a (constructor) function that returns a hash of methods that have been given what in OOP would be instance variables as their first parameters, and then only need non-instance variables through currying. My question is, is there a functional programming language that not only supports, but `encourages` this OOP style programming?",
      "time": 1642610536,
      "title": "Ask HN: OOP in Functional Programming Language",
      "type": "story"
    },
    {
      "by": "lioeters",
      "descendants": 0,
      "id": 29995996,
      "score": 1,
      "time": 1642610430,
      "title": "Firebird 6502 Computer",
      "type": "story",
      "url": "https://www.roberthenke.com/technology/firebird.html"
    },
    {
      "by": "sylvain_kerkour",
      "descendants": 0,
      "id": 29995968,
      "score": 1,
      "time": 1642610313,
      "title": "How to securely encrypt a file with an insecure password in Rust",
      "type": "story",
      "url": "https://kerkour.com/rust-file-encryption-chacha20poly1305-argon2/"
    },
    {
      "by": "geox",
      "descendants": 0,
      "id": 29995960,
      "score": 2,
      "time": 1642610288,
      "title": "Quantum computing in silicon hits 99% accuracy",
      "type": "story",
      "url": "https://www.scienceinpublic.com.au/UNSW"
    },
    {
      "by": "lehi",
      "descendants": 0,
      "id": 29995959,
      "score": 1,
      "time": 1642610280,
      "title": "Starving Afghans Use Crypto to Sidestep U.S. Sanctions, Banks, and the Taliban",
      "type": "story",
      "url": "https://theintercept.com/2022/01/19/crypto-afghanistan-sanctions-taliban/"
    },
    {
      "by": "gmays",
      "descendants": 0,
      "id": 29995955,
      "score": 2,
      "time": 1642610266,
      "title": "In a First, an 'Atomic Fountain' Has Measured the Curvature of Spacetime",
      "type": "story",
      "url": "https://www.space.com/space-time-curvature-measured-atomic-fountain"
    }
  ]
}