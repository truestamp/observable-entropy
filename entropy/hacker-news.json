{
  "stories": [
    {
      "by": "zaik",
      "descendants": 0,
      "id": 30866746,
      "score": 1,
      "time": 1648732199,
      "title": "Russia creates certificate authority in response to sanctions",
      "type": "story",
      "url": "https://www.feistyduck.com/bulletproof-tls-newsletter/issue_87_russia_creates_certificate_authority_in_response_to_sanctions"
    },
    {
      "by": "valprop1",
      "descendants": 0,
      "id": 30866738,
      "score": 1,
      "time": 1648732147,
      "title": "The New ArangoDB Datasource for Apache Spark",
      "type": "story",
      "url": "https://www.arangodb.com/2022/03/introducing-the-new-arangodb-datasource-for-apache-spark/"
    },
    {
      "by": "ThomasPr",
      "descendants": 0,
      "id": 30866725,
      "score": 1,
      "time": 1648732053,
      "title": "Using TypeScript to validate translations at compile time",
      "type": "story",
      "url": "https://thomas.preissler.me/blog/2022/03/30/using-typescript-to-validate-translations-at-compile-time"
    },
    {
      "by": "hardwaresofton",
      "descendants": 0,
      "id": 30866724,
      "score": 1,
      "time": 1648732048,
      "title": "The future of free and open source is AGPL",
      "type": "story",
      "url": "https://vadosware.io/post/the-future-of-free-and-open-source-is-agpl/"
    },
    {
      "by": "d3nigma",
      "descendants": 1,
      "id": 30866699,
      "kids": [
        30866735
      ],
      "score": 1,
      "text": "Whenever I need to design an API for a service, I am a bit lost with the HTTP status codes.<p>So what I kinda need is a simple, clear &amp; searchable website with all status codes (number, name, description, example).<p>Knowing the web. Something like this is probably already out there, but I haven&#x27;t found it yet.",
      "time": 1648731827,
      "title": "Is there a website for HTTP status code just like gitmoji.dev?",
      "type": "story"
    },
    {
      "by": "Tijdreiziger",
      "descendants": 0,
      "id": 30866681,
      "kids": [
        30866683
      ],
      "score": 1,
      "time": 1648731662,
      "title": "Memalign Dungeon",
      "type": "story",
      "url": "https://memalign.github.io/m/dungeon/index.html"
    },
    {
      "by": "_ttg",
      "descendants": 0,
      "id": 30866671,
      "score": 1,
      "time": 1648731614,
      "title": "How to forgive someone who isn’t sorry",
      "type": "story",
      "url": "https://www.vox.com/22967752/how-to-forgive-someone-who-isnt-sorry-wont-apologize"
    },
    {
      "by": "doener",
      "descendants": 0,
      "id": 30866603,
      "score": 1,
      "time": 1648731140,
      "title": "The degrading treatment of Ukraine’s internet",
      "type": "story",
      "url": "https://www.economist.com/science-and-technology/2022/03/26/the-degrading-treatment-of-ukraines-internet"
    },
    {
      "by": "doener",
      "descendants": 0,
      "id": 30866601,
      "score": 1,
      "time": 1648731083,
      "title": "The Ukrainian Cyberwar That Wasn’t",
      "type": "story",
      "url": "https://www.nytimes.com/2022/03/11/opinion/russia-ukraine-cyberattacks.html"
    },
    {
      "by": "ghostoftiber",
      "descendants": 1,
      "id": 30866597,
      "kids": [
        30866704
      ],
      "score": 4,
      "time": 1648731070,
      "title": "Ubiquiti INC. vs. KREBS – Ubiquiti sues Krebs for covering their breach",
      "type": "story",
      "url": "https://www.courtlistener.com/docket/63197557/ubiquiti-inc-v-krebs/"
    }
  ]
}