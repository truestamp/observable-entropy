{
  "stories": [
    {
      "by": "nynyny7",
      "descendants": 0,
      "id": 31238001,
      "score": 1,
      "time": 1651511965,
      "title": "An Intro to x86_64 Reverse Engineering",
      "type": "story",
      "url": "https://nora.codes/tutorial/an-intro-to-x86_64-reverse-engineering/"
    },
    {
      "by": "makaimc",
      "descendants": 0,
      "id": 31237984,
      "score": 1,
      "time": 1651511894,
      "title": "MediaPipe for Dummies",
      "type": "story",
      "url": "https://www.assemblyai.com/blog/mediapipe-for-dummies/"
    },
    {
      "by": "Rperry2174",
      "descendants": 0,
      "id": 31237983,
      "score": 1,
      "time": 1651511893,
      "title": "Tracing a Single Operation in Distributed Systems",
      "type": "story",
      "url": "https://hazelcast.com/blog/tracing-a-single-operation-in-distributed-systems/"
    },
    {
      "by": "tomrod",
      "descendants": 0,
      "id": 31237980,
      "score": 1,
      "time": 1651511883,
      "title": "The Atheist Experience Weekly Call-In Show",
      "type": "story",
      "url": "https://www.youtube.com/channel/UCprs0DXUS-refN1i8FkQkdg"
    },
    {
      "by": "_benj",
      "descendants": 0,
      "id": 31237979,
      "score": 1,
      "time": 1651511879,
      "title": "Pharo â€“ The Immersive Programming Experience",
      "type": "story",
      "url": "https://pharo.org/"
    },
    {
      "by": "amirGi",
      "descendants": 0,
      "id": 31237973,
      "score": 1,
      "time": 1651511851,
      "title": "Library for Life",
      "type": "story",
      "url": "https://handbookto.life/"
    },
    {
      "by": "nigerian1981",
      "descendants": 0,
      "id": 31237876,
      "score": 1,
      "time": 1651511380,
      "title": "Yuga Labs apologises after sale of virtual land crashes Ethereum",
      "type": "story",
      "url": "https://www.theguardian.com/technology/2022/may/02/yuga-labs-apologises-after-sale-of-virtual-land-crashes-ethereum"
    },
    {
      "by": "aero-glide2",
      "descendants": 1,
      "id": 31237847,
      "kids": [
        31237862
      ],
      "score": 2,
      "time": 1651511236,
      "title": "Ask HN: How to Become a 100x Engineer?",
      "type": "story"
    },
    {
      "by": "joshstr",
      "descendants": 0,
      "id": 31237822,
      "score": 11,
      "time": 1651511107,
      "title": "Why People Should Never Ever Use DuckDuckGo (2020)",
      "type": "story",
      "url": "http://techrights.org/2020/07/02/ddg-privacy-abuser-in-disguise/"
    },
    {
      "by": "srathi",
      "descendants": 0,
      "id": 31237811,
      "score": 1,
      "text": "Go-scrub is a utility to mask a given set of field names from a deeply nested struct at any level. It is useful for logging structs which may have customer inputs (such as passwords, keys, etc.). It uses the &quot;reflect&quot; package to modify the struct values at runtime.<p>Code: <a href=\"https:&#x2F;&#x2F;github.com&#x2F;ssrathi&#x2F;go-scrub\" rel=\"nofollow\">https:&#x2F;&#x2F;github.com&#x2F;ssrathi&#x2F;go-scrub</a><p>Blog post with an explanation: <a href=\"https:&#x2F;&#x2F;www.nutanix.dev&#x2F;2022&#x2F;04&#x2F;22&#x2F;golang-the-art-of-reflection&#x2F;\" rel=\"nofollow\">https:&#x2F;&#x2F;www.nutanix.dev&#x2F;2022&#x2F;04&#x2F;22&#x2F;golang-the-art-of-reflect...</a>",
      "time": 1651511059,
      "title": "Show HN: Go-scrub: Scrubbing sensitive fields from a deeply nested Go struct",
      "type": "story",
      "url": "https://github.com/ssrathi/go-scrub"
    }
  ]
}